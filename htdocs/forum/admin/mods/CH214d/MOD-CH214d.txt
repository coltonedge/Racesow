##############################################################
## MOD Title:		Categories Hierarchy
## MOD Author:		Ptirhiik < ptirhiik@clanmckeen.com > (Pierre) http://ptifo.clanmckeen.com
## MOD Description:	
##		This mod will add sub-forums functionalities (and many more) to your phpBB board.
##		Don't go blindly with easyMOD without having done what is quoted in the Do It Yourself instruction block !
##
## MOD Version:		2.1.4d
##
## Installation Level:	Intermediate
## Installation Time:	3 Hours
## Files To Edit:
##			common.php
##			faq.php
##			groupcp.php
##			login.php
##			memberlist.php
##			modcp.php
##			posting.php
##			privmsg.php
##			profile.php
##			search.php
##			viewonline.php
##			viewtopic.php
##
##			admin/admin_board.php
##			admin/admin_groups.php
##			admin/admin_mass_email.php
##			admin/admin_ranks.php
##			admin/admin_smilies.php
##			admin/admin_styles.php
##			admin/admin_users.php
##			admin/admin_words.php
##			admin/index.php
##			admin/page_footer_admin.php
##			admin/page_header_admin.php
##			admin/pagestart.php
##
##			includes/auth.php
##			includes/bbcode.php
##			includes/db.php
##			includes/functions.php
##			includes/functions_admin.php
##			includes/functions_post.php
##			includes/functions_search.php
##			includes/functions_selects.php
##			includes/page_header.php
##			includes/page_tail.php
##			includes/sessions.php
##			includes/topic_review.php
##			includes/usercp_register.php
##			includes/usercp_viewprofile.php
##
##			templates/subSilver/admin/group_edit_body.tpl
##			templates/subSilver/admin/index_body.tpl
##			templates/subSilver/admin/index_navigate.tpl
##			templates/subSilver/admin/page_footer.tpl
##			templates/subSilver/admin/page_header.tpl
##			templates/subSilver/admin/styles_edit_body.tpl
##			templates/subSilver/admin/user_ban_body.tpl
##
##			templates/subSilver/agreement.tpl
##			templates/subSilver/confirm_body.tpl
##			templates/subSilver/faq_body.tpl
##			templates/subSilver/groupcp_info_body.tpl
##			templates/subSilver/groupcp_user_body.tpl
##			templates/subSilver/jumpbox.tpl
##			templates/subSilver/login_body.tpl
##			templates/subSilver/memberlist_body.tpl
##			templates/subSilver/message_body.tpl
##			templates/subSilver/modcp_move.tpl
##			templates/subSilver/modcp_split.tpl
##			templates/subSilver/modcp_viewip.tpl
##			templates/subSilver/overall_footer.tpl
##			templates/subSilver/overall_header.tpl
##			templates/subSilver/posting_preview.tpl
##			templates/subSilver/posting_smilies.tpl
##			templates/subSilver/posting_topic_review.tpl
##			templates/subSilver/privmsgs_body.tpl
##			templates/subSilver/privmsgs_read_body.tpl
##			templates/subSilver/profile_avatar_gallery.tpl
##			templates/subSilver/profile_send_email.tpl
##			templates/subSilver/profile_send_pass.tpl
##			templates/subSilver/profile_view_body.tpl
##			templates/subSilver/search_body.tpl
##			templates/subSilver/search_results_posts.tpl
##			templates/subSilver/simple_footer.tpl
##			templates/subSilver/simple_header.tpl
##			templates/subSilver/subSilver.cfg
##			templates/subSilver/subSilver.css
##			templates/subSilver/viewonline_body.tpl
##			templates/subSilver/viewtopic_poll_result.tpl
##
## Included Files:	root/*.*
## License:		http://opensource.org/licenses/gpl-license.php GNU General Public License v2
##############################################################
## For security purposes, please check: http://www.phpbb.com/mods/
## for the latest version of this MOD. Although MODs are checked
## before being allowed in the MODs Database there is no guarantee
## that there are no security problems within the MOD. No support
## will be given for MODs not found within the MODs Database which
## can be found at http://www.phpbb.com/mods/
##############################################################
## Author Notes:
##
##	This mod only support MySQL, Postgresql, msSQL, odbc-msSQL. msAccess is not supported.
## 
##
##	Complementary notes :
##	-------------------
##	- This mod adds Markus Petrux's Fix message_die for multiple errors MOD (http://www.phpbb.com/phpBB/viewtopic.php?t=233542)
##	- "Today/yesterday at" is based on Netclectic's one (http://www.phpbb.com/phpBB/viewtopic.php?t=158812)
##	- Message Sub-title feature is based on Morpheus2matrix's "Topic description mod" (http://www.phpbb.com/phpBB/viewtopic.php?t=148241)
##		and has been realised by Gilgraf (http://ggweb-fr.com/phpbbfre/)
##	- Last post topic title on index is based on e-Sven idea
##
##############################################################
## MOD History:
##
##   ---------------------------------------------------------------
##   2006-05-18 - Version 2.1.4d
##	- fix a security issue in class_template.php, align other files,
##	- change the queries used to recompute the users status to enlight them,
##	- fix a bug in search.php preventing the unreaded status to appear in some cases,
##	- fix in the db schema the size of phpbb_forums.forum_style,
##	- install process do no more modify users settings regarding style choice when upgrading.
##		Though, the default style is still set to ptifo, overriding user choices.
##
##   2006-04-09 - Version 2.1.4c
##	- rebuild the installation onto phpBB 2.0.20,
##	- fix some bugs known in phpBB 2.0.20,
##	- fix some bugs known in CH 2.1.4
##
##   2005-11-01 - Version 2.1.4
##	- rebuild the installation onto phpBB 2.0.18,
##	- handle new phpBB 2.0.18 functionalities regarding outdated unreaded topics (reset after two monthes without visits),
##	- fix the overwriting per config settings of users preferences for pack/split root index
##	- fix the announcement duration lost on new topic at first preview or submit,
##	- fix the topics list sorting when author is choosen,
##	- fix a typo in index.php
##
##   2005-10-23 - Version 2.1.2
##	- enhance compliancy with php 5.0.5,
##	- add a security fix regarding cookies,
##	- fix the posting when no post icons are available,
##	- ensure you can't post into a link or a category forum whatever auths are,
##	- remove topic calendar version from config table if topic calendar is no more present,
##	- remove "empty message" in posting when canceling the form,
##	- fix small glitches,
##
##   2005-08-21 - Version 2.1.1 RC 6
##      - rebuild the installation onto phpBB 2.0.17,
##	- continue to clean // in front of deleted/replaced blocks,
##	- ptifo template added, subSilver template reviewed to enhance W3C compliancy,
##	- add the dst management at user level,
##	- rewrite the installer,
##	- optimize the template parser,
##	- optimize the topics list reading
##
##   2005-05-08 - Version 2.1.1 RC 5
##	- rebuild the installation onto phpBB 2.0.15,
##	- add in privmsg.php the send to the template the detailed links and pics,
##	- remove from posting_body.tpl the moderators lines (as they aren't filled),
##	- clean some large replaced blocks from the added // in front of the line,
##	- prevent relog in ACP when .htaccess is present,
##	- fixed a timestamp issue when DST is activated server side
##
##   2005-05-01 - Version 2.1.1 RC 4
##	- enhance the tpls coding (remove subSilver hardcoded things tied in the phps),
##	- add the pagination to topic review area,
##	- add a templates/your_template/your_template.ini read to handle commands specific to a template (ie tpl var assignation)
##
##   2005-04-16 - Version 2.1.1 RC 3
##	- enhance compliancy with postgresql version prior to v8 for the installer,
##	- fix a bug when using eXtreme Style,
##	- adapt includes/sessions.php modifications for phpBB 2.0.14
##
##   2005-04-10 - Version 2.1.1 RC 2
##	- fix memberlist pagination,
##	- fix a message coming when creating a new topic with Topic Calendar CH edition installed,
##	- fix in search the missing pagination,
##	- change the way the posts icons are displayed (move html for pic from php to tpl),
##	- remove default posts icon on replies,
##	- clean html when topics title attribute are used as bubble-info with pic
##
##   2005-04-02 - Version 2.1.1 RC 1
##	- add version check in ACP/Index,
##	- add a warning when a new reply has been made while you were editing/create a new reply to the topic,
##	- add the ability to create topic title tags, with images or not,
##	- topics moved gets their own topic folder icon, copied from the moderation button on viewtopic (templates/subSilver/images/topic_move.gif),
##	- topic icons permissions are now based on a forum auth rather than a user level, allowing so to create specific auth for some (ie for groups),
##	- re-add the unmark topic at bottom of viewtopic (was already at top) when keep unread functionality is activated,
##	- fix the date type fields issue appearing with topic calendar CH edition,
##	- calendar icon changed, calendar folder icons added
##	- the install process now supports postgresql (tested on v8), several scripts upgraded to enhance the compliancy with other databases than mySQL,
##	- guests if authorized will be able to edit only the messages posted with the same ip than the one they are using, no more all guests posts,
##	- "0 posts/topics + no topics" are no more displayed on index when the user can view but not read the forum,
##	- add the <!-- INCLUDE xxx.tpl --> feature to the templates parser,
##	- change the way the data caches files are encoded,
##	- all parent forum auths of the forum manager groups are now reported to the new forum when creating one
##
##   ---------------------------------------------------------------
##   2004-10-10 - Version 2.1.0
##	a complete overall of categories hierarchy, with a lot of new features including :
##	- use of the table forum for categories (categories table is not used anymore),
##	- advanced forums administration, including custom presets for auths,
##	- styles, topic order, and other layout options per forums,
##	- today/yesterday at based on Netclectic's mod,
##	- last post topic title on index based on e-Sven mod,
##	- keep unread topics flag (in cookies or in database),
##	- announces duration,
##	- message icons in front of topic title,
##	- a new more solid cache system, with tweaking tool,
##	- and more ... :)
##
##   ---------------------------------------------------------------
##   2003-12-20 - Version 2.0.5
##      - fix moderators not displaied in forums view
##	- split the cache module to a separate installation to use with other mods
##	- analyse and removal of sql requests usage
##	- reoganize distribution pack
##
##   2003-11-22 - Version 2.0.4
##      - fix topics count and forum link type hit count not displayed when caches used
##	- fix moving cats and forums in forum extend
## 
##   2003-11-13 - Version 2.0.4 - RC 2
##      - add a cache system for tables : categories, forums, themes, and words
##	- fix : standard forums admin : icons not saved
##	- fix : extended forums admin : some forums options were showing in categories if topic display order was installed
##	- fix : extended forums admin : sql generated if no use of real subforums was wrong
## 
##   2003-11-10 - Version 2.0.4-RC
##      - fix topic title viewable in search results
##	- unqualify some path to images in admin context
##	- centralize all admin auth definition in def_auth.php (for further management of presets)
##	- add the forum icon feature
##	- add a more easy-to-use facultative forum administration
##
##   2003-10-21 - Version 2.0.3
##	- upgrade the mods settings tool
##	- add the lang settings tool
##	- add the missing sub-forums links for the forums attached to index
##	- fix the prec/next topic link
##
##   2003-09-24 - Version 2.0.2
##      - fix the missing categories name in admin drop down box,
##	- remove HTML in overviewed forum/cat descriptions,
##	- remove extra line between forum desc, moderators and links on index,
##	- add the $lang['Subforums'] entry to display in front of the mini links on index (default is blank)
## 
##   2003-09-18 - Version 2.0.1
##      - enhance quickness on hughe forums tree
##	- fix spacer issue in admin
##	- clean index_box.tpl from th classes
##	- fix auth_read and auth_view confusion in phpBB
##
##   2003-08-19 - Version 2.0.0
##	- support of multi-language forums and categories name and description
##	- add forum link type feature
##      - add the ability to attach a category to a forum
##	- add the ability (optional) to attach a forum to a forum
##	- add the ability to mix the sort of categories and forums at the same level
##	- add another level of packing the index (full packing)
##	- add the prec extension "last topic title on index" as an option to the base version
##	- add the prec enhancement "links to sub-level on description" as an option to the base version
##	- redesign of the forums and categories reading
##	- add the ability to split categories on index
##	- add the ability to remove within the acp the who's online box at different level
##	- more friendly admin forums and cats administration (ACP)
##	- admin interface for setting the display
##	- users preferences interface with mods settings mod (included in the pack)
##
##   ---------------------------------------------------------------
##   2003-04-09 - Version 1.1.0
##   2003-03-24 - Version 1.0.9
##   2003-03-05 - Version 1.0.8
##   2003-03-01 - Version 1.0.7
##   2003-02-21 - Version 1.0.6
##   2003-02-21 - Version 1.0.5
##   2003-01-15 - Version 1.0.2
##   2003-01-05 - Version 1.0.1
##
##############################################################
## Before Adding This MOD To Your Forum, You Should Back Up All Files Related To This MOD
##############################################################
#
#-----[ DIY INSTRUCTIONS ]------------------------------------
#
## -----------------------------------------
##
##	IMPORTANT, AND NOT OPTIONAL :
##	---------------------------
##	Before willing to go any further, please make a save of your current phpBB directory, then
##	do the following renames. It would be a bad idea to try to go quicker than the tempo !
##
## -----------------------------------------
#
RENAME index.php INTO _sav_index.php
RENAME viewforum.php INTO _sav_viewforum.php

RENAME admin/admin_forum_prune.php INTO admin/_sav_admin_forum_prune.php
RENAME admin/admin_forumauth.php INTO admin/_sav_admin_forumauth.php
RENAME admin/admin_forums.php INTO admin/_sav_admin_forums.php
RENAME admin/admin_ug_auth.php INTO admin/_sav_admin_ug_auth.php

RENAME templates/subSilver/index_body.tpl INTO templates/subSilver/_sav_index_body.tpl
RENAME templates/subSilver/modcp_body.tpl INTO templates/subSilver/_sav_modcp_body.tpl
RENAME templates/subSilver/posting_body.tpl INTO templates/subSilver/_sav_posting_body.tpl
RENAME templates/subSilver/profile_add_body.tpl INTO templates/subSilver/_sav_profile_add_body.tpl
RENAME templates/subSilver/search_results_topics.tpl INTO templates/subSilver/_sav_search_results_topics.tpl
RENAME templates/subSilver/viewforum_body.tpl INTO templates/subSilver/_sav_viewforum_body.tpl
RENAME templates/subSilver/viewtopic_body.tpl INTO templates/subSilver/_sav_viewtopic_body.tpl

RENAME templates/subSilver/admin/auth_forum_body.tpl INTO templates/subSilver/admin/_sav_auth_forum_body.tpl
RENAME templates/subSilver/admin/auth_select_body.tpl INTO templates/subSilver/admin/_sav_auth_select_body.tpl
RENAME templates/subSilver/admin/auth_ug_body.tpl INTO templates/subSilver/admin/_sav_auth_ug_body.tpl
RENAME templates/subSilver/admin/category_edit_body.tpl INTO templates/subSilver/admin/_sav_category_edit_body.tpl
RENAME templates/subSilver/admin/forum_admin_body.tpl INTO templates/subSilver/admin/_sav_forum_admin_body.tpl
RENAME templates/subSilver/admin/forum_delete_body.tpl INTO templates/subSilver/admin/_sav_forum_delete_body.tpl
RENAME templates/subSilver/admin/forum_edit_body.tpl INTO templates/subSilver/admin/_sav_forum_edit_body.tpl
RENAME templates/subSilver/admin/forum_prune_body.tpl INTO templates/subSilver/admin/_sav_forum_prune_body.tpl
RENAME templates/subSilver/admin/forum_prune_result_body.tpl INTO templates/subSilver/admin/_sav_forum_prune_result_body.tpl
RENAME templates/subSilver/admin/forum_prune_select_body.tpl INTO templates/subSilver/admin/_sav_forum_prune_select_body.tpl
#
#-----[ COPY ]------------------------------------------------
#
COPY root/*.* TO *.*
#
#-----[ OPEN ]------------------------------------------------
#
common.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
if ( !defined('IN_PHPBB') )
{
	die("Hacking attempt");
}
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
$starttime = microtime();
$trc_loc_start = $trc_loc_end = 0;
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
include($phpbb_root_path . 'includes/template.'.$phpEx);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
include($phpbb_root_path . 'includes/class_template.'.$phpEx);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
$sql = "SELECT *
	FROM " . CONFIG_TABLE;
if( !($result = $db->sql_query($sql)) )
{
	message_die(CRITICAL_ERROR, "Could not query config information", "", __LINE__, __FILE__, $sql);
}

while ( $row = $db->sql_fetchrow($result) )
{
	$board_config[$row['config_name']] = $row['config_value'];
}
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
// include basic classes def
include($phpbb_root_path . 'includes/class_config.' . $phpEx);

// get config
$config = new config_class();
if ( !$config->read() )
{
	define('RUN_CH_INSTALL', true);
}
$board_config = &$config->data;

// let's run the upgrade script
if ( !defined('IN_LOGIN') && !defined('IN_INSTALL') && (($config->data['mod_cat_hierarchy'] != CH_CURRENT_VERSION) || defined('RUN_CH_INSTALL')) )
{
	header('Location: ./install_cat/install.' . $phpEx . (empty($SID) ? '' : '?' . $SID));
	exit;
}

// user objects
include($config->url('includes/class_groups'));
include($config->url('includes/class_user'));
include($config->url('includes/class_auth'));

// instantiate some objects
$user = new user();
$censored_words = new words();
$icons = new icons();
$navigation = new navigation();
$themes = '';
$smilies = new smilies();
$topics_attr = new topics_attr();

// People never read achievement messages after after having seen "Succesfull !", tss tss :)
if ( !defined('IN_LOGIN') && !defined('IN_INSTALL') && file_exists('install_cat') )
{
	message_die(GENERAL_MESSAGE, 'Please ensure the install_cat/ directory is deleted');
}

// messages queue
@include($config->url('includes/class_message'));
$message_queue = defined('CH_message_queue') ? new message_queue() : '';
//-- fin mod : categories hierarchy -------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
if( $board_config['board_disable'] && !defined("IN_ADMIN") && !defined("IN_LOGIN") )
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
if( $config->data['board_disable'] && !defined('IN_ADMIN') && !defined('IN_LOGIN') && !defined('IN_INSTALL') )
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
faq.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
// End session management
//
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
$navigation = new navigation();
$navigation->add('FAQ', '', 'faq', '', '');
$navigation->display();
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
				'U_FAQ_LINK' => '#' . $faq_block[$i][$j]['id'])
			);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
				'U_FAQ_LINK' => '#' . $faq_block[$i][$j]['id'],
				'U_FAQ_ID' => $faq_block[$i][$j]['id'],
			));
			$template->set_switch('faq_block.faq_row.light', !($j % 2));
			$template->set_switch('faq_block_link.faq_row_link.light', !($j % 2));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
groupcp.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
// End session management
//
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
$navigation = new navigation();
$navigation->add('Usergroups', '', 'groupcp', '', '');
$navigation->display();

// read forums and auths for the jumpbox
include($config->url('includes/class_forums'));
$forums = new forums();
$forums->read();
$user->get_cache(array(POST_GROUPS_URL, POST_FORUM_URL, POST_FORUM_URL . 'jbox'));
$user_groups_list = $user->get_groups_list();

// auth
$auth_manage = false;
$auth_membership = false;

// level
$is_founder = $user->data['session_logged_in'] && in_array(GROUP_FOUNDER, $user_groups_list);
$is_admin = $user->data['session_logged_in'] && in_array(GROUP_ADMIN, $user_groups_list);
$is_owner = false;

// read group
$group_id = _read(POST_GROUPS_URL, TYPE_INT);
if ( $group_id == GROUP_REGISTERED )
{
	message_return('Not_Authorised');
}
$group_status = GROUP_STANDARD;
$group_row = array();
if ( !empty($group_id) )
{
	$sql = 'SELECT *
				FROM ' . GROUPS_TABLE . '
				WHERE group_id = ' . intval($group_id) . '
					AND group_single_user <> ' . true;
	$result = $db->sql_query($sql, false, __LINE__, __FILE__);
	if ( $group_row = $db->sql_fetchrow($result) )
	{
		$group_status = intval($group_row['group_status']);
		$group_row['group_name'] = ($group_status >= GROUP_SYSTEM) ? $user->lang($group_row['group_name']) : $group_row['group_name'];
		$group_row['group_description'] = ($group_status >= GROUP_SYSTEM) ? $user->lang($group_row['group_description']) : $group_row['group_description'];
		$is_owner = $user->data['session_logged_in'] && (intval($group_row['group_moderator']) == $user->data['user_id']);
	}
}
switch ( $group_id )
{
	case GROUP_FOUNDER:
		$auth_manage = $is_owner;
		$auth_membership = $is_owner;
		break;
	case GROUP_ADMIN:
		$auth_manage = $is_founder;
		$auth_membership = $is_owner || $is_founder;
		break;
	default:
		$auth_manage = $is_owner || $is_founder || $is_admin;
		$auth_membership = $is_owner || $is_founder || $is_admin;
		break;
}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	$sql = "SELECT group_moderator 
		FROM " . GROUPS_TABLE . "  
		WHERE group_id = $group_id";
	if ( !($result = $db->sql_query($sql)) )
	{
		message_die(GENERAL_ERROR, 'Could not obtain user and group information', '', __LINE__, __FILE__, $sql);
	}

	$row = $db->sql_fetchrow($result);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
	// get the group
	$row = $group_row;
	$group_type = _read('group_type', TYPE_INT);
	if ( !$auth_membership )
	{
		_error('Not_group_moderator');
	}
	else if ( ($group_status >= GROUP_SYSTEM) && ($group_type < GROUP_CLOSED) )
	{
		_error('Change_sysgroup_type_denied');
	}
	else if ( ($group_type != $row['group_type']) && !$auth_manage )
	{
		_error('Manage_group_denied');
	}
	if ( $error )
	{
		$l_link = 'Click_return_group';
		$u_link = $config->url('groupcp', array(POST_GROUPS_URL => intval($group_id)), true);
		message_return($error_msg, $l_link, $u_link);
	}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		if ( $userdata['user_level'] != ADMIN && $userdata['user_level'] == MOD )
		{
			$sql = "SELECT COUNT(auth_mod) AS is_auth_mod 
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
		$message = $lang['Unsub_success'] .

		message_die(GENERAL_MESSAGE, $message);
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
		// recache users
		$sql = 'DELETE FROM ' . USERS_CACHE_TABLE . '
					WHERE user_id = ' . $userdata['user_id'];
		$db->sql_query($sql, false, __LINE__, __FILE__);

		// remove membership from groups list
		$user->get_groups_list(true);

		// set users mod status
		$moderators = new moderators();
		$moderators->set_users_status();
		unset($moderators);

		// send achievement message
		message_return('Unsub_success', 'Click_return_group', $config->url('groupcp', array(POST_GROUPS_URL => intval($group_id)), true));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	switch(SQL_LAYER)
	{
		case 'postgresql':
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ FIND ]------------------------------------------------
#
		if ( $group_moderator == $userdata['user_id'] || $userdata['user_level'] == ADMIN )
		{
			$is_moderator = TRUE;
		}
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
	if ( empty($group_row) )
	{
		message_return('No_such_group');
	}
	if ( $group_info = $group_row )
	{
		// reminder : use later gcp_manage auth
		$is_moderator = $auth_membership;
		$group_moderator = $group_info['group_moderator'];
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
					if ( $row['user_level'] != ADMIN && $row['user_level'] != MOD && $group_info['auth_mod'] )
					{
						$sql = "UPDATE " . USERS_TABLE . " 
							SET user_level = " . MOD . " 
							WHERE user_id = " . $row['user_id'];
						if ( !$db->sql_query($sql) )
						{
							message_die(GENERAL_ERROR, 'Could not update user level', '', __LINE__, __FILE__, $sql);
						}
					}
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
					// recache user
					$sql = 'DELETE FROM ' . USERS_CACHE_TABLE . '
								WHERE user_id = ' . intval($row['user_id']);
					$db->sql_query($sql, false, __LINE__, __FILE__);

					// recache groups list and user id on individual group
					$view_user = new user();
					$view_user->read(intval($row['user_id']));
					$view_user->get_groups_list(true);
					unset($view_user);

					// set users mod status
					$moderators = new moderators();
					$moderators->set_users_status();
					unset($moderators);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
					$group_sql = "SELECT group_name 
						FROM " . GROUPS_TABLE . " 
						WHERE group_id = $group_id";
					if ( !($result = $db->sql_query($group_sql)) )
					{
						message_die(GENERAL_ERROR, 'Could not get group information', '', __LINE__, __FILE__, $group_sql);
					}

					$group_name_row = $db->sql_fetchrow($result);

					$group_name = $group_name_row['group_name'];
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
					$group_name = $group_row['group_name'];
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
						if ( $group_info['auth_mod'] )
						{
							$sql = "UPDATE " . USERS_TABLE . " 
								SET user_level = " . MOD . " 
								WHERE user_id IN ($sql_in) 
									AND user_level NOT IN (" . MOD . ", " . ADMIN . ")";
							if ( !$db->sql_query($sql) )
							{
								message_die(GENERAL_ERROR, 'Could not update user level', '', __LINE__, __FILE__, $sql);
							}
						}
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
						if ( $group_info['auth_mod'] )
						{
							$sql = "SELECT ug.user_id, ug.group_id 
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ FIND ]------------------------------------------------
#
										message_die(GENERAL_ERROR, 'Could not update user level', '', __LINE__, __FILE__, $sql);
									}
								}
							}
						}
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
						message_die(GENERAL_ERROR, 'Could not update user group table', '', __LINE__, __FILE__, $sql);
					}
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
					// recache users
					$sql = 'DELETE FROM ' . USERS_CACHE_TABLE . '
								WHERE user_id IN(' . $sql_in . ')';
					$db->sql_query($sql, false, __LINE__, __FILE__);

					// set the good value for the groups list
					$sql = 'SELECT group_id, group_user_list
								FROM ' . GROUPS_TABLE . '
								WHERE group_user_id IN(' . $sql_in . ')';
					$result = $db->sql_query($sql, false, __LINE__, __FILE__);
					while ( $row = $db->sql_fetchrow($result) )
					{
						$groups_list = empty($row['group_user_list']) ? array() : array_flip(explode(',', substr($row['group_user_list'], 1, strlen($row['group_user_list'])-2)));
						if ( isset($HTTP_POST_VARS['approve']) )
						{
							$groups_list[$group_id] = true;
						}
						else if ( isset($HTTP_POST_VARS['remove']) && isset($groups_list[$group_id]) )
						{
							unset($groups_list[$group_id]);
						}
						$fields = array(
							'group_user_list' => empty($groups_list) ? '' : ',' . implode(',', array_keys($groups_list)) . ',',
						);
						$db->sql_statement($fields);
						$sql = 'UPDATE ' . GROUPS_TABLE . '
									SET ' . $db->sql_update . '
									WHERE group_id = ' . intval($row['group_id']);
						$db->sql_query($sql, false, __LINE__, __FILE__);
					}

					// set users mod status
					$moderators = new moderators();
					$moderators->set_users_status();
					unset($moderators);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
						$group_sql = "SELECT group_name 
							FROM " . GROUPS_TABLE . " 
							WHERE group_id = $group_id";
						if ( !($result = $db->sql_query($group_sql)) )
						{
							message_die(GENERAL_ERROR, 'Could not get group information', '', __LINE__, __FILE__, $group_sql);
						}

						$group_name_row = $db->sql_fetchrow($result);
						$group_name = $group_name_row['group_name'];
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
						$group_name = $group_row['group_name'];
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	$sql = "SELECT *
		FROM " . GROUPS_TABLE . "
		WHERE group_id = $group_id
			AND group_single_user = 0";
	if ( !($result = $db->sql_query($sql)) )
	{
		message_die(GENERAL_ERROR, 'Error getting group information', '', __LINE__, __FILE__, $sql);
	}

	if ( !($group_info = $db->sql_fetchrow($result)) )
	{
		message_die(GENERAL_MESSAGE, $lang['Group_not_exist']); 
	}
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
	if ( !($group_info = $group_row) )
	{
		message_return('Group_not_exist');
	}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	if ( $userdata['user_level'] == ADMIN )
	{
		$is_moderator = TRUE;
	}
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
	$is_moderator = $auth_membership;
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			if ( $is_moderator )
			{
				$template->assign_block_vars('member_row.switch_mod_option', array());
			}
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
			$template->set_switch('member_row.light', !($i % 2));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
					'U_VIEWPROFILE' => append_sid("profile.$phpEx?mode=viewprofile&amp;" . POST_USERS_URL . "=$user_id"))
				);
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
				$template->set_switch('pending_members_row.light', !($i % 2));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		$sql = "SELECT g.group_id, g.group_name, g.group_type, ug.user_pending 
			FROM " . GROUPS_TABLE . " g, " . USER_GROUP_TABLE . " ug
			WHERE ug.user_id = " . $userdata['user_id'] . "  
				AND ug.group_id = g.group_id
				AND g.group_single_user <> " . TRUE . "
			ORDER BY g.group_name, ug.user_id";
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
		$sql = str_replace('SELECT g.group_id, ', 'SELECT g.group_status, g.group_id, ', $sql);
		$sql = str_replace('WHERE ', 'WHERE g.group_id <> ' . intval($config->data['group_registered']) . ' AND ', $sql);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			$in_group = array();
			$s_member_groups_opt = '';
			$s_pending_groups_opt = '';

			do
			{
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
				if ( $row['group_status'] == GROUP_SYSTEM )
				{
					$row['group_name'] = $user->lang($row['group_name']);
				}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	$sql = "SELECT group_id, group_name, group_type 
		FROM " . GROUPS_TABLE . " g 
		WHERE group_single_user <> " . TRUE . " 
			$ignore_group_sql 
		ORDER BY g.group_name";
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
	$sql = str_replace('SELECT group_id, ', 'SELECT group_status, group_id, ', $sql);
	$sql = str_replace('WHERE ', 'WHERE g.group_id <> ' . intval($config->data['group_registered']) . ' AND g.group_status < ' . GROUP_SPECIAL . ' AND ', $sql);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	$s_group_list_opt = '';
	while( $row = $db->sql_fetchrow($result) )
	{
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
		if ( $row['group_status'] == GROUP_SYSTEM )
		{
			$row['group_name'] = $user->lang($row['group_name']);
		}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
login.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
// End session management
//
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
$navigation = new navigation();
$navigation->add('Login', '', 'login', '', '');
$navigation->display();
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
				elseif( $row['user_active'] )
				{
					// Save login tries and last login
					if ($row['user_id'] != ANONYMOUS)
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
				else
				{
					// Save login tries and last login
					if ( ($row['user_id'] != ANONYMOUS) && intval($row['user_active']) )
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
memberlist.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
// End session management
//
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
$navigation = new navigation();
$navigation->add('Memberlist', '', 'memberlist', '', '');
$navigation->display();

// extra selection
$select_group = _read(POST_GROUPS_URL, TYPE_INT);
if ( $select_group == GROUP_REGISTERED )
{
	$select_group = 0;
}
$select_level = _read('level', TYPE_INT);
$sql_join = '';
$sql_where = empty($select_level) ? '' : 'user_level = ' . intval($select_level) . ' AND ';
if ( !empty($select_group) )
{
	$sql_join = ', ' . GROUPS_TABLE . ' g';
	$sql_where = 'g.group_user_id = user_id AND g.group_user_list LIKE \'%,' . intval($select_group) . ',%\' AND ';
}
$selection = (empty($select_group) ? '' : '&amp;' . POST_GROUPS_URL . '=' . intval($select_group)) . (empty($select_level) ? '' : '&amp;level=' . intval($select_level));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
$sql = "SELECT username, user_id, user_viewemail, user_posts, user_regdate, user_from, user_website, user_email, user_icq, user_aim, user_yim, user_msnm, user_avatar, user_avatar_type, user_allowavatar 
	FROM " . USERS_TABLE . "
	WHERE user_id <> " . ANONYMOUS . "
	ORDER BY $order_by";
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
if ( !empty($sql_join) )
{
	$sql = str_replace('FROM ' . USERS_TABLE, 'FROM ' . USERS_TABLE . $sql_join, $sql);
}
if ( !empty($sql_where) )
{
	$sql = str_replace('WHERE ', 'WHERE ' . $sql_where, $sql);
}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			'U_VIEWPROFILE' => append_sid("profile.$phpEx?mode=viewprofile&amp;" . POST_USERS_URL . "=$user_id"))
		);
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
		$template->set_switch('memberrow.light', !($i % 2));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	while ( $row = $db->sql_fetchrow($result) );
	$db->sql_freeresult($result);
}
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
else
{
	message_return('No_match');
}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	$sql = "SELECT count(*) AS total
		FROM " . USERS_TABLE . "
		WHERE user_id <> " . ANONYMOUS;
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
	if ( !empty($sql_join) )
	{
		$sql = str_replace('FROM ' . USERS_TABLE, 'FROM ' . USERS_TABLE . $sql_join, $sql);
	}
	if ( !empty($sql_where) )
	{
		$sql = str_replace('WHERE ', 'WHERE ' . $sql_where, $sql);
	}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		$pagination = generate_pagination("memberlist.$phpEx?mode=$mode&amp;order=$sort_order", $total_members, $board_config['topics_per_page'], $start). '&nbsp;';
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
		$pagination = generate_pagination("memberlist.$phpEx?mode=$mode" . $selection . "&amp;order=$sort_order", $total_members, $board_config['topics_per_page'], $start). '&nbsp;';
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
modcp.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- fix : post tag missing ----------------------------------------------------
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
include($phpbb_root_path . 'includes/functions_admin.'.$phpEx);
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
include($config->url('includes/class_forums'));
include($config->url('includes/class_topics'));

class topics_modcp extends topics
{
	function bottom_line($empty=false)
	{
		global $template, $user;

		$template->set_switch('topicrow');
		$template->set_switch('topicrow.bottom');
		$template->set_switch('topicrow.bottom.select', $this->with_select);
		$template->set_switch('topicrow.bottom.no_topics', $empty);
		if ( $empty )
		{
			$template->set_switch('topicrow.bottom.no_topics.select', $this->with_select);
		}
		else
		{
			$template->set_switch('topicrow.bottom.no_topics_ELSE.select', $this->with_select);
		}
		$template->assign_vars(array(
			'L_SELECT' => $user->lang('Select'),
			'L_DELETE' => $user->lang('Delete'),
			'L_MOVE' => $user->lang('Move'),
			'L_LOCK' => $user->lang('Lock'),
			'L_UNLOCK' => $user->lang('Unlock'),
		));
		$template->set_filenames(array('bottom_row' => 'topics_bottom_modcp.tpl'));
		$template->assign_var_from_handle('BOTTOM_ROW', 'bottom_row');
	}
}

$forums = new forums();
$forums->read();
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
// End session management
//
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
$template->assign_vars(array(
	'U_MOD_CP' => $config->url('modcp', array(POST_FORUM_URL => $forum_id, 'sid' => $user->data['session_id']), true),
	'L_MOD_CP' => $user->lang('Mod_CP'),
	'I_POST' => $user->img('icon_minipost'),
));
$user->get_cache(array(POST_FORUM_URL, POST_FORUM_URL . 'jbox'));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	else if ( $forum_id )
	{
		$redirect = "viewforum.$phpEx?" . POST_FORUM_URL . "=$forum_id";
	}
	else
	{
		$redirect = "index.$phpEx";
	}
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
	else
	{
		$redirect = $config->url('index', array(POST_FORUM_URL => $forum_id), true);
	}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
$is_auth = auth(AUTH_ALL, $forum_id, $userdata);
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
if ( $forums->data[$forum_id]['forum_type'] != POST_FORUM_URL )
{
	$l_link = 'Click_return_forum';
	$u_link = $config->url('index', array(POST_FORUM_URL => $forum_id), true);
	message_return('Move_to_forum_error', $l_link, $u_link);
}

// display nav sentence
$forums->display_nav(($mode == 'ip') ? 0 : $forum_id);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
				$redirect_page = "viewforum.$phpEx?" . POST_FORUM_URL . "=$forum_id&amp;sid=" . $userdata['session_id'];
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
				$redirect_page = $config->url('index', array(POST_FORUM_URL => $forum_id, 'sid' => $userdata['session_id']), true);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			$new_forum_id = intval($HTTP_POST_VARS['new_forum']);
			$old_forum_id = $forum_id;
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
			if ( $forums->data[$new_forum_id]['forum_type'] != POST_FORUM_URL )
			{
				$l_link = 'Click_return_modcp';
				$u_link = $config->url('modcp', array(POST_FORUM_URL => $forum_id, 'sid' => $user->data['session_id']), true);
				message_return('Move_to_forum_error', $l_link, $u_link, 10);
			}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
				sync('forum', $old_forum_id);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
				if ( $new_forum_id != $old_forum_id )
				{
					sync('forum', $old_forum_id);
				}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			$message = $message . '<br \><br \>' . sprintf($lang['Click_return_forum'], '<a href="' . "viewforum.$phpEx?" . POST_FORUM_URL . "=$old_forum_id&amp;sid=" . $userdata['session_id'] . '">', '</a>');
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
			$message = $message . '<br \><br \>' . sprintf($lang['Click_return_forum'], '<a href="' . $config->url('index', array(POST_FORUM_URL => $old_forum_id, 'sid' => $userdata['session_id']), true) . '">', '</a>');
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		$message = $message . '<br \><br \>' . sprintf($lang['Click_return_forum'], '<a href="' . "viewforum.$phpEx?" . POST_FORUM_URL . "=$forum_id&amp;sid=" . $userdata['session_id'] . '">', '</a>');
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
		$message = $message . '<br \><br \>' . sprintf($lang['Click_return_forum'], '<a href="' . $config->url('index', array(POST_FORUM_URL => $forum_id, 'sid' => $userdata['session_id']), true) . '">', '</a>');
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		$message = $message . '<br \><br \>' . sprintf($lang['Click_return_forum'], '<a href="' . "viewforum.$phpEx?" . POST_FORUM_URL . "=$forum_id&amp;sid=" . $userdata['session_id'] . '">', '</a>');
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
		$message = $message . '<br \><br \>' . sprintf($lang['Click_return_forum'], '<a href="' . $config->url('index', array(POST_FORUM_URL => $forum_id, 'sid' => $userdata['session_id']), true) . '">', '</a>');
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
					message_die(GENERAL_MESSAGE, $lang['Empty_subject']);
				}

				$new_forum_id = intval($HTTP_POST_VARS['new_forum_id']);
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
				if ( $forums->data[$new_forum_id]['forum_type'] != POST_FORUM_URL )
				{
					$l_link = 'Click_return_modcp';
					$u_link = $config->url('modcp', array('mode' => 'split', POST_FORUM_URL => $forum_id, POST_TOPIC_URL => $topic_id, 'sid' => $user->data['session_id']), true);
					message_return('Move_to_forum_error', $l_link, $u_link, 10);
				}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
				sync('forum', $forum_id);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
				if ( $new_forum_id != $forum_id )
				{
					sync('forum', $forum_id);
				}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
					'U_VIEW_FORUM' => append_sid("viewforum.$phpEx?" . POST_FORUM_URL . "=$forum_id"),
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
					'U_VIEW_FORUM' => $config->url('index', array(POST_FORUM_URL => $forum_id), true), 
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
						'POST_ID' => $post_id,
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- fix : post tag missing ----------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
						'U_POST_ID' => $post_id,
//-- fin fix : post tag missing ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
						'S_SPLIT_CHECKBOX' => $checkbox)
					);
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
					$template->set_switch('postrow.light', !($i % 2));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
					'U_LOOKUP_IP' => "modcp.$phpEx?mode=ip&amp;" . POST_POST_URL . "=$post_id&amp;" . POST_TOPIC_URL . "=$topic_id&amp;rdns=" . $row['poster_ip'] . "&amp;sid=" . $userdata['session_id'])
				);
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
				$template->set_switch('iprow.light', !($i % 2));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
					'U_PROFILE' => ($id == ANONYMOUS) ? "modcp.$phpEx?mode=ip&amp;" . POST_POST_URL . "=" . $post_id . "&amp;" . POST_TOPIC_URL . "=" . $topic_id . "&amp;sid=" . $userdata['session_id'] : append_sid("profile.$phpEx?mode=viewprofile&amp;" . POST_USERS_URL . "=$id"),
					'U_SEARCHPOSTS' => append_sid("search.$phpEx?search_author=" . (($id == ANONYMOUS) ? 'Anonymous' : urlencode($username)) . "&amp;showresults=topics"))
				);
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
				$template->set_switch('userrow.light', !($i % 2));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	default:
		$page_title = $lang['Mod_CP'];
		include($phpbb_root_path . 'includes/page_header.'.$phpEx);
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
		$topics = new topics_modcp('modcp', array('sid' => $user->data['session_id']), 'modcp', true);
		$topics->extra_parms = array('mode' => 'split', 'sid' => $user->data['session_id']);

		// read topics keeping only local announces
		$topics->read($forum_id, true);
		$topics->display(false, true);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			'U_VIEW_FORUM' => append_sid("viewforum.$phpEx?" . POST_FORUM_URL . "=$forum_id"),
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
			'U_VIEW_FORUM' => $config->url('index', array(POST_FORUM_URL => $forum_id), true),
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		$orig_word = array();
		$replacement_word = array();
		obtain_word_list($orig_word, $replacement_word);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ FIND ]------------------------------------------------
#
		$template->assign_vars(array(
			'PAGINATION' => generate_pagination("modcp.$phpEx?" . POST_FORUM_URL . "=$forum_id&amp;sid=" . $userdata['session_id'], $forum_topics, $board_config['topics_per_page'], $start),
			'PAGE_NUMBER' => sprintf($lang['Page_of'], ( floor( $start / $board_config['topics_per_page'] ) + 1 ), ceil( $forum_topics / $board_config['topics_per_page'] )), 
			'L_GOTO_PAGE' => $lang['Goto_page'])
		);
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
posting.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
include($phpbb_root_path . 'includes/functions_post.'.$phpEx);
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
include($config->url('includes/class_forums'));
include($config->url('includes/class_form'));
$forums = new forums();
$forums->read();

// pic buttons
$_params = array('post', 'preview', 'confirm', 'cancel', 'delete', 'poll_delete', 'add_poll_option');
$count__params = count($_params);
for ( $i = 0; $i < $count__params; $i++ )
{
	_button($_params[$i]);
}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
$topic_type = ( !empty($HTTP_POST_VARS['topictype']) ) ? intval($HTTP_POST_VARS['topictype']) : POST_NORMAL;
$topic_type = ( in_array($topic_type, array(POST_NORMAL, POST_STICKY, POST_ANNOUNCE)) ) ? $topic_type : POST_NORMAL;
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
$topic_type = _read('topictype', TYPE_INT, POST_NORMAL, array_flip(array(POST_NORMAL, POST_STICKY, POST_ANNOUNCE, POST_GLOBAL_ANNOUNCE)));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
else if ( $mode == 'smilies' )
{
	generate_smilies('window', PAGE_POSTING);
	exit;
}
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
// get the forum of this topic/post
if ( empty($forum_id) )
{
	if ( !empty($topic_id) )
	{
		$sql = 'SELECT forum_id
					FROM ' . TOPICS_TABLE . '
					WHERE topic_id = ' . intval($topic_id);
	}
	else
	{
		$sql = 'SELECT forum_id
					FROM ' . POSTS_TABLE . '
					WHERE post_id = ' . intval($post_id);
	}
	$result = $db->sql_query($sql, false, __LINE__, __FILE__);
	if ( $row = $db->sql_fetchrow($result) )
	{
		$forum_id = $row['forum_id'];
	}
}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		$redirect = "viewforum.$phpEx?" . POST_FORUM_URL . "=$forum_id";
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
		$redirect = $config->url('index', array(POST_FORUM_URL => $forum_id), true);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
$is_auth = array();
switch( $mode )
{
	case 'newtopic':
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
		if ( $topic_type == POST_GLOBAL_ANNOUNCE )
		{
			$is_auth_type = 'auth_global_announce';
		}
		else
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
if ( $result = $db->sql_query($sql) )
{
	$post_info = $db->sql_fetchrow($result);
	$db->sql_freeresult($result);

	$forum_id = $post_info['forum_id'];
	$forum_name = $post_info['forum_name'];

	$is_auth = auth(AUTH_ALL, $forum_id, $userdata, $post_info);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
$user->get_cache(array(POST_FORUM_URL, POST_FORUM_URL . 'jbox'));
if ( $mode == 'newtopic' )
{
	$post_info['forum_id'] = intval($forum_id);
	if ( empty($forum_id) || !isset($forums->data[ intval($forum_id) ]) || ($forums->data[ intval($forum_id) ]['forum_type'] != POST_FORUM_URL) )
	{
		message_die(GENERAL_MESSAGE, $lang['Move_to_forum_error']);
	}
}
else
{
	// added fields from topic
	$added_sql = 't.topic_sub_type, t.topic_icon, t.topic_duration, t.topic_time, t.topic_sub_title';
	if ( in_array($mode, array('editpost', 'delete', 'poll_delete')) )
	{
		$added_sql .= ', p.poster_ip';
	}
	if ( ($mode == 'reply') && !strpos(' ' . $sql, ', t.topic_last_post_id') )
	{
		$added_sql .= ', t.topic_last_post_id';
	}
	if ( $config->data['mod_topic_calendar_CH'] )
	{
		$added_sql .= ', t.topic_calendar_time, t.topic_calendar_duration';
	}

	// added fields from posts text
	if ( strpos(' ' . $sql, POSTS_TEXT_TABLE . ' pt') )
	{
		$added_sql .= ', pt.post_sub_title';
	}

	// added fields from post, and also forum id from topic if appropriate
	if ( strpos(' ' . $sql, POSTS_TABLE . ' p') )
	{
		$added_sql = 'p.forum_id, ' . $added_sql;
		$added_sql .= ', p.post_icon';
	}
	else
	{
		$added_sql = 't.forum_id, ' . $added_sql;
	}

	// let's do some cleaning in this request as we already have the forum informations
	// this way prevents to edit at too many place the script :)
	$sql = eregi_replace('AND f\.forum_id = (p|t)\.forum_id', '', $sql);
	$sql = str_replace(', ' . FORUMS_TABLE . ' f', '', $sql);
	$sql = str_replace('f.*', $added_sql, $sql);

	// read
	$result = $db->sql_query($sql, false, __LINE__, __FILE__);
	if ( !($post_info = $db->sql_fetchrow($result)) )
	{
		message_die(GENERAL_MESSAGE, $lang['No_such_post']);
	}
	$db->sql_freeresult($result);
}

$topic_last_post_id = intval($post_info['topic_last_post_id']);
if ( ($submit || $refresh) && in_array($mode, array('reply', 'quote', 'editpost')) )
{
	// check if the last post id is still the same
	if ( _read('last_post', TYPE_INT, $topic_last_post_id) != $topic_last_post_id )
	{
		$refresh = $preview = true;
		$submit = false;
		_error($mode == 'editpost' ? 'New_post_meanwhile_edit' : 'New_post_meanwhile_reply');
	}
}

// add the forums informations
if ( !empty($post_info['forum_id']) && !empty($forums->data[ $post_info['forum_id'] ]) )
{
	$forum_id = $post_info['forum_id'];

	// we only need to refresh data on some case (to get the "last_topic" info)
	$last_topic = in_array($mode, array('editpost', 'delete', 'poll_delete'));
	if ( $last_topic )
	{
		$forums->refresh($forum_id);
	}
	$row = $forums->data[$forum_id];
	if ( $last_topic )
	{
		if ( !empty($row['last']) )
		{
			foreach ( $row['last'] as $field_name => $field_value )
			{
				$row[$field_name] = $field_value;
			}
			unset($row['last']);
		}
		if ( !empty($row['subs']) )
		{
			unset($row['subs']);
		}
	}
	$post_info = array_merge($post_info, $row);
	$forum_name = $user->lang($post_info['forum_name']);

	// get auths
	$is_auth = auth(AUTH_ALL, $forum_id, $user->data, $post_info);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		//
		// Can this user edit/delete the post/poll?
		//
		if ( $post_info['poster_id'] != $userdata['user_id'] && !$is_auth['auth_mod'] )
		{
			$message = ( $delete || $mode == 'delete' ) ? $lang['Delete_own_posts'] : $lang['Edit_own_posts'];
			$message .= '<br /><br />' . sprintf($lang['Click_return_topic'], '<a href="' . append_sid("viewtopic.$phpEx?" . POST_TOPIC_URL . "=$topic_id") . '">', '</a>');

			message_die(GENERAL_MESSAGE, $message);
		}
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
		else if ( !$user->data['session_logged_in'] && ($user->data['session_ip'] != $post_info['poster_ip']) && !$user->auth(POST_FORUM_URL, 'auth_mod', $forum_id) )
		{
			message_return(($delete || ($mode == 'delete')) ? 'Delete_own_posts' : 'Edit_own_posts', 'Click_return_topic', $config->url('viewtopic', array(POST_TOPIC_URL => $topic_id), true));
		}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		message_die(GENERAL_MESSAGE, sprintf($lang['Sorry_' . $is_auth_type], $is_auth[$is_auth_type . "_type"]));
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
		message_die(GENERAL_MESSAGE, sprintf($lang['Sorry_' . $is_auth_type], $user->lang('Auth_Users_granted_access')));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
$attach_sig = ( $submit || $refresh ) ? ( ( !empty($HTTP_POST_VARS['attach_sig']) ) ? TRUE : 0 ) : ( ( $userdata['user_id'] == ANONYMOUS ) ? 0 : $userdata['user_attachsig'] );
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
//
// all is prepared, the data have been readed from the table
//

// read icons
$icons->read();
$icons->get_allowed($forum_id);
if ( $mode == 'newtopic' )
{
	$post_info['topic_icon'] = 0;
	$post_info['post_icon'] = 0;
	$post_info['topic_type'] = POST_NORMAL;
}
$post_icon = empty($icons->allowed) ? 0 : _read('icon_id', TYPE_INT, (($mode == 'quote') || ($mode=='reply') ? 0 : ($post_data['first_post'] ? $post_info['topic_icon'] : $post_info['post_icon'])), array(0 => '') + array_flip($icons->allowed));

// get auths
$auth_calendar = $config->data['mod_topic_calendar_CH'] && $user->auth(POST_FORUM_URL, 'auth_calendar', $forum_id);
$auth_announces = $user->auth(POST_FORUM_URL, 'auth_announce', $forum_id) || $user->auth(POST_FORUM_URL, 'auth_global_announce', $forum_id);

// default values for added fields
$calendar_time = 0;
$calendar_duration = 0;
$topic_duration = ($post_data['first_post'] || ($mode == 'newtopic')) ? (!empty($post_info['topic_time']) && $auth_announces ? $post_info['topic_time'] : time()) : 0;

// topic sub type
$topics_attr->read();
$topics_attr->get_allowed('topic_sub_type', $forum_id);
$topic_sub_type = ($post_data['first_post'] || ($mode == 'newtopic')) && !empty($post_info['topic_sub_type']) ? intval($post_info['topic_sub_type']) : 0;

// prepare the form
$fields = array();

// first post added fields (so topics ones)
if ( ($mode == 'newtopic') || (($mode == 'editpost') && $post_data['first_post']) )
{
	// topic sub type
	if ( count($topics_attr->allowed) > 1 )
	{
		$fields += array(
			'topic_sub_type' => array('type' => 'list', 'legend' => 'Topic_sub_type', 'value' => $topic_sub_type, 'options' => $topics_attr->allowed, 'bold' => true),
		);
	}

	//
	// calendar events
	//
	if ( $auth_calendar )
	{
		$calendar_time = intval($post_info['topic_calendar_time']);
		$calendar_stop = empty($post_info['topic_calendar_duration']) ? 0 : intval($post_info['topic_calendar_time']) + intval($post_info['topic_calendar_duration']);
		$calendar_time = empty($calendar_time) ? 0 : $user->cvt_sys_to_user_date($calendar_time);
		$calendar_stop = empty($calendar_stop) ? 0 : $user->cvt_sys_to_user_date($calendar_stop);
		$fields += array(
			'calendar_title' => array('type' => 'title', 'legend' => 'Calendar_event'),
			'calendar_title_explain' => array('type' => 'comment_light', 'legend' => 'Calendar_event_explain'),
			'calendar_time' => array('type' => 'timestamp', 'legend' => 'Calendar_time', 'value' => $calendar_time, 'bold' => true),
			'calendar_stop' => array('type' => 'timestamp', 'legend' => 'Calendar_stop', 'value' => $calendar_stop, 'options.end_date' => true, 'bold' => true),
		);
	}

	//
	// announces duration fields
	//

	// set topic_duration to "never"
	$topic_duration = -1;

	// add the fields to the form
	if ( $auth_announces )
	{
		$post_info['topic_duration'] = intval($post_info['topic_duration']);
		if ( !empty($post_info['topic_duration']) )
		{
			if ( $post_info['topic_time'] >= $post_info['topic_duration'] )
			{
				$topic_duration = -1;
			}
			else
			{
				$topic_duration = $user->cvt_sys_to_user_date($post_info['topic_duration']);
			}
		}
		else
		{
			if ( $mode == 'newtopic' )
			{
				$topic_duration = $user->cvt_sys_to_user_date(time() + intval($config->data['default_duration']) * 86400);
			}
			else
			{
				$topic_duration = 0;
			}
		}

		$fields += array(
			'topic_duration_title' => array('type' => 'title', 'legend' => 'Topic_duration'),
			'topic_duration_explain' => array('type' => 'comment_light', 'legend' => 'Topic_duration_explain', 'linefeed' => true),
			'topic_duration' => array('type' => 'date_unix', 'legend' => 'Topic_duration', 'value' => $topic_duration, 'options.specials' => array(-1 => 'Never_displayed', 0 => 'Always_displayed'), 'options.floor' => $user->cvt_sys_to_user_date(time()), 'options.end_date' => true, 'bold' => true),
			'topic_duration_special' => array('type' => 'comment', 'output' => true, 'legend' => 'Topic_duration_special', 'combined' => true, 'linefeed' => true),
		);
	}
}

if ( !empty($fields) )
{
	//
	// create the form
	//
	$posting_form = new form($fields, false);
	$posting_form->process('', ($submit || $refresh), _button('cancel'), 'POSTING_FORM');

	//
	// post process calendar event part
	//
	if ( $auth_calendar && isset($posting_form->fields['calendar_time']) )
	{
		$calendar_time = intval($posting_form->fields['calendar_time']->value);
		$calendar_stop = intval($posting_form->fields['calendar_stop']->value);
		$calendar_time = ($calendar_time <= 0) ? 0 : $user->cvt_user_to_sys_date($calendar_time);
		$calendar_stop = ($calendar_stop <= 0) ? 0 : $user->cvt_user_to_sys_date($calendar_stop);

		$calendar_duration = 0;
		if ( ($calendar_stop > 0) && (($calendar_time == 0) || ($calendar_time >= $calendar_stop)) )
		{
			_error('Calendar_date_not_valid');
		}
		else if ( $calendar_time > 0 )
		{
			$calendar_duration = max(0, $calendar_stop - $calendar_time);
		}
	}

	//
	// post process announces part
	//
	if ( $auth_announces && isset($posting_form->fields['topic_duration']) )
	{
		// get topic duration
		$topic_duration = $posting_form->fields['topic_duration']->value;
		if ( ($topic_duration < 0) || !in_array($topic_type, array(POST_ANNOUNCE, POST_GLOBAL_ANNOUNCE)) )
		{
			$topic_duration = empty($post_info['topic_time']) ? time() : $post_info['topic_time'];
		}
		else if ( $topic_duration > 0 )
		{
			$topic_duration = $user->cvt_user_to_sys_date($topic_duration);
		}
	}
	
	// topic sub type
	$topic_sub_type = ($post_data['first_post'] || ($mode == 'newtopic')) && isset($posting_form->fields['topic_sub_type']) ? intval($posting_form->fields['topic_sub_type']->value) : 0;

	// errors are sended later, checking if error_msg is empty
	// so we don't need to send our own break messages :)
}

// sub title
$sub_title_display = intval($config->data['sub_title_length']);
if ( $mode == 'newtopic' )
{
	$post_info['topic_sub_title'] = '';
	$post_info['post_sub_title'] = '';
}
if ( intval($config->data['topic_title_length']) <= 0 )
{
	$config->set('topic_title_length', 60, true);
}
$template->assign_vars(array(
	'SUBJECT_LENGTH' => intval($config->data['topic_title_length']),
));
if ( $sub_title_display )
{
	$sub_title = trim(_read('sub_title', TYPE_NO_HTML, $post_info['post_sub_title']));
	$template->assign_vars(array(
		'L_SUB_TITLE' => $user->lang('Sub_title'),
		'SUB_TITLE' => $sub_title,
		'SUB_TITLE_LENGTH' => intval($config->data['sub_title_length']),
	));
}
else
{
	$sub_title = trim($post_info['post_sub_title']);
}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	$template->set_filenames(array(
		'confirm_body' => 'confirm_body.tpl')
	);
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
	$forums->display_nav();
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
				submit_post($mode, $post_data, $return_message, $return_meta, $forum_id, $topic_id, $post_id, $poll_id, $topic_type, $bbcode_on, $html_on, $smilies_on, $attach_sig, $bbcode_uid, str_replace("\'", "''", $username), str_replace("\'", "''", $subject), str_replace("\'", "''", $message), str_replace("\'", "''", $poll_title), $poll_options, $poll_length);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
				$input_data = array(
					'topic_type' => $topic_type,
					'bbcode_on' => $bbcode_on,
					'html_on' => $html_on,
					'smilies_on' => $smilies_on,
					'attach_sig' => $attach_sig,
					'bbcode_uid' => $bbcode_uid,
					'post_username' => str_replace("\'", "''", $username),
					'post_subject' => str_replace("\'", "''", $subject),
					'post_message' => str_replace("\'", "''", $message),
					'poll_title' => str_replace("\'", "''", $poll_title),
					'poll_options' => $poll_options,
					'poll_length' => $poll_length,
					'post_icon' => $post_icon,
					'topic_duration' => $topic_duration,
					'calendar_time' => $calendar_time,
					'calendar_duration' => $calendar_duration,
					'sub_title' => $sub_title,
					'topic_sub_type' => $topic_sub_type,
				);
				submit_post($mode, $post_data, $return_message, $return_meta, $forum_id, $topic_id, $post_id, $poll_id, $input_data);
				unset($input_data);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			$tracking_topics = ( !empty($HTTP_COOKIE_VARS[$board_config['cookie_name'] . '_t']) ) ? unserialize($HTTP_COOKIE_VARS[$board_config['cookie_name'] . '_t']) : array();
			$tracking_forums = ( !empty($HTTP_COOKIE_VARS[$board_config['cookie_name'] . '_f']) ) ? unserialize($HTTP_COOKIE_VARS[$board_config['cookie_name'] . '_f']) : array();

			if ( count($tracking_topics) + count($tracking_forums) == 100 && empty($tracking_topics[$topic_id]) )
			{
				asort($tracking_topics);
				unset($tracking_topics[key($tracking_topics)]);
			}

			$tracking_topics[$topic_id] = time();

			setcookie($board_config['cookie_name'] . '_t', serialize($tracking_topics), 0, $board_config['cookie_path'], $board_config['cookie_domain'], $board_config['cookie_secure']);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
			// add a cookie for this topic
			$user->read_cookies();
			$user->cookies['topics'][$topic_id] = time();
			if ( isset($user->cookies['unreads'][$topic_id]) )
			{
				unset($user->cookies['unreads'][$topic_id]);
			}
			$user->write_cookies(array('topics', 'unreads'));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		$template->set_filenames(array(
			'preview' => 'posting_preview.tpl')
		);
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
		// build a row
		$title_row = array_merge($post_info, array(
			'topic_type' => $topic_type,
			'topic_sub_type' => $topic_sub_type,
			'topic_duration' => $topic_duration,
			'topic_calendar_time' => $calendar_time,
			'topic_calendar_duration' => $calendar_duration,
			'post_icon' => $post_icon,
			'post_sub_title' => $sub_title,
			'topic_sub_title' => ($post_data['first_post'] || ($mode == 'newtopic')) ? $sub_title : $post_info['topic_sub_title'],
		));

		// enhance the topic title
		$front_title = new front_title();
		$front_title->set('', $title_row, $post_data['first_post'] || ($mode == 'newtopic'));

		// let's send remaining messages : preview is the place :)
		if ( !empty($error_msg) )
		{
			$template->set_filenames(array('reg_header' => 'error_body.tpl'));
			$template->assign_vars(array('ERROR_MESSAGE' => $error_msg));
			$template->assign_var_from_handle('ERROR_BOX', 'reg_header');
		}
		$template->assign_vars(array(
			'I_POST' => $user->img('icon_minipost'),
		));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		$topic_type_toggle .= ' /> ' . $lang['Post_Announcement'] . '&nbsp;&nbsp;';
	}
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
	if ( $is_auth['auth_global_announce'] )
	{
		$topic_type_toggle .= '<input type="radio" name="topictype" value="' . POST_GLOBAL_ANNOUNCE . '"';
		if ( $post_data['topic_type'] == POST_GLOBAL_ANNOUNCE || $topic_type == POST_GLOBAL_ANNOUNCE )
		{
			$topic_type_toggle .= ' checked="checked"';
		}
		$topic_type_toggle .= ' /> ' . $user->lang('Post_Global_Announcement') . '&nbsp;&nbsp;';
	}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	'U_VIEW_FORUM' => append_sid("viewforum.$phpEx?" . POST_FORUM_URL . "=$forum_id"))
);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
	'U_VIEW_FORUM' => $config->url('index', array(POST_FORUM_URL => $forum_id), true),
));
$hidden_form_fields .= '<input type="hidden" name="last_post" value = "' . $topic_last_post_id . '" />';
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	'L_BBCODE_B_HELP' => $lang['bbcode_b_help'],
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
	//
	// note : all of this has been copied into includes/bbcode.php, function display_bbcodes()
	//
	/*
#
#-----[ FIND ]------------------------------------------------
#
	'L_STYLES_TIP' => $lang['Styles_tip'],
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	$template->assign_block_vars('switch_inline_mode', array());
	$template->assign_var_from_handle('TOPIC_REVIEW_BOX', 'reviewbody');
}
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
// display navigation sentence
$forums->display_nav($forum_id);

// display bbcodes
display_bbcodes();

// display moderators
$moderators = new moderators();
$moderators->read();
$moderators->display('moderators', $forum_id);

// send the name of the topic if any, else send forum name
$template->assign_vars(array(
	'U_TITLE' => ($mode == 'newtopic') ? $config->url('index', array(POST_FORUM_URL => $forum_id), true) : $config->url('viewtopic', array(POST_TOPIC_URL => $topic_id), true),
	'TITLE' => ($mode == 'newtopic') ? $forum_name : _censor($post_info['topic_title']),
	'I_SUBMIT' => $user->img('cmd_submit'),
	'I_PREVIEW' => $user->img('cmd_preview'),
	'I_CANCEL' => $user->img('cmd_cancel'),
));

// icons
$icons->display('ICON_BOX', $post_icon);

// environement
$template->set_switch('switch_standalone');
$template->set_switch('switch_standalone.switch_user_logged_in', $user->data['session_logged_in']);
$template->set_switch('switch_subject');
$template->set_switch('switch_sub_title', $sub_title_display);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
privmsg.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
//
// Parameters
//
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
// pic buttons
$_params = array('post', 'preview', 'confirm', 'cancel', 'delete', 'usersubmit', 'submit_msgdays', 'deleteall', 'save');
$count__params = count($_params);
for ( $i = 0; $i < $count__params; $i++ )
{
	_button($_params[$i]);
}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
// End session management
//
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
$navigation = new navigation();
switch ( $folder )
{
	case 'inbox':
		$box_name = 'Inbox';
		break;
	case 'outbox':
		$box_name = 'Outbox';
		break;
	case 'savebox':
		$box_name = 'Savebox';
		break;
	case 'sentbox':
		$box_name = 'Sentbox';
		break;
}
$navigation->add($box_name, '', 'privmsg', array('folder' => $folder), '');
$navigation->display();

// environement
$template->set_switch('switch_standalone');
$template->set_switch('switch_standalone.switch_user_logged_in', $user->data['session_logged_in']);
$template->set_switch('switch_subject');

// posting subject length
if ( intval($config->data['topic_title_length']) <= 0 )
{
	$config->set('topic_title_length', 60, true);
}
$template->assign_vars(array(
	'I_SUBMIT' => $user->img('cmd_submit'),
	'I_PREVIEW' => $user->img('cmd_preview'),
	'I_CANCEL' => $user->img('cmd_cancel'),
	'SUBJECT_LENGTH' => intval($config->data['topic_title_length']),

	'U_INBOX' => $config->url('privmsg', array('folder' => 'inbox'), true),
	'L_INBOX' => $user->lang('Inbox'),
	'I_INBOX' => $user->img('pm_inbox'),
	'U_OUTBOX' => $config->url('privmsg', array('folder' => 'outbox'), true),
	'L_OUTBOX' => $user->lang('Outbox'),
	'I_OUTBOX' => $user->img('pm_outbox'),
	'U_SENTBOX' => $config->url('privmsg', array('folder' => 'sentbox'), true),
	'L_SENTBOX' => $user->lang('Sentbox'),
	'I_SENTBOX' => $user->img('pm_sentbox'),
	'U_SAVEBOX' => $config->url('privmsg', array('folder' => 'savebox'), true),
	'L_SAVEBOX' => $user->lang('Savebox'),
	'I_SAVEBOX' => $user->img('pm_savebox'),
));
$template->set_switch('inbox', ($folder == 'inbox') || empty($folder));
$template->set_switch('outbox', ($folder == 'outbox'));
$template->set_switch('sentbox', ($folder == 'sentbox'));
$template->set_switch('savebox', ($folder == 'savebox'));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			obtain_word_list($orig_word, $replace_word);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
			obtain_word_list($orig_word, $replacement_word);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		'L_BBCODE_B_HELP' => $lang['bbcode_b_help'],
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
		//
		// note : all of this has been copied into includes/bbcode.php, function display_bbcodes()
		//
		/*
#
#-----[ FIND ]------------------------------------------------
#
		'L_STYLES_TIP' => $lang['Styles_tip'],
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		'U_SEARCH_USER' => append_sid("search.$phpEx?mode=searchuser"), 
		'U_VIEW_FORUM' => append_sid("privmsg.$phpEx"))
	);
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
	display_bbcodes();
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			'U_READ' => $u_subject,
			'U_FROM_USER_PROFILE' => $u_from_user_profile)
		);
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
		$template->set_switch('listrow.light', !($i % 2));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
profile.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
// End session management
//
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
$navigation = new navigation();
$navigation->add('Profile', '', 'profile', array('mode' => _read('mode', TYPE_NO_HTML), POST_USERS_URL => _read(POST_USERS_URL, TYPE_INT)), '');
$navigation->display();

// pic buttons
_button('submit');
$template->assign_vars(array(
	'I_SUBMIT' => $user->img('cmd_submit'),
	'S_SUBMIT' => $user->lang('cmd_submit'),
));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	return ( $hash ) ? md5($rand_str) : substr($rand_str, 8);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
	// fix a typo
	return ( $hash ) ? md5($rand_str) : substr($rand_str, 0, 8);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
search.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
include($phpbb_root_path . 'includes/functions_search.'.$phpEx);
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
// read forums if not a searchuser
$searchuser = (_read('mode', TYPE_NO_HTML) == 'searchuser');
if ( !$searchuser )
{
	include($config->url('includes/class_forums'));
	$forums = new forums();
	$forums->read();
}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
// End session management
//
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
if ( !$searchuser )
{
	$user->get_cache(POST_FORUM_URL);
	$navigation = new navigation();
	$navigation->add('Search', '', 'search', array('mode' => _read('mode', TYPE_NO_HTML)), '');
	$navigation->display();
}

// topics class
include($config->url('includes/class_topics'));
class topics_search extends topics
{
	function topics_search($parms='', $extra_parms='')
	{
		parent::topics('search', $parms);
		$this->extra_parms = empty($extra_parms) ? array() : $extra_parms;
	}

	function read(&$search_results, $total_match_count)
	{
		global $db, $user;

		$this->forum_id = 0;
		$this->total_topics = $total_match_count;
		$start = $this->parms['start'];
		$ppage = $this->parms['ppage'];

		// read topics
		$sql = 'SELECT *
					FROM ' . TOPICS_TABLE . '
					WHERE topic_id IN(' . $search_results . ')
					ORDER BY topic_last_time DESC
					LIMIT ' . $start . ', ' . $ppage;

		// read results
		$result = $db->sql_query($sql, false, __LINE__, __FILE__);
		$this->pre_process();
		while ( $row = $db->sql_fetchrow($result) )
		{
			$this->row_process($row);
			$this->data_ext[ $row['topic_id'] ] = $row;
		}
		$db->sql_freeresult($result);

		// get complementary data
		$this->post_process();
	}

	function bottom_line($empty=false)
	{
		global $template, $user;

		$template->set_switch('topicrow');
		$template->set_switch('topicrow.bottom');
		$template->set_switch('topicrow.bottom.no_topics', $empty);
		$template->set_filenames(array('bottom_row' => 'topics_bottom_search.tpl'));
		$template->assign_var_from_handle('BOTTOM_ROW', 'bottom_row');
	}
}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	$store_vars = array('search_results', 'total_match_count', 'split_search', 'sort_by', 'sort_dir', 'show_results', 'return_chars');
	$search_results = '';
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
	//
	// note : auth_sql will never be empty, so the forums table will always be joigned to the research
	//
	$auth_sql = '';
	$store_vars[] = 'no_subs';

	// read parms
	$search_forum = _read('search_forum', TYPE_INT);
	$no_subs = _button('no_subs');

	// check forum id
	if (!isset($forums->data[$search_forum]) || !$user->auth(POST_FORUM_URL, 'auth_read', $search_forum) )
	{
		message_die(GENERAL_MESSAGE, $user->lang('No_such_forum'));
	}

	// get min and max forum ids for the branch asked
	$min_id = intval($search_forum);
	$max_id = $no_subs ? $search_forum : $forums->data[$search_forum]['last_child_id'];

	// get excluded forums
	$tkeys = array_flip($forums->keys);
	$min_idx = $tkeys[$min_id];
	$max_idx = $tkeys[$max_id];
	unset($tkeys);
	$exclude_forums = array();
	$something = false;
	for ( $i = $min_idx; $i <= $max_idx; $i++ )
	{
		if ( !$user->auth(POST_FORUM_URL, 'auth_read', $forums->keys[$i]) )
		{
			$exclude_forums[] = $forums->keys[$i];
		}
		else
		{
			$something = true;
		}
	}

	// halt on no forum authed
	if ( !$something )
	{
		message_die(GENERAL_MESSAGE, $lang['No_searchable_forums']);
	}

	// set branch range
	$auth_sql = $no_subs ? 'f.forum_id = ' . $min_id : '(f.forum_order BETWEEN ' . intval($forums->data[$min_id]['forum_order']) . ' AND ' . intval($forums->data[$max_id]['forum_order']) . ')';

	// exclude unreadable forums
	if ( !empty($exclude_forums) )
	{
		$auth_sql .= count($exclude_forums) > 1 ? ' AND f.forum_id NOT IN(' . implode(', ', $exclude_forums) . ')' : ' AND f.forum_id <> ' . $exclude_forums[0];
		unset($exclude_forums);
	}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
				if ( $userdata['session_logged_in'] )
				{
					$sql = "SELECT post_id 
						FROM " . POSTS_TABLE . " 
						WHERE post_time >= " . $userdata['user_lastvisit'];
				}
				else
				{
					redirect(append_sid("login.$phpEx?redirect=search.$phpEx&search_id=newposts", true));
				}
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
				$user->read_cookies();
				if ( empty($user->cookies['unreads']) )
				{
					message_return('No_search_match');
				}
				asort($user->cookies['unreads']);
				$floor = intval($user->cookies['unreads'][ _first_key($user->cookies['unreads']) ]);
				$sql = 'SELECT post_id, topic_id, post_time
							FROM ' . POSTS_TABLE . '
							WHERE topic_id IN(' . implode(', ', array_keys($user->cookies['unreads'])) . ')
								AND post_time > ' . $floor;
				$result = $db->sql_query($sql, false, __LINE__, __FILE__);
				$search_ids = array();
				while ( $row = $db->sql_fetchrow($result) )
				{
					if ( $row['post_time'] >= $user->cookies['unreads'][ $row['topic_id'] ] )
					{
						$search_ids[] = $row['post_id'];
					}
				}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			if ( !($result = $db->sql_query($sql)) )
			{
				message_die(GENERAL_ERROR, 'Could not obtain matched posts list', '', __LINE__, __FILE__, $sql);
			}

			$search_ids = array();
			while( $row = $db->sql_fetchrow($result) )
			{
				$search_ids[] = $row['post_id'];
			}
			$db->sql_freeresult($result);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
			if ( $search_id != 'newposts' )
			{
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
			}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		$auth_sql = '';
		if ( $search_forum != -1 )
		{
			$is_auth = auth(AUTH_READ, $search_forum, $userdata);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ FIND ]------------------------------------------------
#
			if ( $ignore_forum_sql != '' )
			{
				$auth_sql .= ( $auth_sql != '' ) ? " AND f.forum_id NOT IN ($ignore_forum_sql) " : "f.forum_id NOT IN ($ignore_forum_sql) ";
			}
		}
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	//
	// Look up data ...
	//
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
	// no result : bye :)
	if ( empty($search_results) )
	{
		message_die(GENERAL_MESSAGE, $lang['No_search_match']);
	}

	// get cookies for unreaded topics
	$user->read_cookies();

	// display results as topics
	if ( $show_results == 'topics' )
	{
		// get highlight parm
		$highlight_active = '';
		$highlight_match = array();
		for($j = 0; $j < count($split_search); $j++ )
		{
			$split_word = $split_search[$j];

			if ( $split_word != 'and' && $split_word != 'or' && $split_word != 'not' )
			{
				$highlight_match[] = '#\b(' . str_replace("*", "([\w]+)?", $split_word) . ')\b#is';
				$highlight_active .= " " . $split_word;

				for ($k = 0; $k < count($synonym_array); $k++)
				{ 
					list($replace_synonym, $match_synonym) = split(' ', trim(strtolower($synonym_array[$k]))); 

					if ( $replace_synonym == $split_word )
					{
						$highlight_match[] = '#\b(' . str_replace("*", "([\w]+)?", $replace_synonym) . ')\b#is';
						$highlight_active .= ' ' . $match_synonym;
					}
				} 
			}
		}
		$extra_parms = empty($highlight_active) ? '' : array('highlight' => urlencode(trim($highlight_active)));

		// filter page and order
		$start = max(0, _read('start', TYPE_INT));
		$ppage = _read('ppage', TYPE_INT);
		$ppage = ($ppage > 0) ? $ppage : (intval($user->data['user_topics_ppage']) ? intval($user->data['user_topics_ppage']) : (intval($config->data['topics_per_page']) ? intval($config->data['topics_per_page']) : 50));
		$parms = array(
			'sort' => '',
			'order' => '',
			'topicdays' => 0,
			'start' => $start,
			'ppage' => $ppage,
			'search_id' => intval($search_id),
		);

		$topics = new topics_search($parms, $extra_parms);
		$topics->read($search_results, $total_match_count);

		// start the page
		$page_title = $user->lang('Search');
		include($config->url('includes/page_header'));

		// jumpbox
		make_jumpbox('index');

		// constants
		$l_search_matches = ( $total_match_count == 1 ) ? sprintf($user->lang('Found_search_match'), $total_match_count) : sprintf($user->lang('Found_search_matches'), $total_match_count);
		$template->assign_vars(array(
			'L_SEARCH_MATCHES' => $l_search_matches,
		));

		// upper box (so with forum nav sentence for each topic), force display empty, force the title
		$topics->display(true, true);

		// display
		$template->set_filenames(array('body' => 'search_results_topics.tpl'));
		$template->pparse('body');
		include($config->url('includes/page_tail'));
		exit;
	}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
			$sql = "SELECT pt.post_text,
				FROM " . FORUMS_TABLE . " f, " . TOPICS_TABLE . " t,
				WHERE p.post_id IN ($search_results)
					AND pt.post_id = p.post_id
					AND f.forum_id = p.forum_id
					AND p.topic_id = t.topic_id
					AND p.poster_id = u.user_id";
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
			$sql = str_replace('SELECT ', 'SELECT pt.post_sub_title, ', $sql);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		$tracking_topics = ( isset($HTTP_COOKIE_VARS[$board_config['cookie_name'] . '_t']) ) ? unserialize($HTTP_COOKIE_VARS[$board_config['cookie_name'] . '_t']) : array();
		$tracking_forums = ( isset($HTTP_COOKIE_VARS[$board_config['cookie_name'] . '_f']) ) ? unserialize($HTTP_COOKIE_VARS[$board_config['cookie_name'] . '_f']) : array();
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
		// prepare title enhancement
		$front_title = new front_title();
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			$forum_url = append_sid("viewforum.$phpEx?" . POST_FORUM_URL . '=' . $searchset[$i]['forum_id']);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
			$forum_url = $config->url('index', array(POST_FORUM_URL => $searchset[$i]['forum_id']), true);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
				if ( $userdata['session_logged_in'] && $searchset[$i]['post_time'] > $userdata['user_lastvisit'] )
				{
					if ( !empty($tracking_topics[$topic_id]) && !empty($tracking_forums[$forum_id]) )
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ FIND ]------------------------------------------------
#
						$mini_post_alt = $lang['Post'];
					}
				}
				else
				{
					$mini_post_img = $images['icon_minipost'];
					$mini_post_alt = $lang['Post'];
				}
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
				$topic_last_read = intval($user->cookies['unreads'][ $searchset[$i]['topic_id'] ]);
				if ( !empty($topic_last_read) && ($searchset[$i]['post_time'] > $topic_last_read) )
				{
					$mini_post_img = $images['icon_minipost_new'];
					$mini_post_alt = $lang['New_post'];
				}
				else
				{
					$mini_post_img = $images['icon_minipost'];
					$mini_post_alt = $lang['Post'];
				}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
					'U_POST' => $post_url,
					'U_TOPIC' => $topic_url,
					'U_FORUM' => $forum_url)
				);
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
				// enhance the topic title
				$front_title->set('searchresults', $searchset[$i], $searchset[$i]['topic_first_post_id'] == $searchset[$i]['post_id'], $highlight_active);

				// navigation
				$forums->display_nav($searchset[$i]['forum_id'], 'searchresults.nav', true);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			else
			{
				$message = '';

				if ( count($orig_word) )
				{
					$topic_title = preg_replace($orig_word, $replacement_word, $searchset[$i]['topic_title']);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//
// all of this is now just after "// Look up data ..."
//-- delete
/*
#
#-----[ FIND ]------------------------------------------------
#
					'U_VIEW_FORUM' => $forum_url, 
					'U_VIEW_TOPIC' => $topic_url)
				);
			}
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		$base_url = "search.$phpEx?search_id=$search_id";
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
		// pagination
		$parms = array('search_id' => $search_id);
		$requester = 'search';
		$pagination = new pagination($requester, $parms, 'start');
		$pagination->display('pagination', $total_match_count, $per_page, $start, true, 'Posts_count');
		$template->assign_vars(array(
			'I_TOPIC' => $user->img('folder'),
		));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
$sql = "SELECT c.cat_title, c.cat_id, f.forum_name, f.forum_id  
	FROM " . CATEGORIES_TABLE . " c, " . FORUMS_TABLE . " f
	WHERE f.cat_id = c.cat_id 
	ORDER BY c.cat_order, f.forum_order";
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ FIND ]------------------------------------------------
#
else
{
	message_die(GENERAL_MESSAGE, $lang['No_searchable_forums']);
}
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
$front_pic = $forums->get_front_pic();
$s_forums = '';
if ( !empty($front_pic) )
{
	foreach ( $front_pic as $cur_id => $front )
	{
		$selected = ($search_forum == $cur_id) ? ' selected="selected"' : '';
		$s_forums .= '<option value="' . (($cur_id >= 0) ? $cur_id : -1) . '"' . $selected . '>';
		$count_front = strlen($front);
		for ( $i = 0; $i < $count_front; $i++ )
		{
			$s_forums .= $user->lang('tree_pic_' . $front[$i]);
		}
		if ( $cur_id >= 0 )
		{
			$s_forums .= $user->lang($forums->data[$cur_id]['forum_name']);
		}
		$s_forums .= '</option>';
	}
}
else
{
	message_die(GENERAL_MESSAGE, $lang['No_searchable_forums']);
}
$template->assign_vars(array(
	'L_SEARCH_FORUM' => $user->lang('Search_in_forum'),
	'L_NO_SUBS' => $user->lang('Search_no_subs'),
	'S_NO_SUBS' => _button('no_subs') ? 'checked="checked"' : '',
	'I_SEARCH_BUTTON' => $user->img('cmd_search'),
));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
viewonline.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
// End session management
//
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
$navigation = new navigation();
$navigation->add('Who_is_Online', '', 'viewonline', '', '');
$navigation->display();

// get classes
include($config->url('includes/class_forums'));
include($config->url('includes/class_stats'));

// read forums
$forums = new forums();
$forums->read();
foreach ( $forums->data as $id => $data )
{
	$forum_data[$id] = $user->lang($data['forum_name']);
}

// prepare stats
$stats = new stats();
$user_levels = $stats->get_user_levels();

// get user auths
$user->get_cache(array(POST_FORUM_URL, POST_FORUM_URL . 'jbox'));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
$sql = "SELECT forum_name, forum_id
	FROM " . FORUMS_TABLE;
if ( $result = $db->sql_query($sql) )
{
	while( $row = $db->sql_fetchrow($result) )
	{
		$forum_data[$row['forum_id']] = $row['forum_name'];
	}
}
else
{
	message_die(GENERAL_ERROR, 'Could not obtain user/online forums information', '', __LINE__, __FILE__, $sql);
}

//
// Get auth data
//
$is_auth_ary = array();
$is_auth_ary = auth(AUTH_VIEW, AUTH_LIST_ALL, $userdata);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			$style_color = '';
			if ( $row['user_level'] == ADMIN )
			{
				$username = '<b style="color:#' . $theme['fontcolor3'] . '">' . $username . '</b>';
			}
			else if ( $row['user_level'] == MOD )
			{
				$username = '<b style="color:#' . $theme['fontcolor2'] . '">' . $username . '</b>';
			}

			if ( !$row['user_allow_viewonline'] )
			{
				$view_online = ( $userdata['user_level'] == ADMIN ) ? true : false;
				$hidden_users++;

				$username = '<i>' . $username . '</i>';
			}
			else
			{
				$view_online = true;
				$registered_users++;
			}
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
			if ( $row['user_allow_viewonline'] )
			{
				$registered_users++;
			}
			else
			{
				$hidden_users++;
			}
			if ( $row['user_allow_viewonline'] || ($row['user_id'] == $user->data['user_id']) || ($user->data['user_level'] == ADMIN) || ($user->auth(POST_FORUM_URL, 'auth_mod', intval($row['session_page'])) && ($row['user_level'] != ADMIN)) )
			{
				$view_online = true;
				$style = isset($user_levels[ $row['user_level'] ]) ? $user_levels[ $row['user_level'] ]['style'] : $user_levels[USER]['style'];
				$username = sprintf(($row['user_allow_viewonline'] ? (empty($style) ? '%s' : '<span' . $style . '>%s</span>') : '<i' . $style . '>%s</i>'), $row['username']);
			}
			else
			{
				$view_online = false;
			}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		if ( $row['session_page'] < 1 || !$is_auth_ary[$row['session_page']]['auth_view'] )
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
		if ( ($row['session_page'] < 1) || !$user->auth(POST_FORUM_URL, 'auth_view', intval($row['session_page'])) )
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			$location_url = append_sid("viewforum.$phpEx?" . POST_FORUM_URL . '=' . $row['session_page']);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
			$location_url = $config->url('index', array(POST_FORUM_URL => $row['session_page']), true);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			'U_USER_PROFILE' => append_sid("profile.$phpEx?mode=viewprofile&amp;" . POST_USERS_URL . '=' . $user_id),
			'U_FORUM_LOCATION' => append_sid($location_url))
		);
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
		$template->set_switch($which_row . '.light', !($$which_counter % 2));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
viewtopic.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
include($phpbb_root_path . 'includes/bbcode.'.$phpEx);
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
include($config->url('includes/class_forums'));

// read forums
$forums = new forums();
$forums->read();
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		if ( isset($HTTP_COOKIE_VARS[$board_config['cookie_name'] . '_sid']) || isset($HTTP_GET_VARS['sid']) )
		{
			$session_id = isset($HTTP_COOKIE_VARS[$board_config['cookie_name'] . '_sid']) ? $HTTP_COOKIE_VARS[$board_config['cookie_name'] . '_sid'] : $HTTP_GET_VARS['sid'];
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ FIND ]------------------------------------------------
#
					redirect("viewtopic.$phpEx?" . POST_POST_URL . "=$post_id#$post_id");
				}
			}
		}

		redirect(append_sid("viewtopic.$phpEx?" . POST_TOPIC_URL . "=$topic_id", true));
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
		// start the session in a clean way
		$userdata = session_pagestart($user_ip, PAGE_INDEX);
		init_userprefs($userdata);

		// get cookies
		$user->read_cookies();
		if ( empty($user->cookies['unreads']) || empty($user->cookies['unreads'][$topic_id]) )
		{
			$l_link = 'Click_return_topic';
			$u_link = $config->url('viewtopic', array(POST_TOPIC_URL => $topic_id), true);
			message_return('No_new_posts_last_visit', $l_link, $u_link);
		}
		else
		{
			$sql = 'SELECT post_id
						FROM ' . POSTS_TABLE . '
						WHERE topic_id = ' . $topic_id . '
							AND post_time > ' . intval($user->cookies['unreads'][$topic_id]) . '
						ORDER BY post_time
						LIMIT 1';
			$result = $db->sql_query($sql, false, __LINE__, __FILE__);
			if ( !$row = $db->sql_fetchrow($result) )
			{
				$l_link = 'Click_return_topic';
				$u_link = $config->url('viewtopic', array(POST_TOPIC_URL => $topic_id), true);
				message_return('No_new_posts_last_visit', $l_link, $u_link);
			}
			else
			{
				redirect($config->url('viewtopic', array(POST_POST_URL => $row['post_id']), true, $row['post_id']));
			}
		}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
$sql = "SELECT t.topic_id,
	FROM " . TOPICS_TABLE . " t, " . FORUMS_TABLE . " f" . $join_sql_table . "
	WHERE $join_sql
		AND f.forum_id = t.forum_id
		$order_sql";
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
// we don't need the forums table, so do some cleanings
$sql = str_replace(', ' . FORUMS_TABLE . ' f', '', $sql);
$sql = str_replace('AND f.forum_id = t.forum_id', '', $sql);
$sql = str_replace(', f.forum_id', ', t.forum_id', $sql);
$sql = preg_replace('/, f\.\w*/si', '', $sql);

// added fields
$added_fields = 't.topic_sub_type, t.topic_duration, t.topic_first_post_id, t.topic_sub_title, ';
if ( $config->data['mod_topic_calendar_CH'] )
{
	$added_fields .= 't.topic_calendar_time, t.topic_calendar_duration, ';
}
$sql = str_replace('SELECT ', 'SELECT ' . $added_fields, $sql);
$sql = str_replace('GROUP BY ', 'GROUP BY ' . $added_fields, $sql);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
$is_auth = auth(AUTH_ALL, $forum_id, $userdata, $forum_topic_data);

if( !$is_auth['auth_view'] || !$is_auth['auth_read'] )
{
	if ( !$userdata['session_logged_in'] )
	{
		$redirect = ($post_id) ? POST_POST_URL . "=$post_id" : POST_TOPIC_URL . "=$topic_id";
		$redirect .= ($start) ? "&start=$start" : '';
		redirect(append_sid("login.$phpEx?redirect=viewtopic.$phpEx&$redirect", true));
	}

	$message = ( !$is_auth['auth_view'] ) ? $lang['Topic_post_not_exist'] : sprintf($lang['Sorry_auth_read'], $is_auth['auth_read_type']);

	message_die(GENERAL_MESSAGE, $message);
}
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
// add forums data to the forum_topic_data row
if ( !isset($forums->data[$forum_id]) )
{
	message_return('Topic_post_not_exist');
}
$forum_topic_data = array_merge($forum_topic_data, $forums->data[$forum_id]);

// get auths
$user->get_cache(array(POST_FORUM_URL, POST_FORUM_URL . 'jbox'));
$is_auth = auth(AUTH_ALL, $forum_id, $user->data, $forum_topic_data);

if ( !$user->auth(POST_FORUM_URL, 'auth_read', $forum_id) )
{
	if ( !$user->data['session_logged_in'] )
	{
		redirect($config->url('login', array('redirect' => str_replace('?', '&', $config->url('viewtopic', empty($post_id) || !empty($start) ? array(POST_TOPIC_URL => $topic_id, 'start' => intval($start)) : array(POST_POST_URL => $post_id, 'start' => intval($start))))), true));
	}
	message_return($user->auth(POST_FORUM_URL, 'auth_view', $forum_id) ? sprintf($user->lang('Sorry_auth_read'), $user->lang('Auth_Users_granted_access')) : 'Topic_post_not_exist');
}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
if ($post_id)
{
	$start = floor(($forum_topic_data['prev_posts'] - 1) / intval($board_config['posts_per_page'])) * intval($board_config['posts_per_page']);
}
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
//
// unmark a post
//
// check if keep unread is on
$cookie_setup = $user->get_cookies_setup();
if ( $cookie_setup['keep_unreads'] )
{
	$unmark = _read('unmark', TYPE_NO_HTML);
	if ( in_array($unmark, array('post', 'topic')) )
	{
		// get the last time read for the topic or the post
		$last_time_read = intval($forum_topic_data['topic_time']) - 1;
		if ( ($unmark == 'post') && !empty($post_id) )
		{
			$sql = 'SELECT post_time
						FROM ' . POSTS_TABLE . '
						WHERE post_id = ' . intval($post_id);
			$result = $db->sql_query($sql, false, __LINE__, __FILE__);
			if ( !$row = $db->sql_fetchrow($result) )
			{
				message_return('No_such_post', 'Click_return_forum', $config->url('index', array(POST_FORUM_URL => $forum_id), true));
			}
			$last_time_read = intval($row['post_time']) - 1;
		}

		// unmark the topic
		$user->read_cookies();
		if ( isset($user->cookies['topics'][$topic_id]) )
		{
			unset($user->cookies['topics'][$topic_id]);
		}
		$user->cookies['unreads'][$topic_id] = $last_time_read;
		$user->write_cookies(array('topics', 'unreads'));

		// return to the forum
		message_return('Topic_unmarked_read', 'Click_return_forum', $config->url('index', array(POST_FORUM_URL => $forum_id), true));
	}
}
$template->set_switch('unmark_read', $cookie_setup['keep_unreads']);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
$sql = "SELECT u.username,
	FROM " . POSTS_TABLE . " p, " . USERS_TABLE . " u, " . POSTS_TEXT_TABLE . " pt
	WHERE p.topic_id = $topic_id
		$limit_posts_time
		AND pt.post_id = p.post_id
		AND u.user_id = p.poster_id
	ORDER BY p.post_time $post_time_order
	LIMIT $start, ".$board_config['posts_per_page'];
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
$sql = str_replace('SELECT ', 'SELECT pt.post_sub_title, ', $sql);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
$sql = "SELECT *
	FROM " . RANKS_TABLE . "
	ORDER BY rank_special, rank_min";
if ( !($result = $db->sql_query($sql)) )
{
	message_die(GENERAL_ERROR, "Could not obtain ranks information.", '', __LINE__, __FILE__, $sql);
}

$ranksrow = array();
while ( $row = $db->sql_fetchrow($result) )
{
	$ranksrow[] = $row;
}
$db->sql_freeresult($result);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
$ranks = new ranks();
$ranksrow = $ranks->read();

// prepare title enhancement
$front_title = new front_title();
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
$view_forum_url = append_sid("viewforum.$phpEx?" . POST_FORUM_URL . "=$forum_id");
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
$view_forum_url = $config->url('index', array(POST_FORUM_URL => $forum_id), true);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
if ( $userdata['session_logged_in'] )
{
	$tracking_topics = ( isset($HTTP_COOKIE_VARS[$board_config['cookie_name'] . '_t']) ) ? unserialize($HTTP_COOKIE_VARS[$board_config['cookie_name'] . '_t']) : array();
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ FIND ]------------------------------------------------
#
	$tracking_topics[$topic_id] = time();

	setcookie($board_config['cookie_name'] . '_t', serialize($tracking_topics), 0, $board_config['cookie_path'], $board_config['cookie_domain'], $board_config['cookie_secure']);
}
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
$topic_last_read = $forums->mark(POST_POST_URL, $topic_id);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
$s_auth_can .= ( ( $is_auth['auth_vote'] ) ? $lang['Rules_vote_can'] : $lang['Rules_vote_cannot'] ) . '<br />';
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
if ( !empty($config->data['mod_topic_calendar_CH']) )
{
	$s_auth_can .= ($user->auth(POST_FORUM_URL, 'auth_calendar', $forum_id) ? $user->lang('Rules_calendar_can') : $user->lang('Rules_calendar_cannot')) . '<br />';
}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		$s_watching_topic_img = ( isset($images['Topic_watch']) ) ? "<a href=\"viewtopic.$phpEx?" . POST_TOPIC_URL . "=$topic_id&amp;watch=topic&amp;start=$start&amp;sid=" . $userdata['session_id'] . '"><img src="' . $images['Topic_watch'] . '" alt="' . $lang['Start_watching_topic'] . '" title="' . $lang['Start_watching_topic'] . '" border="0"></a>' : '';
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
		if ( isset($images['Topic_watch']) && !isset($images['topic_watch']) )
		{
			$images['topic_watch'] = $images['Topic_watch'];
		}
		$s_watching_topic_img = ( isset($images['topic_watch']) ) ? "<a href=\"viewtopic.$phpEx?" . POST_TOPIC_URL . "=$topic_id&amp;watch=topic&amp;start=$start&amp;sid=" . $userdata['session_id'] . '"><img src="' . $images['topic_watch'] . '" alt="' . $lang['Start_watching_topic'] . '" title="' . $lang['Start_watching_topic'] . '" border="0"></a>' : '';
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
				$vote_graphic_img = $images['voting_graphic'][$vote_graphic];
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
				$vote_graphic_img_left = $images['voting_left'][$vote_graphic];
				$vote_graphic_img_right = $images['voting_right'][$vote_graphic];
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
					'POLL_OPTION_IMG' => $vote_graphic_img,
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
					'POLL_OPTION_IMG_LEFT' => $vote_graphic_img_left,
					'POLL_OPTION_IMG_RIGHT' => $vote_graphic_img_right,
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	if ( $userdata['session_logged_in'] && $postrow[$i]['post_time'] > $userdata['user_lastvisit'] && $postrow[$i]['post_time'] > $topic_last_read )
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
	if ( !empty($topic_last_read) && ($postrow[$i]['post_time'] > $topic_last_read) )
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	if ( ( $userdata['user_id'] == $poster_id && $is_auth['auth_edit'] ) || $is_auth['auth_mod'] )
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
	if ( (($user->data['user_id'] == $poster_id) && ($user->data['session_logged_in'] || (!$user->data['session_logged_in'] && ($user->data['session_ip'] == $postrow[$i]['poster_ip']))) && $user->auth(POST_FORUM_URL, 'auth_edit', $forum_id)) || $user->auth(POST_FORUM_URL, 'auth_mod', $forum_id) )
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		$l_edited_by = '<br /><br />' . sprintf($l_edit_time_total, $poster, create_date($board_config['default_dateformat'], $postrow[$i]['post_edit_time'], $board_config['board_timezone']), $postrow[$i]['post_edit_count']);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
		$l_edited_by = '<br />' . sprintf($l_edit_time_total, $poster, $user->date($postrow[$i]['post_edit_time']), $postrow[$i]['post_edit_count']);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		'U_POST_ID' => $postrow[$i]['post_id'])
	);
}
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
		'U_POST_ID' => $postrow[$i]['post_id'],
		'U_UNREAD_POST' => $config->url('viewtopic', array(POST_POST_URL => $postrow[$i]['post_id'], 'unmark' => 'post'), true),
	));
	$template->set_switch('postrow.light', !($i % 2));
	$template->set_switch('postrow.unmark_read', $cookie_setup['keep_unreads']);

	// enhance the topic title
	$front_title->set('postrow', array_merge($forum_topic_data, $postrow[$i]), $forum_topic_data['topic_first_post_id'] == $postrow[$i]['post_id'], $highlight_match);

	// post buttons switches
	$post_buttons = array('profile', 'pm', 'email', 'www', 'icq', 'aim', 'msn', 'yim', 'quote', 'search', 'edit', 'ip', 'delpost');
	$count_post_buttons = count($post_buttons);
	for ( $j = 0; $j < $count_post_buttons; $j++ )
	{
		$button = $post_buttons[$j] . '_img';
		$template->set_switch('postrow.' . $button, !empty($$button));
	}
}

$forums->display_nav($forum_id);

$moderators = new moderators();
$moderators->read();
$moderators->display('moderators', $forum_id);

$pagination = new pagination('viewtopic', array(POST_TOPIC_URL => $topic_id, 'postdays' => $post_days, 'postorder' => $post_order, 'highlight' => $highlight));
$pagination->display('pagination', $total_replies, $config->data['posts_per_page'], $start, true, 'Posts_count');

$watch_mode = $is_watching_topic ? 'unwatch' : 'watch';
$l_watch_mode = $is_watching_topic ? 'Stop_watching_topic' : 'Start_watching_topic';
$watch_img = $is_watching_topic ? 'topic_un_watch' : 'topic_watch';
$template->assign_vars(array(
	'U_WATCH_TOPIC' => $config->url('viewtopic', array(POST_TOPIC_URL => $topic_id, $watch_mode => 'topic', 'start' => $start, 'postdays' => $post_days, 'postorder' => $post_order, 'highlight' => $highlight), true),
	'L_WATCH_TOPIC' => $user->lang($l_watch_mode),
	'I_WATCH_TOPIC' => $user->img($watch_img),

	'U_UNREAD_TOPIC' => $config->url('viewtopic', array(POST_TOPIC_URL => $topic_id, 'unmark' => 'topic'), true),
	'L_UNREAD_TOPIC' => $user->lang('Topic_unmark_read'),
	'I_UNREAD_TOPIC' => $user->img('topic_unmark_read'),

	'L_UNREAD_POST' => $user->lang('Post_unmark_read'),
	'I_UNREAD' => $user->img('icon_unmark_read'),

	'I_VIEW_PREVIOUS_TOPIC' => $user->img('topic_previous'),
	'I_VIEW_NEXT_TOPIC' => $user->img('topic_next'),

	'I_BACK_TO_TOP' => $user->img('icon_go_top'),
));
$template->set_switch('watch', $can_watch_topic);
if ( $can_watch_topic )
{
	$template->set_switch('watch.image', !empty($images[$watch_img]));
}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
admin/admin_board.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
include($phpbb_root_path . 'includes/functions_selects.'.$phpEx);
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
// pic buttons
_button('submit');
$template->assign_vars(array(
	'I_SUBMIT' => $user->img('cmd_submit'),
	'S_SUBMIT' => $user->lang('cmd_submit'),
));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
		$message = $lang['Config_updated'] .
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
		$config->read(true);

		// recache forums
		include($config->url('includes/class_forums'));
		$forums = new forums();
		$forums->read(true);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
admin/admin_groups.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
else
{
	$mode = '';
}
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
include($config->url('includes/class_forums'));

$user->get_cache(POST_GROUPS_URL);
$user_groups_list = $user->get_groups_list();

// auth
$auth_manage = false;

// level
$is_founder = $user->data['session_logged_in'] && in_array(GROUP_FOUNDER, $user_groups_list);
$is_admin = $user->data['session_logged_in'] && in_array(GROUP_ADMIN, $user_groups_list);
$is_owner = false;

// read group
if ( _button('new') || ($mode == 'newgroup') )
{
	$group_id = 0;
}
else
{
	$group_id = _read(POST_GROUPS_URL, TYPE_INT);
}
$group_status = GROUP_STANDARD;
$group_row = array();
if ( !empty($group_id) )
{
	$sql = 'SELECT *
				FROM ' . GROUPS_TABLE . '
				WHERE group_id = ' . intval($group_id) . '
					AND group_single_user <> ' . true . '
					AND group_status < ' . GROUP_SPECIAL;
	$result = $db->sql_query($sql, false, __LINE__, __FILE__);
	if ( $group_row = $db->sql_fetchrow($result) )
	{
		$group_status = intval($group_row['group_status']);
		$is_owner = $user->data['session_logged_in'] && (intval($group_row['group_moderator']) == $user->data['user_id']);
	}
}

switch ( $group_id )
{
	case GROUP_FOUNDER:
		$auth_manage = $is_owner;
		break;
	case GROUP_ADMIN:
		$auth_manage = $is_founder;
		break;
	case 0: // GROUP_ALL:
		if ( _button('new') || ($mode == 'newgroup') )
		{
			$auth_manage = $is_founder || $is_admin;
		}
	default:
		$auth_manage = $is_owner || $is_founder || $is_admin;
		break;
}
if ( !empty($group_id) || (!_button('new') && ($mode != 'newgroup')) )
{
	// check group
	if ( !empty($group_id) && empty($group_row) )
	{
		_error('Group_not_exist');
	}

	// check management auth
	if ( !$auth_manage )
	{
		_error('Manage_group_denied');
	}

	// send error
	if ( $error )
	{
		$l_link = 'Click_return_groupsadmin';
		$u_link = $config->url('admin/admin_groups', '', true);
		message_return($error_msg, $l_link, $u_link);
	}
}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		$sql = "SELECT *
			FROM " . GROUPS_TABLE . "
			WHERE group_single_user <> " . TRUE . "
			AND group_id = $group_id";
		if ( !($result = $db->sql_query($sql)) )
		{
			message_die(GENERAL_ERROR, 'Error getting group information', '', __LINE__, __FILE__, $sql);
		}

		if ( !($group_info = $db->sql_fetchrow($result)) )
		{
			message_die(GENERAL_MESSAGE, $lang['Group_not_exist']);
		}
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
		$group_info = $group_row;
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		$group_open = ' checked="checked"';

		$mode = 'newgroup';
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
		$group_info['group_status'] = GROUP_STANDARD;
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	$group_hidden = ( $group_info['group_type'] == GROUP_HIDDEN ) ? ' checked="checked"' : '';
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
	$s_group_sysstatus_std = (intval($group_info['group_status']) == GROUP_STANDARD) ? ' checked="checked"' : '';
	$s_group_sysstatus_sys = (intval($group_info['group_status']) != GROUP_STANDARD) ? ' checked="checked"' : '';
	$template->assign_vars(array(
		'L_GROUP_SYSSTATUS' => $user->lang('System_group'),
		'S_GROUP_SYSSTATUS_STD' => $s_group_sysstatus_std,
		'GROUP_SYSSTATUS_STD' => GROUP_STANDARD,
		'S_GROUP_SYSSTATUS_SYS' => $s_group_sysstatus_sys,
		'GROUP_SYSSTATUS_SYS' => GROUP_SYSTEM,
		'L_YES' => $user->lang('Yes'),
		'L_NO' => $user->lang('No'),
	));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		//
		// Reset User Moderator Level
		//
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ FIND ]------------------------------------------------
#
						message_die(GENERAL_ERROR, 'Could not update moderator permissions', '', __LINE__, __FILE__, $sql);
					}
				}
			}
		}
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
		// check if it is a system group
		if ( $group_row['group_status'] == GROUP_SYSTEM )
		{
			$l_link = 'Click_return_groupsadmin';
			$u_link = $config->url('admin/admin_groups', array(POST_GROUPS_URL => intval($group_id)), true);
			message_return('Delete_sysgroup_denied', $l_link, $u_link);
		}

		// users to update
		$user_ids = array();

		// get all members of this group
		$sql = 'SELECT user_id
					FROM ' . USER_GROUP_TABLE . '
					WHERE group_id = ' . intval($group_id);
		$result = $db->sql_query($sql, false, __LINE__, __FILE__);
		while ( $row = $db->sql_fetchrow($result) )
		{
			if ( !empty($row['user_id']) )
			{
				$user_ids[ intval($row['user_id']) ] = true;
			}
		}

		// get users having auths specific to this group
		$sql = 'SELECT DISTINCT ug.user_id
					FROM ' . AUTHS_TABLE . ' a, ' . USER_GROUP_TABLE . ' ug
					WHERE ug.group_id = a.group_id
						AND ug.user_pending <> ' . true . '
						AND a.obj_type = \'' . POST_GROUPS_URL . '\'
						AND a.obj_id = ' . intval($group_id) . '
					GROUP BY ug.user_id';
		$result = $db->sql_query($sql, false, __LINE__, __FILE__);
		$user_ids = array();
		while ( $row = $db->sql_fetchrow($result) )
		{
			if ( !empty($row['user_id']) )
			{
				$user_ids[ intval($row['user_id']) ] = true;
			}
		}

		// delete auths relative to this group
		$sql = 'DELETE FROM ' . AUTHS_TABLE . '
					WHERE group_id = ' . intval($group_id) . '
						OR (obj_type = \'' . POST_GROUPS_URL . '\'
							AND obj_id = ' . intval($group_id) . '
						)';
		$db->sql_query($sql, false, __LINE__, __FILE__);

		// delete user caches
		if ( !empty($user_ids) )
		{
			$sql = 'DELETE FROM ' . USERS_CACHE_TABLE . '
						WHERE user_id IN(' . implode(', ', array_keys($user_ids)) . ')';
			$db->sql_query($sql, false, __LINE__, __FILE__);
		}

		// remove from the users group lists this group
		$sql = 'SELECT group_id, group_user_list
					FROM ' . GROUPS_TABLE . '
					WHERE group_user_list LIKE \'%,' . intval($group_id) . ',%\'';
		$result = $db->sql_query($sql, false, __LINE__, __FILE__);
		while ( $row = $db->sql_fetchrow($result) )
		{
			$groups_list = explode(',', substr($row['group_user_list'], 1, strlen($row['group_user_list'])-2));
			if ( !empty($groups_list) )
			{
				$groups_list = array_flip($groups_list);
				if ( isset($groups_list[$group_id]) )
				{
					unset($groups_list[$group_id]);
				}
				$groups_list = empty($groups_list) ? array() : array_keys($groups_list);
			}
			$fields = array(
				'group_user_list' => empty($groups_list) ? '' : ',' . implode(',', $groups_list) . ',',
			);
			$db->sql_statement($fields);
			$sql = 'UPDATE ' . GROUPS_TABLE . '
						SET ' . $db->sql_update . '
						WHERE group_id = ' . intval($row['group_id']);
			$db->sql_query($sql, false, __LINE__, __FILE__);
		}

		// reset the users mod status
		$moderators = new moderators();
		$moderators->set_users_status();
		unset($moderators);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		$sql = "DELETE FROM " . AUTH_ACCESS_TABLE . "
			WHERE group_id = " . $group_id;
		if ( !$db->sql_query($sql) )
		{
			message_die(GENERAL_ERROR, 'Could not update auth_access', '', __LINE__, __FILE__, $sql);
		}
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		$delete_old_moderator = isset($HTTP_POST_VARS['delete_old_moderator']) ? true : false;
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
		$group_status = _read('group_status', TYPE_INT);
		$group_status_available = array_flip(array(GROUP_STANDARD, GROUP_SYSTEM));
		$sys_groups = array_flip(array(GROUP_FOUNDER, GROUP_ADMIN, GROUP_REGISTERED, GROUP_ANONYMOUS));

		// check the group system status value
		if ( !isset($group_status_available[$group_status]) )
		{
			_error('Unknown_group_sysstatus');
		}

		// check if we can remove this system status
		if ( isset($sys_groups[ intval($group_id) ]) && ($group_status != GROUP_SYSTEM) )
		{
			_error('Change_sysgroup_denied');
		}

		// check group type towards group status
		if ( (intval($group_status) >= GROUP_SYSTEM) && ($group_type < GROUP_CLOSED) )
		{
			_error('Change_sysgroup_type_denied');
		}

		// send error
		if ( $error )
		{
			$l_link = 'Click_return_groupsadmin';
			$u_link = $config->url('admin/admin_groups', array(POST_GROUPS_URL => intval($group_id)), true);
			message_return($error_msg, $l_link, $u_link);
		}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			if ( $group_info['group_moderator'] != $group_moderator )
			{
				if ( $delete_old_moderator )
				{
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
					// recache old moderator
					$sql = 'DELETE FROM ' . USERS_CACHE_TABLE . '
								WHERE user_id = ' . $group_info['group_moderator'];
					$db->sql_query($sql, false, __LINE__, __FILE__);

					// remove from the moderator group lists this group
					$sql = 'SELECT group_id, group_user_list
								FROM ' . GROUPS_TABLE . '
								WHERE group_user_list LIKE \'%,' . $group_id . ',%\'
									AND group_user_id = ' . intval($group_info['group_moderator']);
					$result = $db->sql_query($sql, false, __LINE__, __FILE__);
					while ( $row = $db->sql_fetchrow($result) )
					{
						$groups_list = explode(',', substr($row['group_user_list'], 1, strlen($row['group_user_list'])-2));
						if ( !empty($groups_list) )
						{
							$groups_list = array_flip($groups_list);
							if ( isset($groups_list[$group_id]) )
							{
								unset($groups_list[$group_id]);
							}
							$groups_list = empty($groups_list) ? array() : array_keys($groups_list);
						}
						$fields = array(
							'group_user_list' => empty($groups_list) ? '' : ',' . implode(',', $groups_list) . ',',
						);
						$db->sql_statement($fields);
						$sql = 'UPDATE ' . GROUPS_TABLE . '
									SET ' . $db->sql_update . '
									WHERE group_id = ' . intval($row['group_id']);
						$db->sql_query($sql, false, __LINE__, __FILE__);
					}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			$sql = "UPDATE " . GROUPS_TABLE . "
				SET group_type = $group_type, group_name = '" . str_replace("\'", "''", $group_name) . "', group_description = '" . str_replace("\'", "''", $group_description) . "', group_moderator = $group_moderator 
				WHERE group_id = $group_id";
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
// here we added:
//	 , group_status = " . intval($group_status) . "
//-- modify
#
#----------[ IN-LINE FIND ]-----------------------------------
#
SET group_type = $group_type
#
#----------[ IN-LINE AFTER, ADD ]-----------------------------
#
, group_status = " . intval($group_status) . "
#
#-----[ AFTER, ADD ]------------------------------------------
#
# so on a new line after the "WHERE ..." line
#
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
			$message = $lang['Updated_group'] .
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
			// recache group moderator
			$sql = 'DELETE FROM ' . USERS_CACHE_TABLE . '
						WHERE user_id = ' . intval($group_moderator);
			$db->sql_query($sql, false, __LINE__, __FILE__);

			// add to the moderator group lists this group
			$sql = 'SELECT group_id, group_user_list
						FROM ' . GROUPS_TABLE . '
						WHERE group_user_id = ' . intval($group_moderator);
			$result = $db->sql_query($sql, false, __LINE__, __FILE__);
			while ( $row = $db->sql_fetchrow($result) )
			{
				$groups_list = empty($row['group_user_list']) ? array() : array_flip(explode(',', substr($row['group_user_list'], 1, strlen($row['group_user_list'])-2)));
				$groups_list[$group_id] = true;
				$groups_list = array_keys($groups_list);
				$fields = array(
					'group_user_list' => ',' . implode(',', $groups_list) . ',',
				);
				$db->sql_statement($fields);
				$sql = 'UPDATE ' . GROUPS_TABLE . '
							SET ' . $db->sql_update . '
							WHERE group_id = ' . intval($row['group_id']);
				$db->sql_query($sql, false, __LINE__, __FILE__);
			}

			// reset the users mod status
			$moderators = new moderators();
			$moderators->set_users_status();
			unset($moderators);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			$sql = "INSERT INTO " . GROUPS_TABLE . " (group_type, group_name, group_description, group_moderator, group_single_user) 
				VALUES ($group_type, '" . str_replace("\'", "''", $group_name) . "', '" . str_replace("\'", "''", $group_description) . "', $group_moderator,	'0')";
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
// here we added:
//	, group_status
//	, " . intval($group_status) . "
//-- modify
#
#----------[ IN-LINE FIND ]-----------------------------------
#
GROUPS_TABLE . " (group_type
#
#----------[ IN-LINE AFTER, ADD ]-----------------------------
#
, group_status
#
#----------[ IN-LINE FIND ]-----------------------------------
#
VALUES ($group_type
#
#----------[ IN-LINE AFTER, ADD ]-----------------------------
#
, " . intval($group_status) . "
#
#-----[ AFTER, ADD ]------------------------------------------
#
# so on a new line after the "VALUES (..." one
#
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
			$message = $lang['Added_new_group'] .
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
			// recache group moderator
			$sql = 'DELETE FROM ' . USERS_CACHE_TABLE . '
						WHERE user_id = ' . intval($group_moderator);
			$db->sql_query($sql, false, __LINE__, __FILE__);

			// add to the moderator group lists this group
			$sql = 'SELECT group_id, group_user_list
						FROM ' . GROUPS_TABLE . '
						WHERE group_user_id = ' . intval($group_moderator);
			$result = $db->sql_query($sql, false, __LINE__, __FILE__);
			while ( $row = $db->sql_fetchrow($result) )
			{
				$groups_list = empty($row['group_user_list']) ? array() : array_flip(explode(',', substr($row['group_user_list'], 1, strlen($row['group_user_list'])-2)));
				$groups_list[$new_group_id] = true;
				$groups_list = array_keys($groups_list);
				$fields = array(
					'group_user_list' => ',' . implode(',', $groups_list) . ',',
				);
				$db->sql_statement($fields);
				$sql = 'UPDATE ' . GROUPS_TABLE . '
							SET ' . $db->sql_update . '
							WHERE group_id = ' . intval($row['group_id']);
				$db->sql_query($sql, false, __LINE__, __FILE__);
			}

			// reset the users mod status
			$moderators = new moderators();
			$moderators->set_users_status();
			unset($moderators);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	$sql = "SELECT group_id, group_name
		FROM " . GROUPS_TABLE . "
		WHERE group_single_user <> " . TRUE . "
		ORDER BY group_name";
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
	$sql = str_replace('SELECT ', 'SELECT group_status, ', $sql);
	$sql = str_replace('WHERE ', 'WHERE group_status < ' . GROUP_SPECIAL . ' AND ', $sql);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		$select_list .= '<select name="' . POST_GROUPS_URL . '">';
		do
		{
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
			if ( $row['group_status'] == GROUP_SYSTEM )
			{
				$row['group_name'] = $user->lang($row['group_name']);
			}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
admin/admin_mass_email.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
$sql = "SELECT group_id, group_name 
	FROM ".GROUPS_TABLE . "  
	WHERE group_single_user <> 1";
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
$sql = str_replace('SELECT ', 'SELECT group_status,', $sql);
$sql = str_replace('WHERE ', 'WHERE group_status < ' . GROUP_SPECIAL . ' AND group_id <> ' . GROUP_REGISTERED . ' AND ', $sql);
$sql .= ' ORDER BY group_status DESC';
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
if ( $row = $db->sql_fetchrow($result) )
{
	do
	{
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
		if ( intval($row['group_status']) > GROUP_STANDARD )
		{
			$row['group_name'] = $user->lang($row['group_name']);
		}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
admin/admin_ranks.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
$mode = ( in_array($mode, array('add', 'edit', 'save', 'delete')) ) ? $mode : '';
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
if ( _button('cancel') )
{
	$mode = '';
}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
			message_die(GENERAL_ERROR, "Couldn't update/insert into ranks table", "", __LINE__, __FILE__, $sql);
		}

		$message .= "<br /><br />" . sprintf($lang['Click_return_rankadmin']
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
		$ranks = new ranks();
		$ranks->read(true);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
			$message = $lang['Rank_removed'] .
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
			$ranks = new ranks();
			$ranks->read(true);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		"U_RANK_DELETE" => append_sid("admin_ranks.$phpEx?mode=delete&amp;id=$rank_id"))
	);
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
	$template->set_switch('ranks.light', !($i % 2));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
admin/admin_smilies.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
else
{
	$mode = "";
}
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
if ( _button('cancel') )
{
	$mode = '';
}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
		$message = $lang['smiley_import_success'] .
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
		$smilies = new smilies();
		$smilies->read(true);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
				$message = $lang['smiley_del_success'] .
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
				$smilies = new smilies();
				$smilies->read(true);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
			$message = $lang['smiley_edit_success'] .
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
			$smilies = new smilies();
			$smilies->read(true);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
			$message = $lang['smiley_add_success'] .
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
			$smilies = new smilies();
			$smilies->read(true);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			"U_SMILEY_DELETE" => append_sid("admin_smilies.$phpEx?mode=delete&amp;id=" . $smilies[$i]['smilies_id']))
		);
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
		$template->set_switch('smiles.light', !($i % 2));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
admin/admin_styles.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
			$message = $lang['Theme_installed'] .
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
			$themes = new themes();
			$themes->read(true);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
							for($i = 0; $i < count($$sub_dir); $i++)
							{
								$working_data = $$sub_dir;
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
								if ( !empty($working_data) && is_array($working_data) )
								{
									foreach ( $working_data as $style_id => $style_data )
									{
										$working_data[$style_id]['install_to'] = $sub_dir;
									}
								}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
						"U_STYLES_INSTALL" => append_sid("admin_styles.$phpEx?mode=addnew&amp;style=" . urlencode($installable_themes[$i]['style_name']) . "&amp;install_to=" . urlencode($installable_themes[$i]['template_name'])))
					);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
						'U_STYLES_INSTALL' => $config->url('admin/admin_styles', array('mode' => 'addnew', 'style' => urlencode($installable_themes[$i]['style_name']), 'install_to' => urlencode($installable_themes[$i]['install_to'])), true),
					));
					$template->set_switch('styles.light', !($i % 2));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			// Wheeeew! Thank heavens for copy and paste and search and replace :D
			//
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
			$updated['images_pack'] = _read('images_pack', TYPE_NO_HTML);
			$updated['custom_tpls'] = _read('custom_tpls', TYPE_NO_HTML);

			// let's perform some checks
			if ( !empty($updated['images_pack']) )
			{
				if ( !file_exists(phpbb_realpath($config->root . 'templates/' . $updated['template_name'] . '/' . $updated['images_pack'])) || is_dir(phpbb_realpath($config->root . 'templates/' . $updated['template_name'] . '/' . $updated['images_pack'])) || is_link(phpbb_realpath($config->root . 'templates/' . $updated['template_name'] . '/' . $updated['images_pack'])) )
				{
					_error('Images_pack_not_found');
				}
			}
			if ( !empty($updated['custom_tpls']) )
			{
				if ( !file_exists(phpbb_realpath($config->root . 'templates/' . $updated['template_name'] . '/' . $updated['custom_tpls'])) || !is_dir(phpbb_realpath($config->root . 'templates/' . $updated['template_name'] . '/' . $updated['custom_tpls'])) )
				{
					_error('Custom_tpls_not_found');
				}
			}
			if ( !empty($updated['head_stylesheet']) )
			{
				if ( !file_exists(phpbb_realpath($config->root . 'templates/' . $updated['template_name'] . '/' . $updated['head_stylesheet'])) )
				{
					_error('Head_stylesheet_not_found');
				}
			}
			if ( $error )
			{
				message_die(GENERAL_MESSAGE, $error_msg);
			}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
				$message = $lang['Theme_updated'] .
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
				$themes = new themes();
				$themes->read(true);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
				$message = $lang['Theme_created'] .
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
				$themes = new themes();
				$themes->read(true);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
				message_die(GENERAL_MESSAGE, $lang['No_template_dir']);
			}

			$s_hidden_fields .= '<input type="hidden" name="mode" value="' . $mode . '" />';

			$template->assign_vars(array(
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
				'L_IMAGES_PACK' => $lang['Images_pack'],
				'L_IMAGES_PACK_EXPLAIN' => $lang['Images_pack_explain'],
				'IMAGES_PACK' => $selected['images_pack'],
				'L_CUSTOM_TPLS' => $lang['Custom_tpls'],
				'L_CUSTOM_TPLS_EXPLAIN' => $lang['Custom_tpls_explain'],
				'CUSTOM_TPLS' => $selected['custom_tpls'],
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
			$message = $lang['Style_removed'] .
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
			// recache themes
			$themes = new themes();
			$themes->read(true);

			// update also forums
			$sql = 'UPDATE ' . FORUMS_TABLE . '
				SET forum_style = ' . $config->data['default_style'] . '
				WHERE forum_style = ' . intval($style_id);
			$db->sql_query($sql, false, __LINE__, __FILE__);
			if ( $db->sql_affectedrows() )
			{
				// recache forums
				include_once($config->url('includes/class_forums'));
				$forums = new forums();
				$forums->read(true);
			}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
				"U_STYLES_DELETE" => append_sid("admin_styles.$phpEx?mode=delete&amp;style_id=" . $style_rowset[$i]['themes_id']))
			);
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
			$template->set_switch('styles.light', !($i % 2));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
admin/admin_users.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	$module['Users']['Manage'] = $filename;

	return;
}
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
define('IN_PROFILE', true);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			$sql = "SELECT g.group_id 
				FROM " . USER_GROUP_TABLE . " ug, " . GROUPS_TABLE . " g  
				WHERE ug.user_id = $user_id 
					AND g.group_id = ug.group_id 
					AND g.group_single_user = 1";
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ FIND ]------------------------------------------------
#
			$message = $lang['User_deleted'] . '<br /><br />' . sprintf($lang['Click_return_useradmin'], '<a href="' . append_sid("admin_users.$phpEx") . '">', '</a>') . '<br /><br />' . sprintf($lang['Click_return_admin_index'], '<a href="' . append_sid("index.$phpEx?pane=right") . '">', '</a>');

			message_die(GENERAL_MESSAGE, $message);
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
			// special note : if you have other tables linked to users table than the standard ones,
			// please add them to includes/class_users.php, delete() method

			// get the user data
			$view_user = new user();
			$view_user->read($user_id);

			// delete users
			if ( !$view_user->delete() )
			{
				_error('User_delete_deny');
			}
			else
			{
				_error('User_deleted');
			}

			// return message
			$l_link = 'Click_return_useradmin';
			$u_link = $config->url('admin/admin_users', '', true);
			message_return($error_msg, $l_link, $u_link);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
				$message .= $lang['Admin_user_updated'];
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
				// if name changed, update some data
				if ( !empty($username_sql) )
				{
					$fields = array(
						'forum_last_username' => stripslashes($username),
					);
					$db->sql_statement($fields);

					// update forums last poster
					$sql = 'UPDATE ' . FORUMS_TABLE . '
								SET ' . $db->sql_update . '
								WHERE forum_last_poster = ' . intval($user_id);
					$db->sql_query($sql, false, __LINE__, __FILE__);

					// update last user
					if ( $user_id == $config->data['stat_last_user'] )
					{
						$config->set('stat_last_user', $user_id);
						$config->set('stat_last_username', stripslashes($username));
					}

					// recache moderators if any
					include_once($config->url('includes/class_forums'));
					$moderators = new moderators();
					$moderators->read(true);
				}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
admin/admin_words.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
$mode = ( in_array($mode, array('add', 'edit', 'save', 'delete')) ) ? $mode : '';
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
if ( _button('cancel') )
{
	$mode = '';
}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
			message_die(GENERAL_ERROR, "Could not insert data into words table", $lang['Error'], __LINE__, __FILE__, $sql);
		}

		$message .= "<br /><br />" . sprintf($lang['Click_return_wordadmin']
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
		$censored_words->read(true);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
			$message = $lang['Word_removed'] .
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
			$censored_words->read(true);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			"U_WORD_DELETE" => append_sid("admin_words.$phpEx?mode=delete&amp;id=$word_id"))
		);
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
		$template->set_switch('words.light', !($i % 2));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
admin/index.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	$setmodules = 1;
	while( $file = @readdir($dir) )
	{
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
		if ( in_array(str_replace('.' . $phpEx, '', $file), $denied_scripts) )
		{
			$file = '';
		}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	$sql = "SELECT u.user_id, u.username, u.user_session_time, u.user_session_page, s.session_logged_in, s.session_ip, s.session_start 
		FROM " . USERS_TABLE . " u, " . SESSIONS_TABLE . " s
		WHERE s.session_logged_in = " . TRUE . " 
			AND u.user_id = s.session_user_id 
			AND u.user_id <> " . ANONYMOUS . " 
			AND s.session_time >= " . ( time() - 300 ) . " 
		ORDER BY u.user_session_time DESC";
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
	$sql = str_replace('SELECT ', 'SELECT u.user_allow_viewonline, u.user_level, s.session_page, ', $sql);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	$sql = "SELECT forum_name, forum_id
		FROM " . FORUMS_TABLE;
	if($forums_result = $db->sql_query($sql))
	{
		while($forumsrow = $db->sql_fetchrow($forums_result))
		{
			$forum_data[$forumsrow['forum_id']] = $forumsrow['forum_name'];
		}
	}
	else
	{
		message_die(GENERAL_ERROR, "Couldn't obtain user/online forums information.", "", __LINE__, __FILE__, $sql);
	}
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
	// includes
	include($config->url('includes/class_forums'));
	include($config->url('includes/class_stats'));

	// read forums
	$forums = new forums();
	$forums->read();
	foreach ( $forums->data as $id => $data )
	{
		$forum_data[$id] = $user->lang($data['forum_name']);
	}

	// prepare stats
	$stats = new stats();
	$user_levels = $stats->get_user_levels();

	// get user auths
	$user->get_cache(POST_FORUM_URL);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
				if( $onlinerow_reg[$i]['user_allow_viewonline'] || $userdata['user_level'] == ADMIN )
				{
					$registered_users++;
					$hidden = FALSE;
				}
				else
				{
					$hidden_users++;
					$hidden = TRUE;
				}

				if( $onlinerow_reg[$i]['user_session_page'] < 1 )
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
				$row = $onlinerow_reg[$i];
				if ( $row['user_allow_viewonline'] )
				{
					$registered_users++;
				}
				else
				{
					$hidden_users++;
				}
				if ( $row['user_allow_viewonline'] || ($row['user_id'] == $user->data['user_id']) || ($user->data['user_level'] == ADMIN) || ($user->auth(POST_FORUM_URL, 'auth_mod', intval($row['session_page'])) && ($row['user_level'] != ADMIN)) )
				{
					$hidden = false;
					$style = isset($user_levels[ $row['user_level'] ]) ? $user_levels[ $row['user_level'] ]['style'] : $user_levels[USER]['style'];
					$username = sprintf(($row['user_allow_viewonline'] ? (empty($style) ? '%s' : '<span' . $style . '>%s</span>') : '<i' . $style . '>%s</i>'), $row['username']);
				}
				else
				{
					$hidden = true;
				}

				// display the page
				if ( ($row['session_page'] < 1) || !$user->auth(POST_FORUM_URL, 'auth_view', intval($row['session_page'])) )
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
					"U_WHOIS_IP" => "http://network-tools.com/default.asp?host=$reg_ip", 
					"U_USER_PROFILE" => append_sid("admin_users.$phpEx?mode=edit&amp;" . POST_USERS_URL . "=" . $onlinerow_reg[$i]['user_id']),
					"U_FORUM_LOCATION" => append_sid($location_url))
				);
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
				$template->set_switch('reg_user_row.light', $registered_users % 2);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
				"U_WHOIS_IP" => "http://network-tools.com/default.asp?host=$guest_ip", 
				"U_FORUM_LOCATION" => append_sid($location_url))
			);
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
			$template->set_switch('guest_user_row.light', $guest_users % 2);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	// Check for new version
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ FIND ]------------------------------------------------
#
	$version_info .= '<p>' . $lang['Mailing_list_subscribe_reminder'] . '</p>';
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
	// installed mods
	$mod_installed = array(
		'phpBB group' => array(
			'server' => 'www.phpbb.com',
			'root' => '/updatecheck/',
			'file' => '20x.txt',
			'page' => 'http://www.phpbb.com/downloads.php',
			'protocol' => 'phpBB',
			'infos' => 'Mailing_list_subscribe_reminder',
			'mods' => array(
				'version' => array('head' => '2', 'desc' => 'phpBB'),
			),
		),
		'Ptirhiik' => array(
			'server' => 'ptifo.clanmckeen.com',
			'root' => '/download/',
			'file' => 'versions.dta',
			'page' => 'http://ptifo.clanmckeen.com/download.php',
			'protocol' => 'native',
			'mods' => array(
				'mod_cat_hierarchy' => array('desc' => 'Lang_extend_cat_hierarchy'),
				'mod_topic_calendar_CH' => array('desc' => 'Lang_extend_calendar'),
				'mod_extended_tpl_CH' => array('desc' => 'Extended_template_CH'),
			),
		),
	);

	// we don't want to check at any time : do it only once a day
	define('VERSION_CHECK_DELAY', 86400);
	$now = time();
	$version_check_delay = intval($config->data['version_check_delay']);
	$check = _button('vchk') || empty($version_check_delay) || (($now - $version_check_delay) > VERSION_CHECK_DELAY);

	// try to open the files
	$mod_available = array();
	$version_info = '';
	foreach ( $mod_installed as $provider => $provided )
	{
		if ( $check )
		{
			$config->set('version_check_delay', $now, true);
			$mod_installed[$provider]['errno'] = 0;
			$mod_installed[$provider]['errstr'] = '';
			if ( $fsock = @fsockopen($provided['server'], 80, $mod_installed[$provider]['errno'], $mod_installed[$provider]['errstr'], 10) )
			{
				@fputs($fsock, "GET " . $provided['root'] . $provided['file'] . " HTTP/1.1\r\n");
				@fputs($fsock, "HOST: " . $provided['server'] . "\r\n");
				@fputs($fsock, "Connection: close\r\n\r\n");

				$get_info = false;
				$available = '';
				while ( !@feof($fsock) )
				{
					if ( $get_info )
					{
						$available .= @fread($fsock, 1024);
					}
					else
					{
						if ( @fgets($fsock, 1024) == "\r\n" )
						{
							$get_info = true;
						}
					}
				}
				@fclose($fsock);

				$available = empty($available) ? array() : explode("\n", $available);
				$count_available = count($available);
				switch ( $provided['protocol'] )
				{
					case 'native':
						for ( $i = 0; $i < $count_available; $i++ )
						{
							$str = trim(str_replace(array("\r", "\n"), array('', ''), $available[$i]));
							$line = empty($str) ? array() : explode(':', $str);
							$mod_name = trim($line[0]);
							$mod_version = trim($line[1]);
							if ( !empty($mod_name) && !empty($mod_version) && isset($mod_installed[$provider]['mods'][$mod_name]) )
							{
								$mod_installed[$provider]['mods'][$mod_name]['version'] = $mod_version;
							}
						}
						break;
					case 'phpBB':
						for ( $i = 0; $i < $count_available; $i++ )
						{
							$str = trim(str_replace("\r", '', $available[$i]));
							$available[$i] = (int) $str;
						}
						$mod_name = _first_key($mod_installed[$provider]['mods']);
						$mod_version = implode('.', array_splice($available, 0, 3));
						if ( !empty($mod_name) && !empty($mod_version) && isset($mod_installed[$provider]['mods'][$mod_name]) )
						{
							$mod_installed[$provider]['mods'][$mod_name]['version'] = $mod_version;
						}
						break;
				}
			}
		}

		// display actualized data
		$u_provider = empty($mod_installed[$provider]['page']) ? $provider : '<a href="' . $mod_installed[$provider]['page'] . '" target="_blank">' . $provider . '</a>';
		if ( $mod_installed[$provider]['errno'] )
		{
			if ( $mod_installed[$provider]['errstr'] )
			{
				$version_info .= '<p style="color:red">' . $u_provider . ': ' . sprintf($user->lang('Connect_socket_error'), $mod_installed[$provider]['errstr']) . '<br />';
			}
			else
			{
				$version_info .= '<p>' . $u_provider . ': ' . $user->lang('Socket_functions_disabled') . '<br />';
			}
		}
		else
		{
			$version_info .= '<p style="color:blue"><b><u>' . $u_provider . '</u></b><br />';
		}

		// dump the mods
		if ( !empty($mod_installed[$provider]['mods']) )
		{
			foreach ( $mod_installed[$provider]['mods'] as $mod_name => $mod_data )
			{
				if ( isset($config->data[$mod_name]) )
				{
					$current_version = $mod_installed[$provider]['mods'][$mod_name]['head'] . $config->data[$mod_name];
					if ( isset($mod_installed[$provider]['mods'][$mod_name]['version']) )
					{
						$color = '<span style="color:' . (isset($config->data[$mod_name]) ? ($mod_installed[$provider]['mods'][$mod_name]['version'] == $current_version ? 'green' : 'red') : 'brown') . '">%s</span>';
					}
					else
					{
						$color = '%s';
					}
					$version_info .= sprintf($color, sprintf($user->lang(isset($mod_installed[$provider]['mods'][$mod_name]['version']) ? 'version_checked' : 'version_not_checked'), $user->lang($mod_installed[$provider]['mods'][$mod_name]['desc']), isset($config->data[$mod_name]) ? $current_version : $user->lang('Unknown'), $mod_installed[$provider]['mods'][$mod_name]['version'])) . '<br />';
				}
			}
		}
		$version_info .= '</p>';
		if ( !empty($mod_installed[$provider]['infos']) )
		{
			$version_info .= '<p>' . $user->lang($mod_installed[$provider]['infos']) . '</p>';
		}
	}
	$version_info = '<a href="' . $config->url('admin/index', array('pane' => 'right', 'vchk' => true), true) . '" class="gen"><img src="' . $user->img('cmd_check') . '" border="0" class="absbottom" /></a><br /><br />' . $version_info;
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
admin/page_footer_admin.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
	'TRANSLATION_INFO' =>
);
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
if ( (_read('pane') != 'left') && defined('DEBUG') && defined('DEBUG_SQL_ADMIN') )
{
	// send run stat (page generation, sql time, requests dump...)
	include($config->url('includes/class_run_stats'));
	$stat_run = new stat_run_class(microtime());
	$stat_run->display();
}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
admin/page_header_admin.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	'T_SPAN_CLASS3' => $theme['span_class3'])
);
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
$template->assign_vars(array(
	'I_SPACER' => $user->img('spacer'),
	'I_LOGO_SMALL' => $user->img('logo_small'),
));

// set the in_admin switch
$template->set_switch('in_admin', defined('IN_ADMIN'));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
admin/pagestart.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
if ($HTTP_GET_VARS['sid'] != $userdata['session_id'])
{
	redirect("index.$phpEx?sid=" . $userdata['session_id']);
}
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
// check if .htaccess is available
if ( ($userdata['session_admin'] == true) || @file_exists('.htaccess') )
{
	$userdata['session_admin'] = true;
}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
includes/auth.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
function auth($type, $forum_id, $userdata, $f_access = '')
{
	global $db, $lang;

	switch( $type )
	{
		case AUTH_ALL:
			$a_sql =
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
// this one will be only called by hitting the ACP/Auths center/Definition/"Forums" auths type/Regen button
function get_forums_auths_def()
{
	// get current auths fields
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
			$auth_fields = array('auth_view', 'auth_read',
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add

	// add global annonce auth after announce
	$auth_fields = array_flip($auth_fields);
	$auth_fields['auth_global_announce'] = $auth_fields['auth_announce'];
	asort($auth_fields);
	$auth_fields = array_keys($auth_fields);

	return $auth_fields;
}

// this one is to keep compliancy with vanilia phpBB way to get auths values
function auth($type, $forum_id, $userdata, $f_access = '')
{
	global $db, $user, $forums, $config;

	// get auths def
	$auths_def = get_forums_auths_def();
	$auths_def[] = 'auth_mod';

	// prepare results
	$user_auth = array();

	// read forums if required
	if ( ($forum_id != AUTH_LIST_ALL) && empty($f_access) && empty($forums) )
	{
		include_once($config->url('includes/class_forums'));
		$forums = new forums();
		$forums->read();
	}

	// read forum auths if not done
	if ( empty($user->cache[POST_FORUM_URL]) )
	{
		$user->get_cache(POST_FORUM_URL);
	}

	// get the result
	if ( !empty($auths_def) )
	{
		$count_auths_def = count($auths_def);
		for ( $i = 0; $i < $count_auths_def; $i++ )
		{
			$auth_name = $auths_def[$i];
			if ( $forum_id != AUTH_LIST_ALL )
			{
				$user_auth[$auth_name] = $user->auth(POST_FORUM_URL, $auth_name, $forum_id);
			}
			else if ( !empty($f_access) )
			{
				$count_f_access = count($f_access);
				for ( $k = 0; $k < $count_f_access; $k++ )
				{
					$f_forum_id = $f_access[$k]['forum_id'];
					$user_auth[$f_forum_id][$auth_name] = $user->auth(POST_FORUM_URL, $auth_name, $f_forum_id);
				}
			}
			else if ( !empty($forums->keys) )
			{
				$count_forums = count($forums->keys);
				for ( $k = 0; $k < $count_forums; $k++ )
				{
					$f_forum_id = $forums->keys[$k];
					$user_auth[$f_forum_id][$auth_name] = $user->auth(POST_FORUM_URL, $auth_name, $f_forum_id);
				}
			}
		}
	}
	return $user_auth;
}
//-- delete
/*
#
#-----[ FIND ]------------------------------------------------
#
	else
	{
		$auth_user = $is_admin;
	}

	return $auth_user;
}
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
includes/bbcode.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
if ( !defined('IN_PHPBB') )
{
	die("Hacking attempt");
}
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
// Note : this has been copied from posting.php (or privmsg.php)
function display_bbcodes()
{
	global $template, $lang;

	$template->assign_vars(array(
		'L_BBCODE_B_HELP' => $lang['bbcode_b_help'], 
		'L_BBCODE_I_HELP' => $lang['bbcode_i_help'], 
		'L_BBCODE_U_HELP' => $lang['bbcode_u_help'], 
		'L_BBCODE_Q_HELP' => $lang['bbcode_q_help'], 
		'L_BBCODE_C_HELP' => $lang['bbcode_c_help'], 
		'L_BBCODE_L_HELP' => $lang['bbcode_l_help'], 
		'L_BBCODE_O_HELP' => $lang['bbcode_o_help'], 
		'L_BBCODE_P_HELP' => $lang['bbcode_p_help'], 
		'L_BBCODE_W_HELP' => $lang['bbcode_w_help'], 
		'L_BBCODE_A_HELP' => $lang['bbcode_a_help'], 
		'L_BBCODE_S_HELP' => $lang['bbcode_s_help'], 
		'L_BBCODE_F_HELP' => $lang['bbcode_f_help'], 
		'L_EMPTY_MESSAGE' => $lang['Empty_message'],

		'L_FONT_COLOR' => $lang['Font_color'], 
		'L_COLOR_DEFAULT' => $lang['color_default'], 
		'L_COLOR_DARK_RED' => $lang['color_dark_red'], 
		'L_COLOR_RED' => $lang['color_red'], 
		'L_COLOR_ORANGE' => $lang['color_orange'], 
		'L_COLOR_BROWN' => $lang['color_brown'], 
		'L_COLOR_YELLOW' => $lang['color_yellow'], 
		'L_COLOR_GREEN' => $lang['color_green'], 
		'L_COLOR_OLIVE' => $lang['color_olive'], 
		'L_COLOR_CYAN' => $lang['color_cyan'], 
		'L_COLOR_BLUE' => $lang['color_blue'], 
		'L_COLOR_DARK_BLUE' => $lang['color_dark_blue'], 
		'L_COLOR_INDIGO' => $lang['color_indigo'], 
		'L_COLOR_VIOLET' => $lang['color_violet'], 
		'L_COLOR_WHITE' => $lang['color_white'], 
		'L_COLOR_BLACK' => $lang['color_black'], 

		'L_FONT_SIZE' => $lang['Font_size'], 
		'L_FONT_TINY' => $lang['font_tiny'], 
		'L_FONT_SMALL' => $lang['font_small'], 
		'L_FONT_NORMAL' => $lang['font_normal'], 
		'L_FONT_LARGE' => $lang['font_large'], 
		'L_FONT_HUGE' => $lang['font_huge'], 

		'L_BBCODE_CLOSE_TAGS' => $lang['Close_Tags'], 
		'L_STYLES_TIP' => $lang['Styles_tip'],
	));
}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		global $db, $board_config;
		$orig = $repl = array();

		$sql = 'SELECT * FROM ' . SMILIES_TABLE;
		if( !$result = $db->sql_query($sql) )
		{
			message_die(GENERAL_ERROR, "Couldn't obtain smilies data", "", __LINE__, __FILE__, $sql);
		}
		$smilies = $db->sql_fetchrowset($result);

		if (count($smilies))
		{
			usort($smilies, 'smiley_sort');
		}

		for ($i = 0; $i < count($smilies); $i++)
		{
			$orig[] = "/(?<=.\W|\W.|^\W)" . preg_quote($smilies[$i]['code'], "/") . "(?=.\W|\W.|\W$)/";
			$repl[] = '<img src="'. $board_config['smilies_path'] . '/' . $smilies[$i]['smile_url'] . '" alt="' . $smilies[$i]['emoticon'] . '" border="0" />';
		}
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
		global $smilies, $config;

		$orig = $repl = array();

		// read smilies
		$data = $smilies->read();
		if (count($data))
		{
			usort($data, 'smiley_sort');
		}

		$count_data = count($data);
		for ($i = 0; $i < $count_data; $i++)
		{
			$orig[] = "/(?<=.\W|\W.|^\W)" . preg_quote($data[$i]['code'], "/") . "(?=.\W|\W.|\W$)/";
			$repl[] = '<img src="'. $config->data['smilies_path'] . '/' . $data[$i]['smile_url'] . '" alt="' . $data[$i]['emoticon'] . '" border="0" />';
		}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
includes/db.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
$db = new sql_db($dbhost, $dbuser, $dbpasswd, $dbname, false);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
include_once($phpbb_root_path . 'includes/class_db.' . $phpEx);
$db = new db_class($dbhost, $dbuser, $dbpasswd, $dbname, false);
unset($dbhost);
unset($dbuser);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
includes/functions.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : Fix message_die for multiple errors ---------------------------------
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	global $db, $board_config, $dss_seeded;
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
	global $db, $board_config;
	static $dss_seeded;
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	return substr($val, 16);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
	// fix a typo
	return substr($val, 4, 16);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
//	$is_auth = auth(AUTH_VIEW, AUTH_LIST_ALL, $userdata);

	$sql = "SELECT c.cat_id, c.cat_title, c.cat_order
		FROM " . CATEGORIES_TABLE . " c, " . FORUMS_TABLE . " f
		WHERE f.cat_id = c.cat_id
		GROUP BY c.cat_id, c.cat_title, c.cat_order
		ORDER BY c.cat_order";
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ FIND ]------------------------------------------------
#
	// Let the jumpbox work again in sites having additional session id checks.
//	if ( !empty($SID) )
//	{
		$boxstring .= '<input type="hidden" name="sid" value="' . $userdata['session_id'] . '" />';
//	}
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
	global $config, $forums, $user;

	if ( eregi('^viewforum', $action) )
	{
		$action = 'index';
	}
	else if ( eregi('^modcp', $action) )
	{
		$action = 'modcp';
	}
	$action = $config->url($action, '', true);
	if ( empty($forums) )
	{
		include_once($config->url('includes/class_forums'));
		$forums = new forums();
		$forums->read();
	}
	$boxstring = '<select name="' . POST_FORUM_URL . '" onchange="if(this.options[this.selectedIndex].value >= 0){ forms[\'jumpbox\'].submit() }"><option value="-2" selected="selected">' . $lang['Select_forum'] . '</option><option value="-1">-------------------</option>';
	$boxstring .= $forums->get_jumpbox();
	$boxstring .= '</select><input type="hidden" name="sid" value="' . $userdata['session_id'] . '" />';
	$template->assign_vars(array(
		'I_GO' => $user->img('cmd_mini_submit'),
	));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	if ( !$board_config['override_user_style'] )
	{
		if ( $userdata['user_id'] != ANONYMOUS && $userdata['user_style'] > 0 )
		{
			if ( $theme = setup_style($userdata['user_style']) )
			{
				return;
			}
		}
	}

	$theme = setup_style($board_config['default_style']);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
	// init user object
	global $user;

	if ( !empty($user) || is_object($user) )
	{
		$user->set();
	}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	$sql = "SELECT *
		FROM " . THEMES_TABLE . "
		WHERE themes_id = $style";
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ FIND ]------------------------------------------------
#
	$template_path = 'templates/' ;
	$template_name = $row['template_name'] ;

	$template = new Template($phpbb_root_path . $template_path . $template_name);
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
	global $config, $user, $themes;

	$themes_exists = true;
	if ( empty($themes) )
	{
		$themes = new themes();
		$themes->read();
		$themes_exists = false;
	}
	if ( !$row = $themes->data[$style] )
	{
		// reset the users style
		if ( $style != intval($config->data['default_style']) )
		{
			$sql = 'UPDATE ' . USERS_TABLE . '
				SET user_style = ' . intval($config->data['default_style']) . '
				WHERE user_style = ' . intval($style);
			$db->sql_query($sql, false, __LINE__, __FILE__);
		}
		$style = intval($config->data['default_style']);
	}
	if ( !$row = $themes->data[$style] )
	{
		message_die(CRITICAL_ERROR, 'Could not get theme data for themes_id [' . intval($style) . ']');
	}

	// force the main css when in admin
	$head_stylesheet = $row['template_name'] . '.css';
	if ( defined('IN_ADMIN') && ($row['head_stylesheet'] != $head_stylesheet) )
	{
		foreach ( $themes->data as $style_id => $style_data )
		{
			if ( $style_data['head_stylesheet'] == $head_stylesheet )
			{
				$row = $style_data;
				break;
			}
		}
	}

	// clean up  if themes didn't exists
	if ( !$themes_exists )
	{
		unset($themes);
	}

	// get main parameters
	$template_path = 'templates/';
	$template_name = $row['template_name'];

	// intantiate the template
	$template = new template_class($config->root . $template_path . $template_name, $row['custom_tpls']);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		while( list($key, $value) = @each($images) )
		{
			if ( !is_array($value) )
			{
				$images[$key] = str_replace('{LANG}', 'lang_' . $img_lang, $value);
			}
		}
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
		// read additional images
		$images_pack = empty($row['images_pack']) || ($row['images_pack'] == $template_name . '.cfg') ? '' : $config->root . $template_path . $template_name . '/' . $row['images_pack'];
		if ( !empty($images_pack) )
		{
			$sav_images = $images;
			$images = array();
			$current_template_path = substr($images_pack, 0, strrpos($images_pack, '/'));
			@include($images_pack);
			$img_lang = ( file_exists(@phpbb_realpath($current_template_path . '/images/lang_' . $config->data['default_lang'])) ) ? $config->data['default_lang'] : 'english';
			if ( empty($images) )
			{
				$images = $sav_images;
			}
			else
			{
				foreach ( $images as $key => $value )
				{
					if ( !is_array($value) )
					{
						$images[$key] = str_replace('{LANG}', 'lang_' . $img_lang, $value);
					}
				}
				$images += $sav_images;
			}
		}

		// .ini file
		@include($phpbb_root_path . $template_path . $template_name . '/' . $template_name . '.ini');
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	global $board_config, $lang;
	static $translate;

	if ( empty($translate) && $board_config['default_lang'] != 'english' )
	{
		@reset($lang['datetime']);
		while ( list($match, $replace) = @each($lang['datetime']) )
		{
			$translate[$match] = $replace;
		}
	}

	return ( !empty($translate) ) ? strtr(@gmdate($format, $gmepoch + (3600 * $tz)), $translate) : @gmdate($format, $gmepoch + (3600 * $tz));
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
	global $user;
	return $user->date($gmepoch, $format);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	$sql = "SELECT word, replacement
		FROM  " . WORDS_TABLE;
	if( !($result = $db->sql_query($sql)) )
	{
		message_die(GENERAL_ERROR, 'Could not get censored words from database', '', __LINE__, __FILE__, $sql);
	}

	if ( $row = $db->sql_fetchrow($result) )
	{
		do 
		{
			$orig_word[] = '#\b(' . str_replace('\*', '\w*?', preg_quote($row['word'], '#')) . ')\b#i';
			$replacement_word[] = $row['replacement'];
		}
		while ( $row = $db->sql_fetchrow($result) );
	}
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
	global $censored_words;

	// read if not done
	$data = $censored_words->read();
	$orig_word = array_keys($data);
	$replacement_word = array_values($data);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
function message_die(
{
	global $db
	global $userdata
	global $starttime;
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
	global $config, $user, $censored_words, $icons, $navigation, $themes, $smilies;
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	if(defined('HAS_DIED'))
	{
		die("message_die() was called multiple times. This isn't supposed to happen. Was message_die() used in page_tail.php?");
	}

	define('HAS_DIED', 1);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : Fix message_die for multiple errors ---------------------------------
// note : this one is Markus Petrux's "Fix message_die for multiple errors" mod
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
	static $msg_history;
	if( !isset($msg_history) )
	{
		$msg_history = array();
	}
	$msg_history[] = array(
		'msg_code' => $msg_code,
		'msg_text' => $msg_text,
		'msg_title' => $msg_title,
		'err_line' => $err_line,
		'err_file' => $err_file,
		'sql' => $sql,
	);

	// already died
	if ( defined('HAS_DIED') )
	{
		//
		// This message is printed at the end of the report.
		// Of course, you can change it to suit your own needs. ;-)
		//
		$custom_error_message = 'Please, contact the %swebmaster%s. Thank you.';
		if ( !empty($config) && !empty($config->data['board_email']) )
		{
			$custom_error_message = sprintf($custom_error_message, '<a href="mailto:' . $config->data['board_email'] . '">', '</a>');
		}
		else
		{
			$custom_error_message = sprintf($custom_error_message, '', '');
		}

		echo "<html>\n<body>\n<b>Critical Error!</b><br />\nmessage_die() was called multiple times.<br />&nbsp;<hr />";
		for( $i = 0; $i < count($msg_history); $i++ )
		{
			echo '<b>Error #' . ($i+1) . "</b>\n<br />\n";
			if( !empty($msg_history[$i]['msg_title']) )
			{
				echo '<b>' . $msg_history[$i]['msg_title'] . "</b>\n<br />\n";
			}
			echo $msg_history[$i]['msg_text'] . "\n<br /><br />\n";
			if( !empty($msg_history[$i]['err_line']) )
			{
				echo '<b>Line :</b> ' . $msg_history[$i]['err_line'] . '<br /><b>File :</b> ' . $msg_history[$i]['err_file'] . "</b>\n<br />\n";
			}
			if( !empty($msg_history[$i]['sql']) )
			{
				echo '<b>SQL :</b> ' . $msg_history[$i]['sql'] . "\n<br />\n";
			}
			echo "&nbsp;<hr />\n<br />";
		}
		echo "&nbsp;<br /><hr />\n" . $custom_error_message . '<hr /><br clear="all">';
		die("</body>\n</html>");
	}

	// let's notice an error occured
	define('HAS_DIED', true);
//-- fin mod : Fix message_die for multiple errors -----------------------------
#
#-----[ FIND ]------------------------------------------------
#
		else
		{
			$template->set_filenames(array(
				'message_body' => 'admin/admin_message_body.tpl')
			);
		}
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
		if ( defined('DEBUG_MESSAGES') && !defined('IN_MESSAGE_RETURN') )
		{
			if ( empty($lang) )
			{
				$lang = array(
					'dbg_backtrace' => 'Back trace',
					'dbg_requester' => 'Requester',
				);
			}
			$msg_text .= '<br /><br /></span></td></tr><tr><td class="cat" align="center"><span class="cattitle">' . $lang['dbg_backtrace'] . '</span></td></tr><tr><td class="row1"><span class="gen">';
			if ( function_exists('debug_backtrace') )
			{
				$dbg = debug_backtrace();
				$count_dbg = count($dbg);
				for ( $i = 0; $i < $count_dbg; $i++ )
				{
					$msg_text .= '<br /><b>' . $lang['dbg_requester'] . ':</b> ' . basename($dbg[$i]['file']) . '[ ' . $dbg[$i]['line'] . ' ].' . $dbg[$i]['function'] . '(' . (empty($dbg[$i]['args']) ? '' : stripslashes(_format($dbg[$i]['args']))) . ')';
				}
			}
		}
		if ( !defined('IN_ADMIN') && !empty($config->data) )
		{
			global $navigation;

			if ( !isset($navigation) || !is_object($navigation) )
			{
				$navigation = new navigation();
			}
			if ( !$navigation->displayed )
			{
				$navigation->display();
			}
		}
		else
		{
			$template->assign_vars(array(
				'NAVIGATION_BOX' => '<a href="' . append_sid('index.' . $phpEx) . '" class="nav">' . sprintf($lang['Forum_Index'], $board_config['sitename']) . '</a>',
			));
		}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	$server_protocol = ($board_config['cookie_secure']) ? 'https://' : 'http://';
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
	if ( !eregi('^(ht|f)tp(s?)\:\/\/', $url) )
	{
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	$url = preg_replace('#^\/?(.*?)\/?$#', '/\1', trim($url));
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
		$url = preg_replace('#^\/?(.*?)\/?$#', '/\1', trim(preg_replace('#^(\.\/)(.*)$#', '\2', $url)));
	}
	else
	{
		$server_protocol = $server_name = $server_port = $script_name = '';
	}
	$url_ampersand = $url;
	$url = str_replace('&amp;', '&', $url);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		echo '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"><html><head><meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><meta http-equiv="refresh" content="0; url=' . $server_protocol . $server_name . $server_port . $script_name . $url . '"><title>Redirect</title></head><body><div align="center">If your browser does not support meta redirection please click <a href="' . $server_protocol . $server_name . $server_port . $script_name . $url . '">HERE</a> to be redirected</div></body></html>';
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
		echo '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"><html><head><meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><meta http-equiv="refresh" content="0; url=' . $server_protocol . $server_name . $server_port . $script_name . $url . '"><title>Redirect</title></head><body><div align="center">If your browser does not support meta redirection please click <a href="' . $server_protocol . $server_name . $server_port . $script_name . $url_ampersand . '">HERE</a> to be redirected</div></body></html>';
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
includes/functions_admin.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	global $db, $userdata;

	$is_auth_ary = auth(AUTH_READ, AUTH_LIST_ALL, $userdata);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ FIND ]------------------------------------------------
#
	$forum_list = ( $forum_list == '' ) ? '<option value="-1">-- ! No Forums ! --</option>' : '<select name="' . $box_name . '">' . $forum_list . '</select>';
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
	global $config, $forums, $user;

	$front_pic = $forums->get_front_pic();
	if ( !empty($front_pic) )
	{
		$forum_list = '';
		foreach ( $front_pic as $cur_id => $front )
		{
			$selected = !empty($select_forum) && ($select_forum == $cur_id) ? ' selected="selected"' : '';
			$forum_list .= '<option value="' . (($cur_id >= 0) ? $cur_id : -1) . '"' . $selected . '>';
			$count_front = strlen($front);
			for ( $i = 0; $i < $count_front; $i++ )
			{
				$forum_list .= $user->lang('tree_pic_' . $front[$i]);
			}
			if ( $cur_id >= 0 )
			{
				$forum_list .= $user->lang($forums->data[$cur_id]['forum_name']);
			}
			$forum_list .= '</option>';
		}
	}
	else
	{
		$forum_list = '<option value="-1">' . $user->lang('None') . '</option>';
	}
	$forum_list = '<select name="' . $box_name . '">' . $forum_list . '</select>';
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
function sync($type, $id = false)
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
function sync($type, $id = false, $differ=false)
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			$sql = "SELECT MAX(post_id) AS last_post, COUNT(post_id) AS total 
				FROM " . POSTS_TABLE . "  
				WHERE forum_id = $id";
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ FIND ]------------------------------------------------
#
			$sql = "UPDATE " . FORUMS_TABLE . "
				SET forum_last_post_id = $last_post, forum_posts = $total_posts, forum_topics = $total_topics
				WHERE forum_id = $id";
			if ( !$db->sql_query($sql) )
			{
				message_die(GENERAL_ERROR, 'Could not update forum', '', __LINE__, __FILE__, $sql);
			}
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
			if ( empty($id) )
			{
				global $config;

				// count topics
				$sql = 'SELECT COUNT(topic_id) AS total_topics
							FROM ' . TOPICS_TABLE;
				$result = $db->sql_query($sql, false, __LINE__, __FILE__);
				$row = $db->sql_fetchrow($result);
				$total_topics = intval($row['total_topics']);

				// count posts
				$sql = 'SELECT COUNT(post_id) AS total_posts
							FROM ' . POSTS_TABLE;
				$result = $db->sql_query($sql, false, __LINE__, __FILE__);
				$row = $db->sql_fetchrow($result);
				$total_posts = intval($row['total_posts']);

				$config->set('stat_total_topics', $total_topics);
				$config->set('stat_total_posts', $total_posts);
			}
			else
			{
				// count topics
				$sql = 'SELECT COUNT(topic_id) AS total_topics
							FROM ' . TOPICS_TABLE . '
							WHERE forum_id = ' . $id;
				$result = $db->sql_query($sql, false, __LINE__, __FILE__);
				$row = $db->sql_fetchrow($result);
				$total_topics = intval($row['total_topics']);

				// count posts
				$sql = 'SELECT COUNT(post_id) AS total_posts
							FROM ' . POSTS_TABLE . '
							WHERE forum_id = ' . $id;
				$result = $db->sql_query($sql, false, __LINE__, __FILE__);
				$row = $db->sql_fetchrow($result);
				$total_posts = intval($row['total_posts']);

				// get last post
				$sql = 'SELECT t.topic_last_post_id, t.topic_title, t.topic_last_poster, t.topic_last_username, t.topic_last_time, u.username
							FROM ' . TOPICS_TABLE . ' t
								LEFT JOIN ' . USERS_TABLE . ' u ON u.user_id = t.topic_last_poster
							WHERE forum_id = ' . $id . '
								AND topic_moved_id = 0
							ORDER BY topic_last_post_id DESC
							LIMIT 1';
				$result = $db->sql_query($sql, false, __LINE__, __FILE__);
				$row = $db->sql_fetchrow($result);
				$fields = array(
					'forum_topics' => $total_topics,
					'forum_posts' => $total_posts,
					'forum_last_post_id' => intval($row['topic_last_post_id']),
					'forum_last_title' => $row['topic_title'],
					'forum_last_poster' => intval($row['topic_last_poster']),
					'forum_last_username' => (($row['topic_last_poster'] != ANONYMOUS) && !empty($row['username'])) ? $row['username'] : $row['topic_last_username'],
					'forum_last_time' => intval($row['topic_last_time']),
				);
				$db->sql_statement($fields);
				$sql = 'UPDATE ' . FORUMS_TABLE . '
							SET ' . $db->sql_update . '
							WHERE forum_id = ' . $id;
				$db->sql_query($sql, false, __LINE__, __FILE__);
				if ( !$differ )
				{
					sync('forum');
				}
			}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			$sql = "SELECT MAX(post_id) AS last_post, MIN(post_id) AS first_post, COUNT(post_id) AS total_posts
				FROM " . POSTS_TABLE . "
				WHERE topic_id = $id";
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ FIND ]------------------------------------------------
#
								message_die(GENERAL_ERROR, 'Could not remove topic', '', __LINE__, __FILE__, $sql);
							}
						}
					}

					$db->sql_freeresult($result);
				}
			}
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
			// prepare return : we don't touch first post data until a first post exists because of shadow topics
			$fields = array(
				'topic_replies' => 0,
				'topic_first_post_id' => 0,
				'topic_last_post_id' => 0,
				'topic_last_poster' => 0,
				'topic_last_username' => '',
				'topic_last_time' => 0,
			);
			// read topic counts
			$sql = 'SELECT MAX(post_id) AS topic_last_post_id, MIN(post_id) AS topic_first_post_id, COUNT(post_id) AS topic_replies
						FROM ' . POSTS_TABLE . '
						WHERE topic_id = ' . intval($id);
			$result = $db->sql_query($sql, false, __LINE__, __FILE__);
			if ( $row = $db->sql_fetchrow($result) )
			{
				$fields = array_merge($fields, $row);
				if ( !empty($fields['topic_replies']) )
				{
					$fields['topic_replies']--;
				}
				else
				{
					// remove shadow topics
					$sql = 'DELETE FROM ' . TOPICS_TABLE . '
								WHERE topic_id = ' . intval($id) . '
									AND topic_moved_id <> 0';
					$db->sql_query($sql, false, __LINE__, __FILE__);
					return;
				}
			}

			// read topic first & last post
			if ( !empty($fields['topic_last_post_id']) || !empty($fields['topic_first_post_id']) )
			{
				$sql = 'SELECT post_id, poster_id, post_username, post_time
							FROM ' . POSTS_TABLE . '
							WHERE topic_id = ' . intval($id) . '
								AND post_id IN(' . intval($fields['topic_first_post_id']) . ', ' . intval($fields['topic_last_post_id']) . ')';
				$result = $db->sql_query($sql, false, __LINE__, __FILE__);
				while ( $row = $db->sql_fetchrow($result) )
				{
					if ( $row['post_id'] == intval($fields['topic_last_post_id']) )
					{
						$fields = array_merge($fields, array(
							'topic_last_poster' => $row['poster_id'],
							'topic_last_username' => $row['post_username'],
							'topic_last_time' => $row['post_time'],
						));
					}
					if ( $row['post_id'] == intval($fields['topic_first_post_id']) )
					{
						$fields = array_merge($fields, array(
							'topic_poster' => $row['poster_id'],
							'topic_first_username' => $row['post_username'],
							'topic_time' => $row['post_time'],
						));
					}
				}
			}
			$db->sql_statement($fields);
			$sql = 'UPDATE ' . TOPICS_TABLE . '
						SET ' . $db->sql_update . '
						WHERE topic_id = ' . intval($id);
			$db->sql_query($sql, false, __LINE__, __FILE__);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
includes/functions_post.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		$message = addslashes($message);
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
		$message = str_replace('&quot;', '\&quot;', $message);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
function submit_post(
{
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
function submit_post($mode, &$post_data, &$message, &$meta, &$forum_id, &$topic_id, &$post_id, &$poll_id, &$input_data)
{
	$awaited_input_data = array(
		'topic_type' => 0,
		'bbcode_on' => 0,
		'html_on' => 0,
		'smilies_on' => 0,
		'attach_sig' => 0,
		'bbcode_uid' => '',
		'post_username' => '',
		'post_subject' => '',
		'post_message' => '',
		'poll_title' => '',
		'poll_options' => array(),
		'poll_length' => 0,
		'post_icon' => 0,
		'topic_duration' => 0,
		'calendar_time' => 0,
		'calendar_duration' => 0,
		'sub_title' => '',
		'topic_sub_type' => 0,
	);
	foreach ( $awaited_input_data as $var => $dft )
	{
		$$var = isset($input_data[$var]) ? $input_data[$var] : $dft;
	}

	// reclaim some memory
	$input_data = array();
	unset($awaited_input_data);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	if ($mode == 'editpost')
	{
		remove_search_post($post_id);
	}
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
	global $config;

	$topic_fields = array();
	if ( in_array($mode, array('newtopic', 'reply', 'editpost')) )
	{
		if ( $post_data['first_post'] || ($mode == 'newtopic') )
		{
			$topic_fields += array(
				'topic_sub_type' => $topic_sub_type,
				'topic_icon' => $post_icon,
				'topic_duration' => $topic_duration,
				'topic_first_username' => $post_username,
				'topic_sub_title' => $sub_title,
			);
			if ( $config->data['mod_topic_calendar_CH'] )
			{
				$topic_fields += array(
					'topic_calendar_time' => $calendar_time,
					'topic_calendar_duration' => $calendar_duration,
				);
			}
		}
		if ( $post_data['last_post'] || ($mode == 'newtopic') || ($mode == 'reply') )
		{
			$topic_fields += array(
				'topic_last_username' => $post_username,
			);
			if ( $mode != 'editpost' )
			{
				$topic_fields += array(
					'topic_last_poster' => $userdata['user_id'],
					'topic_last_time' => $current_time,
				);
			}
		}
	}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
		$sql  = ($mode != "editpost") ? "INSERT INTO " . TOPICS_TABLE . " (
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
		$db->sql_statement($topic_fields);
//-- here we added
//	, " . $db->sql_fields . "
//	, " . $db->sql_values . "
//	, " . $db->sql_update . "
//-- modify
#
#----------[ IN-LINE FIND ]-----------------------------------
#
(topic_title
#
#----------[ IN-LINE AFTER, ADD ]-----------------------------
#
, " . $db->sql_fields . "
#
#----------[ IN-LINE FIND ]-----------------------------------
#
VALUES ('$post_subject'
#
#----------[ IN-LINE AFTER, ADD ]-----------------------------
#
, " . $db->sql_values . "
#
#----------[ IN-LINE FIND ]-----------------------------------
#
SET topic_title = '$post_subject'
#
#----------[ IN-LINE AFTER, ADD ]-----------------------------
#
, " . $db->sql_update . "
#
#-----[ AFTER, ADD ]------------------------------------------
#
# on a new line
#
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		if ($mode == 'newtopic')
		{
			$topic_id = $db->sql_nextid();
		}
	}
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
	// update last post informations when not equal to first post
	else if ( ($mode == 'reply') || (($mode == 'editpost') && $post_data['last_post']) )
	{
		$db->sql_statement($topic_fields);
		$sql = 'UPDATE ' . TOPICS_TABLE . '
					SET ' . $db->sql_update . '
					WHERE topic_id = ' . $topic_id;
		$db->sql_query($sql, false, __LINE__, __FILE__);
	}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
	$sql = ($mode != "editpost") ? "INSERT INTO " . POSTS_TABLE . " (
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
	$post_fields = array(
		'post_icon' => $post_icon,
	);
	$db->sql_statement($post_fields);
//-- here we added
//	, " . $db->sql_fields . "
//	, " . $db->sql_values . "
//	, " . $db->sql_update . "
//-- modify
#
#----------[ IN-LINE FIND ]-----------------------------------
#
(topic_id
#
#----------[ IN-LINE AFTER, ADD ]-----------------------------
#
, " . $db->sql_fields . "
#
#----------[ IN-LINE FIND ]-----------------------------------
#
VALUES ($topic_id
#
#----------[ IN-LINE AFTER, ADD ]-----------------------------
#
, " . $db->sql_values . "
#
#----------[ IN-LINE FIND ]-----------------------------------
#
SET post_username = '$post_username'
#
#----------[ IN-LINE AFTER, ADD ]-----------------------------
#
, " . $db->sql_update . "
#
#-----[ AFTER, ADD ]------------------------------------------
#
# on a new line
#
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
	$sql = ($mode != 'editpost') ? "INSERT INTO " . POSTS_TEXT_TABLE . " (
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
	$post_text_fields = array(
		'post_sub_title' => $sub_title,
	);
	$db->sql_statement($post_text_fields);
//-- here we added
//	, " . $db->sql_fields . "
//	, " . $db->sql_values . "
//	, " . $db->sql_update . "
//-- modify
#
#----------[ IN-LINE FIND ]-----------------------------------
#
(post_id
#
#----------[ IN-LINE AFTER, ADD ]-----------------------------
#
, " . $db->sql_fields . "
#
#----------[ IN-LINE FIND ]-----------------------------------
#
VALUES ($post_id
#
#----------[ IN-LINE AFTER, ADD ]-----------------------------
#
, " . $db->sql_values . "
#
#----------[ IN-LINE FIND ]-----------------------------------
#
SET post_text = '$post_message'
#
#----------[ IN-LINE AFTER, ADD ]-----------------------------
#
, " . $db->sql_update . "
#
#-----[ AFTER, ADD ]------------------------------------------
#
# on a new line
#
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
	add_search_words('single', $post_id
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
// here we added:
//	 . ' ' . $sub_title
//-- modified
#
#----------[ IN-LINE FIND ]-----------------------------------
#
stripslashes($post_subject)
#
#----------[ IN-LINE AFTER, ADD ]-----------------------------
#
 . ' ' . $sub_title
#
#-----[ AFTER, ADD ]------------------------------------------
#
# on a new line
#
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		if ($delete_option_sql != '')
		{
			$sql = "DELETE FROM " . VOTE_RESULTS_TABLE . " 
				WHERE vote_option_id IN ($delete_option_sql) 
					AND vote_id = $poll_id";
			if (!$db->sql_query($sql))
			{
				message_die(GENERAL_ERROR, 'Error deleting pruned poll options', '', __LINE__, __FILE__, $sql);
			}
		}
	}
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
	// sync forum
	if ( ($mode == 'editpost') && $post_data['first_post'] )
	{
		global $config;
		include($config->url('includes/functions_admin'));
		sync('forum', $forum_id);
	}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	$message = $lang['Stored'] . '<br /><br />' . sprintf($lang['Click_view_message'], '<a href="' . append_sid("viewtopic.$phpEx?" . POST_POST_URL . "=" . $post_id) . '#' . $post_id . '">', '</a>') . '<br /><br />' . sprintf($lang['Click_return_forum'], '<a href="' . append_sid("viewforum.$phpEx?" . POST_FORUM_URL . "=$forum_id") . '">', '</a>');
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
	$message = $lang['Stored'] . '<br /><br />' . sprintf($lang['Click_view_message'], '<a href="' . $config->url('viewtopic', array(POST_POST_URL => $post_id), true, $post_id) . '">', '</a>') . '<br /><br />' . sprintf($lang['Click_return_forum'], '<a href="' . $config->url('index', array(POST_FORUM_URL => $forum_id), true) . '">', '</a>');
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
				$sql = "SELECT MAX(post_id) AS last_post_id
					FROM " . POSTS_TABLE . " 
					WHERE topic_id = $topic_id";
				if (!($result = $db->sql_query($sql)))
				{
					message_die(GENERAL_ERROR, 'Error in deleting post', '', __LINE__, __FILE__, $sql);
				}

				if ($row = $db->sql_fetchrow($result))
				{
					$topic_update_sql .= ', topic_last_post_id = ' . $row['last_post_id'];
				}
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
				// get new last post data
				$sql = 'SELECT post_id, poster_id, post_username, post_time
							FROM ' . POSTS_TABLE . '
							WHERE topic_id = ' . $topic_id . '
							ORDER BY post_id DESC
							LIMIT 1';
				$result = $db->sql_query($sql, false, __LINE__, __FILE__);
				$row = $db->sql_fetchrow($result);
				$fields = array(
					'topic_last_post_id' => intval($row['post_id']),
					'topic_last_poster' => intval($row['poster_id']),
					'topic_last_username' => $row['post_username'],
					'topic_last_time' => intval($row['post_time']),
				);
				$db->sql_statement($fields);
				$topic_update_sql .= ', ' . $db->sql_update;
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
				$sql = "SELECT MAX(post_id) AS last_post_id
					FROM " . POSTS_TABLE . " 
					WHERE forum_id = $forum_id"; 
				if (!($result = $db->sql_query($sql)))
				{
					message_die(GENERAL_ERROR, 'Error in deleting post', '', __LINE__, __FILE__, $sql);
				}

				if ($row = $db->sql_fetchrow($result))
				{
					$forum_update_sql .= ($row['last_post_id']) ? ', forum_last_post_id = ' . $row['last_post_id'] : ', forum_last_post_id = 0';
				}
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
		$forum_update_sql .= ", forum_last_post_id = $post_id" . (
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
// here we deleted
//	", forum_last_post_id = $post_id" . ([../..])
//-- modify
#
#----------[ IN-LINE FIND ]-----------------------------------
#
", forum_last_post_id = $post_id" . ((
#
#----------[ IN-LINE REPLACE WITH ]---------------------------
#
(
#
#----------[ IN-LINE FIND ]-----------------------------------
#
"");
#
#----------[ IN-LINE REPLACE WITH ]---------------------------
#
"";
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	$sql = "UPDATE " . FORUMS_TABLE . " SET 
		$forum_update_sql 
		WHERE forum_id = $forum_id";
	if (!$db->sql_query($sql))
	{
		message_die(GENERAL_ERROR, 'Error in posting', '', __LINE__, __FILE__, $sql);
	}
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		if (!$db->sql_query($sql, END_TRANSACTION))
		{
			message_die(GENERAL_ERROR, 'Error in posting', '', __LINE__, __FILE__, $sql);
		}
	}
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
	global $config;

	// resync forum
	if ($mode != 'poll_delete')
	{
		// get last post data
		$sql = 'SELECT t.topic_last_post_id, t.topic_title, t.topic_last_poster, t.topic_last_username, t.topic_last_time, u.username
					FROM ' . TOPICS_TABLE . ' t
						LEFT JOIN ' . USERS_TABLE . ' u ON u.user_id = t.topic_last_poster
					WHERE forum_id = ' . $forum_id . '
						AND topic_moved_id = 0
					ORDER BY topic_last_post_id DESC
					LIMIT 1';
		$result = $db->sql_query($sql, false, __LINE__, __FILE__);
		$row = $db->sql_fetchrow($result);
		$fields = array(
			'forum_last_post_id' => intval($row['topic_last_post_id']),
			'forum_last_title' => $row['topic_title'],
			'forum_last_poster' => intval($row['topic_last_poster']),
			'forum_last_username' => (($row['topic_last_poster'] != ANONYMOUS) && !empty($row['username'])) ? $row['username'] : $row['topic_last_username'],
			'forum_last_time' => intval($row['topic_last_time']),
		);
		$db->sql_statement($fields);
		$forum_update_sql .= ', ' . $db->sql_update;
		$sql = 'UPDATE ' . FORUMS_TABLE . '
					SET ' . $forum_update_sql . '
					WHERE forum_id = ' . $forum_id;
		$db->sql_query($sql, false, __LINE__, __FILE__);

		// resync sum
		if ( $mode == 'delete' )
		{
			$config->set('stat_total_posts', $config->data['stat_total_posts'] - 1);
			if ( $post_data['last_post'] && $post_data['first_post'] )
			{
				$config->set('stat_total_topics', $config->data['stat_total_topics'] - 1);
			}
		}
		else
		{
			$config->set('stat_total_posts', $config->data['stat_total_posts'] + 1);
			if ( $mode == 'newtopic' )
			{
				$config->set('stat_total_topics', $config->data['stat_total_topics'] + 1);
			}
		}
	}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
function delete_post(
{
	global $board_config
	global $userdata
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
	global $config;
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		$meta = '<meta http-equiv="refresh" content="3;url=' . append_sid("viewforum.$phpEx?" . POST_FORUM_URL . '=' . $forum_id) . '">';
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
		$meta = '<meta http-equiv="refresh" content="3;url=' . $config->url('index', array(POST_FORUM_URL => $forum_id), true) . '">';
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	$message .=  '<br /><br />' . sprintf($lang['Click_return_forum'], '<a href="' . append_sid("viewforum.$phpEx?" . POST_FORUM_URL . "=$forum_id") . '">', '</a>');
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
	$message .=  '<br /><br />' . sprintf($lang['Click_return_forum'], '<a href="' . $config->url('index', array(POST_FORUM_URL => $forum_id), true) . '">', '</a>');
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
function generate_smilies(
{
	global $db
	global $user_ip
	global $userdata;
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
	global $config, $user, $censored_words, $icons, $navigation, $themes, $smilies;
	global $forums, $forum_id;

	// get forum id
	$forum_id = intval($forum_id);
	if ( empty($forum_id) )
	{
		$forum_id = _read(POST_FORUM_URL, TYPE_INT);
	}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	$sql = "SELECT emoticon, code, smile_url   
		FROM " . SMILIES_TABLE . " 
		ORDER BY smilies_id";
	if ($result = $db->sql_query($sql))
	{
		$num_smilies = 0;
		$rowset = array();
		while ($row = $db->sql_fetchrow($result))
		{
			if (empty($rowset[$row['smile_url']]))
			{
				$rowset[$row['smile_url']]['code'] = str_replace("'", "\\'", str_replace('\\', '\\\\', $row['code']));
				$rowset[$row['smile_url']]['emoticon'] = $row['emoticon'];
				$num_smilies++;
			}
		}
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
	// set a "if (true) {" only for the last "}" at bottom
	if ( true )
	{
		global $smilies;

		$data = $smilies->read();
		$count_data = count($data);
		$rowset = array();
		$num_smilies = 0;
		for ($i = 0; $i < $count_data; $i++ )
		{
			$row = $data[$i];
			if (empty($rowset[$row['smile_url']]))
			{
				$rowset[$row['smile_url']]['code'] = str_replace("'", "\\'", str_replace('\\', '\\\\', $row['code']));
				$rowset[$row['smile_url']]['emoticon'] = $row['emoticon'];
				$num_smilies++;
			}
		}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
					'U_MORE_SMILIES' => append_sid("posting.$phpEx?mode=smilies"))
				);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
					'U_MORE_SMILIES' => $config->url('posting', array(POST_FORUM_URL => $forum_id, 'mode' => 'smilies'), true),
				));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
includes/functions_search.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
function clean_words($mode, &$entry, &$stopword_list, &$synonym_list)
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
function clean_words($mode, $entry, &$stopword_list, &$synonym_list)
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
function username_search(
{
	global $db
	global $starttime
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
	global $config, $user, $censored_words, $icons, $navigation, $themes, $smilies;
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
includes/functions_selects.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	$style_select = '<select name="' . $select_name . '">';
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
	if ( !defined('IN_ADMIN') || defined('IN_PROFILE') )
	{
		global $user;
		$selected = empty($default_style) ? ' selected="selected"' : '';
		$style_select .= '<option value="0"' . $selected . '>' . $user->lang('Default') . '</option>';
	}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
includes/page_header.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
$s_last_visit = ( $userdata['session_logged_in'] ) ? 
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ FIND ]------------------------------------------------
#
	$l_online_users .= sprintf($l_h_user_s, $logged_hidden_online);
	$l_online_users .= sprintf($l_g_user_s, $guests_online);
}
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
$s_last_visit = $user->data['session_logged_in'] ? $user->date($user->data['user_lastvisit']) : '';
$l_online_users = '';
$online_userlist = '';
if ( !isset($page_title) )
{
	$page_title = '';
}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
$nav_link_proto = '<link rel="%s" href="%s" title="%s" />' . "\n";
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
$nav_link_proto = '<link rel="%s" href="%s" title="%s">' . "\n";
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line are longer
#
// Format Timezone. We are unable to use array_pop here, because of PHP3 compatibility
$l_timezone = explode('.', $board_config['board_timezone']);
$l_timezone = (count($l_timezone) > 1
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
$l_timezone = $user->get_timezone();

if ( !empty($config->data['site_fav_icon']) )
{
	$nav_links_html .= '<link rel="SHORTCUT ICON" href="' . $user->img($config->data['site_fav_icon']) . '">';
}
$nav_links_html .= "\n" . '<link rel="copyright" href="http://www.phpBB.com" title="phpBB.com">';
$is_admin = $user->data['session_logged_in'] && ($user->data['user_level'] == ADMIN);
$template->assign_vars(array(
	// preferences
	'L_PREFERENCES' => $user->lang('Preferences'),
	'U_PREFERENCES' => $config->url('usercp', '', true),

	// logos
	'I_SPACER' => $user->img('spacer'),
	'I_LOGO' => $user->img('logo'),
	'I_LOGO_SMALL' => $user->img('logo_small'),

	// admin
	'U_ADMIN_LINK' => $is_admin ? $config->url('admin/index', array('sid' => $user->data['session_id']), true) : '',
	'L_ADMIN_LINK' => $is_admin ? $user->lang('Admin_panel') : '',
	'I_ADMIN_LINK' => $is_admin ? $user->img('menu_admin') : '',

	// pics for other options
	'I_ACP' => $user->img('menu_acp'),
	'I_FAQ' => $user->img('menu_faq'),
	'I_SEARCH' => $user->img('menu_search'),
	'I_MEMBERLIST' => $user->img('menu_memberlist'),
	'I_GROUP_CP' => $user->img('menu_usergroup'),
	'I_REGISTER' => $user->img('menu_register'),
	'I_PROFILE' => $user->img('menu_profile'),
	'I_PREFERENCES' => $user->img('menu_preferences'),
	'I_LOGIN' => $user->img('menu_login'),
	'I_LOGOUT' => $user->img('menu_logout'),
));
$template->set_switch('user_is_admin', $is_admin);
$template->set_switch('in_admin', defined('IN_ADMIN'));

// calendar if present
if ( !empty($config->data['mod_topic_calendar_CH']) && !defined('IN_CALENDAR') )
{
	@include_once($config->url('includes/class_calendar'));
	if ( class_exists('calendar') )
	{
		$calendar = new calendar();
		$calendar->display('CALENDAR_BOX');
		unset($calendar);
	}
	else
	{
		$sql = 'DELETE FROM ' . CONFIG_TABLE . '
			WHERE config_name = \'mod_topic_calendar_CH\'';
		$db->sql_query($sql, false, __LINE__, __FILE__);
		$config->read(true);
	}
}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	'CURRENT_TIME' => sprintf($lang['Current_time'], create_date($board_config['default_dateformat'], time(), $board_config['board_timezone'])),
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
	'CURRENT_TIME' => sprintf($user->lang('Current_time'), $user->date(time(), '', false)),
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
includes/page_tail.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	'ADMIN_LINK' => $admin_link)
);
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
if ( empty($gen_simple_header) && defined('DEBUG') )
{
	// send run stat (page generation, sql time, requests dump...)
	include($config->url('includes/class_run_stats'));
	$stat_run = new stat_run_class(microtime());
	$stat_run->display();
}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
$template->pparse('overall_footer');
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
// send messages
if ( defined('CH_message_queue') && empty($gen_simple_header) && !empty($message_queue->data) )
{
	$message_queue->send();
}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
includes/sessions.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			$sql = 'SELECT u.* 
				FROM ' . USERS_TABLE . ' u, ' . SESSIONS_KEYS_TABLE . ' k
				WHERE u.user_id = ' . (int) $user_id . "
					AND u.user_active = 1
					AND k.user_id = u.user_id
					AND k.key_id = '" . md5($sessiondata['autologinid']) . "'";
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
			$sql = 'SELECT u.*, g.*
				FROM ' . USERS_TABLE . ' u, ' . SESSIONS_KEYS_TABLE . ' k, ' . GROUPS_TABLE . ' g
				WHERE u.user_id = ' . (int) $user_id . '
					AND g.group_user_id = u.user_id
					AND u.user_active = 1
					AND k.user_id = u.user_id
					AND k.key_id = \'' . md5($sessiondata['autologinid']) . '\'';
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			$sql = 'SELECT *
				FROM ' . USERS_TABLE . '
				WHERE user_id = ' . (int) $user_id . '
					AND user_active = 1';
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
			$sql = 'SELECT u.*, g.*
				FROM ' . USERS_TABLE . ' u, ' . GROUPS_TABLE . ' g
				WHERE u.user_id = ' . (int) $user_id . '
					AND g.group_user_id = u.user_id
					AND u.user_active = 1';
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		$sql = 'SELECT *
			FROM ' . USERS_TABLE . '
			WHERE user_id = ' . (int) $user_id;
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
		$sql = 'SELECT u.*, g.*
			FROM ' . USERS_TABLE . ' u, ' . GROUPS_TABLE . ' g
			WHERE u.user_id = ' . (int) $user_id . '
				AND g.group_user_id = u.user_id';
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
			$sql = "UPDATE " . USERS_TABLE . " 
				SET user_session_time = $current_time
				WHERE user_id = $user_id";
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
			$sql = str_replace('SET ', 'SET user_session_logged = ' . intval($login) . ', ', $sql);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		$sql = "SELECT u.*, s.*
			FROM " . SESSIONS_TABLE . " s, " . USERS_TABLE . " u
			WHERE s.session_id = '$session_id'
				AND u.user_id = s.session_user_id";
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
		$sql = 'SELECT u.*, s.*, g.*
			FROM ' . SESSIONS_TABLE . ' s, ' . USERS_TABLE . ' u, ' . GROUPS_TABLE . ' g
			WHERE s.session_id = \'' . $session_id . '\'
				AND u.user_id = s.session_user_id
				AND g.group_user_id = s.session_user_id';
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
				//
				// Only update session DB a minute or so after last update
				//
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
				// actually we prefer a more accurate information for viewonline
				if ( $userdata['user_session_page'] != $thispage_id )
				{
					$userdata['session_time'] = $current_time - 61;
				}

				// trace this is not a new session
				global $sys_updated_session;
				$sys_updated_session = true;
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
						$sql = "UPDATE " . USERS_TABLE . " 
							SET user_session_time = $current_time
							WHERE user_id = " . $userdata['user_id'];
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
						$sql = str_replace('SET ', 'SET user_session_logged = ' . true . ', ', $sql);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	if ( !$db->sql_query($sql) )
	{
		message_die(CRITICAL_ERROR, 'Error removing user session', '', __LINE__, __FILE__, $sql);
	}
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
	if ( $user_id != ANONYMOUS )
	{
		$sql = 'UPDATE ' . USERS_TABLE . '
					SET user_session_logged = 0
					WHERE user_id = ' . intval($user_id);
		$db->sql_query($sql, false, __LINE__, __FILE__);
	}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	$sql = 'SELECT *
		FROM ' . USERS_TABLE . '
		WHERE user_id = ' . ANONYMOUS;
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
	$sql = 'SELECT u.*, g.*
		FROM ' . USERS_TABLE . ' u, ' . GROUPS_TABLE . ' g
		WHERE u.user_id = ' . ANONYMOUS . '
			AND g.group_user_id = u.user_id';
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
includes/topic_review.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
function topic_review(
{
	global $db
	global $userdata
	global $orig_word
	global $starttime;
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
	global $config, $user, $censored_words, $icons, $navigation, $themes, $smilies, $topics_attr;
	global $forums, $forum_id;
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
		$sql = "SELECT t.topic_title
			FROM " . TOPICS_TABLE . " t, " . FORUMS_TABLE . " f 
			WHERE t.topic_id = $topic_id
				AND f.forum_id = t.forum_id";
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
		// let's enhance this request
		$added_fields = 't.topic_replies, t.topic_type, t.topic_sub_type, t.topic_first_post_id, t.topic_time, t.topic_duration, t.topic_sub_title, ';
		if ( $config->data['mod_topic_calendar_CH'] )
		{
			$added_fields .= 't.topic_calendar_time, t.topic_calendar_duration, ';
		}
		$sql = str_replace('SELECT ', 'SELECT ' . $added_fields, $sql);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		if ( !($forum_row = $db->sql_fetchrow($result)) )
		{
			message_die(GENERAL_MESSAGE, 'Topic_post_not_exist');
		}
		$db->sql_freeresult($result);
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
		if ( empty($forums) )
		{
			// read forums to get the specific style, used by user set
			include_once($config->url('includes/class_forums'));
			$forums = new forums();
			$forums->read();
		}

		// prepare title enhancement
		$front_title = new front_title();
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		$is_auth = auth(AUTH_ALL, $forum_id, $userdata, $forum_row);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
		$user->get_cache(POST_FORUM_URL);
		$is_auth = array(
			'auth_view' => $user->auth(POST_FORUM_URL, 'auth_view', $forum_id),
			'auth_download' => $user->auth(POST_FORUM_URL, 'auth_download', $forum_id),
			'auth_read' => $user->auth(POST_FORUM_URL, 'auth_read', $forum_id),
			'auth_read_type' => $user->lang('Auth_Users_granted_access'),
		);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
	$sql = "SELECT u.username, u.user_id, p.*,  pt.post_text, pt.post_subject, pt.bbcode_uid
		FROM " . POSTS_TABLE . " p, " . USERS_TABLE . " u, " . POSTS_TEXT_TABLE . " pt
		WHERE p.topic_id = $topic_id
			AND p.poster_id = u.user_id
			AND p.post_id = pt.post_id
		ORDER BY p.post_time DESC
		LIMIT " . $board_config['posts_per_page'];
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
	// generate pagination
	$ppage = _read('ppage', TYPE_INT);
	if ( $ppage < 5 )
	{
		$ppage = $config->data['posts_per_page'];
	}
	$start = _read('start', TYPE_INT);
	if ( $start < 0 )
	{
		$start = 0;
	}
	$total_posts = $forum_row['topic_replies'] + 1;
	$parms = array(
		'mode' => 'topicreview',
		POST_TOPIC_URL => $topic_id,
	);
	if ( $ppage != $config->data['posts_per_page'] )
	{
		$parms += array(
			'ppage' => $ppage,
		);
	}
	$pagination = new pagination('posting', $parms);
	$pagination->display('pagination', $total_posts, $config->data['posts_per_page'], $start, true, 'Posts_count');

	// read posts
	$sql = 'SELECT p.*, pt.post_text, pt.post_subject, pt.bbcode_uid, pt.post_sub_title, u.user_id, u.username
				FROM ' . POSTS_TABLE . ' p, ' . POSTS_TEXT_TABLE . ' pt, ' . USERS_TABLE . ' u
				WHERE p.topic_id = ' . intval($topic_id) . '
					AND p.poster_id = u.user_id
					AND pt.post_id = p.post_id
				ORDER BY p.post_time DESC
				LIMIT ' . $start . ', ' . $ppage;
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#					
				'L_MINI_POST_ALT' => $mini_post_alt)
			);
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
			// enhance the topic title
			if ( !$is_inline_review )
			{
				$front_title->set('postrow', array_merge($forum_row, $row), $forum_row['topic_first_post_id'] == $row['post_id']);
			}
			$template->set_switch('postrow.light', !($i % 2));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
includes/usercp_register.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			if ( !empty($passwd_sql) )
			{
				session_reset_keys($user_id, $user_ip);
			}
#
#-----[ AFTER, ADD ]------------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
			// if name changed, update some data
			if ( !empty($username_sql) )
			{
				$fields = array(
					'forum_last_username' => stripslashes($username),
				);
				$db->sql_statement($fields);

				// update forums last poster
				$sql = 'UPDATE ' . FORUMS_TABLE . '
							SET ' . $db->sql_update . '
							WHERE forum_last_poster = ' . intval($user_id);
				$db->sql_query($sql, false, __LINE__, __FILE__);

				// update last user
				if ( ($user_id == $config->data['stat_last_user']) || empty($config->data['stat_last_username']) )
				{
					$config->set('stat_last_user', $user_id);
					$config->set('stat_last_username', stripslashes($username));
				}

				// recache moderators
				include_once($config->url('includes/class_forums'));
				$moderators = new moderators();
				$moderators->set_users_status();
				$moderators->read(true);
			}
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			if ( !($row = $db->sql_fetchrow($result)) )
			{
				message_die(GENERAL_ERROR, 'Could not obtain next user_id information', '', __LINE__, __FILE__, $sql);
			}
			$user_id = $row['total'] + 1;
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
			// update last user
			$config->set('stat_last_user', $user_id);
			$config->set('stat_last_username', stripslashes($username));
			$sql = 'SELECT COUNT(user_id) AS total_users
						FROM ' . USERS_TABLE . '
						WHERE user_id <> ' . ANONYMOUS;
			$result = $db->sql_query($sql, false, __LINE__, __FILE__);
			$row = $db->sql_fetchrow($result);
			$config->set('stat_total_users', intval($row['total_users']) + 1);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
			if( !($result = $db->sql_query($sql, END_TRANSACTION)) )
			{
				message_die(GENERAL_ERROR, 'Could not insert data into user_group table', '', __LINE__, __FILE__, $sql);
			}
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- add
			// cache groups list and set the user_id on the single group_id
			$view_user = new user();
			$view_user->read($user_id);
			$view_user->get_groups_list(true);
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
		$code = strtoupper(str_replace('0', 'o', substr($code, 6)));
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
		// fix a typo
		$code = strtoupper(str_replace('0', 'o', substr($code, 2, 6)));
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
includes/usercp_viewprofile.php
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- fix : wrong username recog ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#
$profiledata = get_userdata($HTTP_GET_VARS[POST_USERS_URL]);
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
//-- fix : wrong username recog ------------------------------------------------
//-- delete
/*
#
#-----[ AFTER, ADD ]------------------------------------------
#
*/
//-- add
$profiledata = get_userdata(intval($HTTP_GET_VARS[POST_USERS_URL]));
//-- fin fix : wrong username recog --------------------------------------------
#
#-------------------------------------------------------------
#
# template part
#
#-------------------------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/admin/group_edit_body.tpl
#
#-----[ FIND ]------------------------------------------------
#
class="post" type="text" class="post"
#
#----------[ IN-LINE FIND ]-----------------------------------
#
class="post" type="text" class="post"
#
#----------[ IN-LINE REPLACE WITH ]---------------------------
#
class="post" type="text"
#
#-----[ FIND ]------------------------------------------------
#
	<!-- BEGIN group_edit -->
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
	<tr>
		<td class="row1"><span class="gen">{L_GROUP_SYSSTATUS}:</span></td>
		<td class="row2">
			<input type="radio" name="group_status" value="{GROUP_SYSSTATUS_STD}"{S_GROUP_SYSSTATUS_STD} /> {L_NO} &nbsp;&nbsp;<input type="radio" name="group_status" value="{GROUP_SYSSTATUS_SYS}"{S_GROUP_SYSSTATUS_SYS} /> {L_YES}
		</span></td>
	</tr>
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/admin/index_body.tpl
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
<img src="../templates/subSilver/images/spacer.gif"
#
#----------[ IN-LINE FIND ]-----------------------------------
#
../templates/subSilver/images/spacer.gif
#
#----------[ IN-LINE REPLACE WITH ]---------------------------
#
{I_SPACER}
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/admin/index_navigate.tpl
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
<img src="../templates/subSilver/images/logo_phpBB_med.gif"
#
#----------[ IN-LINE FIND ]-----------------------------------
#
../templates/subSilver/images/logo_phpBB_med.gif
#
#----------[ IN-LINE REPLACE WITH ]---------------------------
#
{I_LOGO_SMALL}
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/admin/page_footer.tpl
#
#-----[ FIND ]------------------------------------------------
#
</body>
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
<!-- INCLUDE stat_run_body.tpl -->
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/admin/page_header.tpl
#
#-----[ FIND ]------------------------------------------------
#
<style type="text/css">
<!--
#
#-----[ AFTER, ADD ]------------------------------------------
#

.absbottom {
	vertical-align: text-bottom;
}
.dom_overview_abshidden { position: absolute; visibility: hidden; width: 300px; }
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/admin/styles_edit_body.tpl
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
{S_TEMPLATE_SELECT}
</tr>
#
#-----[ AFTER, ADD ]------------------------------------------
#
	<tr>
		<td class="row1">{L_IMAGES_PACK}:<span class="gensmall"><br />{L_IMAGES_PACK_EXPLAIN}</span></td>
		<td class="row2" colspan="2"><input class="post" type="text" size="50" maxlength="100" name="images_pack" value="{IMAGES_PACK}" /></td>
	</tr>
	<tr>
		<td class="row1">{L_CUSTOM_TPLS}:<span class="gensmall"><br />{L_CUSTOM_TPLS_EXPLAIN}</span></td>
		<td class="row2" colspan="2"><input class="post" type="text" size="50" maxlength="100" name="custom_tpls" value="{CUSTOM_TPLS}" /></td>
	</tr>
	<tr>
		<td class="row1">{L_STYLESHEET}:<span class="gensmall"><br />{L_STYLESHEET_EXPLAIN}</span></td>
		<td class="row2" colspan="2"><input class="post" type="text" size="50" maxlength="100" name="head_stylesheet" value="{HEAD_STYLESHEET}"></td>
	</tr>
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
</tr>
<tr>
{L_STYLESHEET}
{HEAD_STYLESHEET}
<td
</tr>
#
#-----[ REPLACE WITH ]----------------------------------------
#
	</tr>
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/admin/user_ban_body.tpl
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
class="post" type="text" class="post"
#
#----------[ IN-LINE FIND ]-----------------------------------
#
class="post" type="text" class="post"
#
#----------[ IN-LINE REPLACE WITH ]---------------------------
#
class="post" type="text"
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/agreement.tpl
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
<table
<tr>
{U_INDEX}
</tr>
</table>
#
#-----[ REPLACE WITH ]----------------------------------------
#
{NAVIGATION_BOX}
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/confirm_body.tpl
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
<table
<tr>
{U_INDEX}
</tr>
</table>
#
#-----[ REPLACE WITH ]----------------------------------------
#
{NAVIGATION_BOX}
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/faq_body.tpl
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
<table
<tr>
{U_INDEX}
</tr>
</table>
#
#-----[ REPLACE WITH ]----------------------------------------
#
{NAVIGATION_BOX}
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
<img src="templates/subSilver/images/spacer.gif"
#
#----------[ IN-LINE FIND ]-----------------------------------
#
templates/subSilver/images/spacer.gif
#
#----------[ IN-LINE REPLACE WITH ]---------------------------
#
{I_SPACER}
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/groupcp_info_body.tpl
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
<table
<tr>
{U_INDEX}
</tr>
</table>
#
#-----[ REPLACE WITH ]----------------------------------------
#
{NAVIGATION_BOX}
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/groupcp_user_body.tpl
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
<table
<tr>
{U_INDEX}
</tr>
</table>
#
#-----[ REPLACE WITH ]----------------------------------------
#
{NAVIGATION_BOX}
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/jumpbox.tpl
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
onSubmit="if(document.jumpbox.f.value == -1){return false;}"
#
#----------[ IN-LINE FIND ]-----------------------------------
#
== -1
#
#----------[ IN-LINE REPLACE WITH ]---------------------------
#
< 0
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/login_body.tpl
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
<table
<tr>
{U_INDEX}
</tr>
</table>
#
#-----[ REPLACE WITH ]----------------------------------------
#
{NAVIGATION_BOX}
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/memberlist_body.tpl
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
  <table width="100%" cellspacing="2" cellpadding="2" border="0" align="center">
	<tr> 
{U_INDEX}
#
#-----[ REPLACE WITH ]----------------------------------------
#
{NAVIGATION_BOX}
  <table width="100%" cellspacing="2" cellpadding="2" border="0" align="center">
	<tr>
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/message_body.tpl
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
<table
<tr>
{U_INDEX}
</tr>
</table>
#
#-----[ REPLACE WITH ]----------------------------------------
#
{NAVIGATION_BOX}
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/modcp_move.tpl
#
#-----[ FIND ]------------------------------------------------
#
<form action="{S_MODCP_ACTION}" method="post">
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
<table border="0" cellpadding="4" cellspacing="1" width="100%">
<tr>
	<td><span class="maintitle">
		<a href="{U_MOD_CP}" class="maintitle">{L_MOD_CP}</a>
	</span><span class="gensmall"><br />
		<br />
	</span></td>
</tr>
</table>
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
<table
<tr>
{U_INDEX}
</tr>
</table>
#
#-----[ REPLACE WITH ]----------------------------------------
#
{NAVIGATION_BOX}
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/modcp_split.tpl
#
#-----[ FIND ]------------------------------------------------
#
<form method="post" action="{S_SPLIT_ACTION}">
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
<table border="0" cellpadding="4" cellspacing="1" width="100%">
<tr>
	<td><span class="maintitle">
		<a href="{U_MOD_CP}" class="maintitle">{L_MOD_CP}</a>
	</span><span class="gensmall"><br />
		{L_SPLIT_TOPIC_EXPLAIN}<br />
	</span></td>
</tr>
</table>
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
<table
<tr>
{U_INDEX}
{U_VIEW_FORUM}
</tr>
</table>
#
#-----[ REPLACE WITH ]----------------------------------------
#
{NAVIGATION_BOX}
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
<tr> 
{L_SPLIT_TOPIC_EXPLAIN}
</tr>
	<tr>
#
#-----[ REPLACE WITH ]----------------------------------------
#
	<tr>
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
<img src="templates/subSilver/images/icon_minipost.gif"
#
#----------[ IN-LINE FIND ]-----------------------------------
#
templates/subSilver/images/icon_minipost.gif
#
#----------[ IN-LINE REPLACE WITH ]---------------------------
#
{I_POST}
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
<img src="templates/subSilver/images/spacer.gif"
#
#----------[ IN-LINE FIND ]-----------------------------------
#
templates/subSilver/images/spacer.gif
#
#----------[ IN-LINE REPLACE WITH ]---------------------------
#
{I_SPACER}
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/modcp_viewip.tpl
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
<table
<tr>
{U_INDEX}
</tr>
</table>
#
#-----[ REPLACE WITH ]----------------------------------------
#
<table border="0" cellpadding="4" cellspacing="1" width="100%">
<tr>
	<td><span class="maintitle">
		<a href="{U_MOD_CP}" class="maintitle">{L_MOD_CP}</a>
	</span><span class="gensmall"><br />
		<br />
	</span></td>
</tr>
</table>

{NAVIGATION_BOX}
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/overall_footer.tpl
#
#-----[ FIND ]------------------------------------------------
#
</body>
#
#-----[ BEFORE, ADD ]-----------------------------------------
#
<!-- INCLUDE stat_run_body.tpl -->
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/overall_header.tpl
#
#-----[ FIND ]------------------------------------------------
#
<style type="text/css">
<!--
#
#-----[ AFTER, ADD ]------------------------------------------
#

.absbottom {
	vertical-align: text-bottom;
}
.dom_overview_abshidden { position: absolute; visibility: hidden; width: 300px; }
#
#-----[ FIND ]------------------------------------------------
#
<img src="templates/subSilver/images/logo_phpBB.gif"
#
#----------[ IN-LINE FIND ]-----------------------------------
#
templates/subSilver/images/logo_phpBB.gif
#
#----------[ IN-LINE REPLACE WITH ]---------------------------
#
{I_LOGO}
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
&nbsp;<a href="{U_FAQ}"
#
#----------[ IN-LINE FIND ]-----------------------------------
#
&nbsp;<a href="{U_FAQ}"
#
#----------[ IN-LINE BEFORE, ADD ]----------------------------
#
<!-- BEGIN topic_calendar -->&nbsp;<a href="{U_CALENDAR}" class="mainmenu"><img src="{I_CALENDAR}" width="12" height="13" border="0" alt="{L_CALENDAR}" hspace="3" />{L_CALENDAR}</a>&nbsp; <!-- END topic_calendar -->
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
&nbsp;<a href="{U_PRIVATEMSGS}"
#
#----------[ IN-LINE FIND ]-----------------------------------
#
&nbsp; &nbsp;<a href="{U_PRIVATEMSGS}"
#
#----------[ IN-LINE BEFORE, ADD ]----------------------------
#
&nbsp; &nbsp;<a href="{U_PREFERENCES}" class="mainmenu"><img src="templates/subSilver/images/icon_mini_preferences.gif" width="12" height="13" border="0" alt="{L_PREFERENCES}" hspace="3" />{L_PREFERENCES}</a>
#
#-----[ FIND ]------------------------------------------------
#
# at bottom of the file
#
<br />
#
#-----[ AFTER, ADD ]------------------------------------------
#
		{CALENDAR_BOX}
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/posting_preview.tpl
#
#-----[ FIND ]------------------------------------------------
#
		<td class="row1"><img src="templates/subSilver/images/icon_minipost.gif" alt="{L_POST}" /><span class="postdetails">{L_POSTED}: {POST_DATE} &nbsp;&nbsp;&nbsp; {L_POST_SUBJECT}: {POST_SUBJECT}</span></td>
#
#-----[ REPLACE WITH ]----------------------------------------
#
		<td class="row1"><img src="{I_POST}" alt="{L_POST}" /><span class="postdetails">{L_POSTED}: {POST_DATE} &nbsp;&nbsp;&nbsp; {L_POST_SUBJECT}:
			<!-- BEGIN msg_icon --><img src="{msg_icon.I_ICON}" border="0" title="{msg_icon.L_ICON}" class="absbottom" />&nbsp;<!-- END msg_icon -->
			<!-- BEGIN sub_type --><!-- BEGIN img --><img src="{sub_type.I_SUB_TYPE}" border="0" alt="{sub_type.L_SUB_TYPE}" title="{sub_type.L_SUB_TYPE}" class="absbottom" />&nbsp;<!-- END img --><!-- BEGIN txt --><b>[{sub_type.L_SUB_TYPE}]</b>&nbsp;<!-- END txt --><!-- END sub_type -->
			{POST_SUBJECT}
			<!-- BEGIN sub_title --><br />{L_SUB_TITLE}: {sub_title.SUB_TITLE}<!-- END sub_title -->
			<!-- BEGIN announce --><br />{announce.S_ANNOUNCE}<!-- END announce -->
			<!-- BEGIN calendar_event --><br />{calendar_event.S_CALENDAR_EVENT}<!-- END calendar_event -->
		</span></td>
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
<img src="templates/subSilver/images/spacer.gif"
#
#----------[ IN-LINE FIND ]-----------------------------------
#
templates/subSilver/images/spacer.gif
#
#----------[ IN-LINE REPLACE WITH ]---------------------------
#
{I_SPACER}
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/posting_smilies.tpl
#
#-----[ FIND ]------------------------------------------------
#

<script language="javascript" type="text/javascript">
<!--
function emoticon(text) {
	text = ' ' + text + ' ';
	if (opener.document.forms['post'].message.createTextRange && opener.document.forms['post'].message.caretPos) {
		var caretPos = opener.document.forms['post'].message.caretPos;
		caretPos.text = caretPos.text.charAt(caretPos.text.length - 1) == ' ' ? text + ' ' : text;
		opener.document.forms['post'].message.focus();
	} else {
	opener.document.forms['post'].message.value  += text;
	opener.document.forms['post'].message.focus();
	}
}
//-->
</script>
#
#-----[ REPLACE WITH ]----------------------------------------
#
# *snip*
#

#
#-----[ FIND ]------------------------------------------------
#
javascript:emoticon(
#
#----------[ IN-LINE FIND ]-----------------------------------
#
javascript:emoticon(
#
#----------[ IN-LINE REPLACE WITH ]---------------------------
#
javascript:opener.emoticon(
#
#-----[ FIND ]------------------------------------------------
#
{L_MORE_SMILIES}</a></td>
#
#----------[ IN-LINE FIND ]-----------------------------------
#
{L_MORE_SMILIES}</a></td>
#
#----------[ IN-LINE REPLACE WITH ]---------------------------
#
{L_MORE_SMILIES}</a></span></td>
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/posting_topic_review.tpl
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
<td
<!-- END switch_inline_mode -->
#
#-----[ AFTER, ADD ]------------------------------------------
#

<!-- BEGIN pagination -->
<table border="0" cellpadding="2" cellspacing="0" width="100%">
<tr>
	<td width="100%" valign="bottom"><span class="gensmall">
		<b>{pagination.L_PAGE_OF}</b>&nbsp;{pagination.L_COUNT}
	</span></td>
	<td align="right" valign="bottom" nowrap="nowrap"><span class="gensmall">&nbsp;
		<!-- BEGIN unique_ELSE --><b>{pagination.L_GOTO}:&nbsp;</b><!-- END unique_ELSE -->
		<!-- BEGIN previous --><b><a href="{pagination.U_PREVIOUS}" class="gensmall">{pagination.L_PREVIOUS}</a>&nbsp;</b><!-- END previous -->
		<!-- BEGIN page_number --><b><!-- BEGIN number --><!-- BEGIN current_ELSE --><a href="{pagination.page_number.U_PAGE}" class="gensmall"><!-- END current_ELSE -->{pagination.page_number.PAGE}<!-- BEGIN current_ELSE --></a><!-- END current_ELSE --><!-- BEGIN sep -->, <!-- END sep --><!-- BEGINELSE number -->..., <!-- END number --></b><!-- END page_number -->
		<!-- BEGIN next --><b>&nbsp;<a href="{pagination.U_NEXT}" class="gensmall">{pagination.L_NEXT}</a></b><!-- END next -->
	</span></td>
</tr>
</table>
<!-- END pagination -->
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
<a name="{postrow.U_POST_ID}"></a><b>
#
#----------[ IN-LINE FIND ]-----------------------------------
#
<a name="{postrow.U_POST_ID}"></a><b>
#
#----------[ IN-LINE REPLACE WITH ]---------------------------
#
<b>
#
#-----[ FIND ]------------------------------------------------
# 
				<td width="100%"><img src="{postrow.MINI_POST_IMG}" width="12" height="9" alt="{postrow.L_MINI_POST_ALT}" title="{postrow.L_MINI_POST_ALT}" border="0" /><span class="postdetails">{L_POSTED}: {postrow.POST_DATE}<span class="gen">&nbsp;</span>&nbsp;&nbsp;&nbsp;{L_POST_SUBJECT}: {postrow.POST_SUBJECT}</span></td>
#
#-----[ REPLACE WITH ]----------------------------------------
#
				<td width="100%"><img src="{postrow.MINI_POST_IMG}" width="12" height="9" alt="{postrow.L_MINI_POST_ALT}" title="{postrow.L_MINI_POST_ALT}" border="0" /><span class="postdetails">{L_POSTED}: {postrow.POST_DATE}<span class="gen">&nbsp;</span>&nbsp;&nbsp;&nbsp;{L_POST_SUBJECT}:
					<!-- BEGIN msg_icon --><img src="{postrow.msg_icon.I_ICON}" border="0" title="{postrow.msg_icon.L_ICON}" class="absbottom" />&nbsp;<!-- END msg_icon -->
					<!-- BEGIN sub_type --><!-- BEGIN img --><img src="{postrow.sub_type.I_SUB_TYPE}" border="0" alt="{postrow.sub_type.L_SUB_TYPE}" title="{postrow.sub_type.L_SUB_TYPE}" class="absbottom" />&nbsp;<!-- END img --><!-- BEGIN txt --><b>[{postrow.sub_type.L_SUB_TYPE}]</b>&nbsp;<!-- END txt --><!-- END sub_type -->
					{postrow.POST_SUBJECT}
					<!-- BEGIN sub_title --><br />{L_SUB_TITLE}: {postrow.sub_title.SUB_TITLE}<!-- END sub_title -->
					<!-- BEGIN announce --><br />{postrow.announce.S_ANNOUNCE}<!-- END announce -->
					<!-- BEGIN calendar_event --><br />{postrow.calendar_event.S_CALENDAR_EVENT}<!-- END calendar_event -->
				</span></td>
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
<img src="templates/subSilver/images/spacer.gif"
#
#----------[ IN-LINE FIND ]-----------------------------------
#
templates/subSilver/images/spacer.gif
#
#----------[ IN-LINE REPLACE WITH ]---------------------------
#
{I_SPACER}
#
#-----[ FIND ]------------------------------------------------
#

<!-- BEGIN switch_inline_mode -->
		</iframe></td>
#
#-----[ BEFORE, ADD ]-----------------------------------------
#

<!-- BEGIN pagination -->
<table border="0" cellpadding="2" cellspacing="0" width="100%">
<tr>
	<td width="100%" valign="top"><span class="gensmall">
		<b>{pagination.L_PAGE_OF}</b>&nbsp;{pagination.L_COUNT}
	</span></td>
	<td align="right" valign="top" nowrap="nowrap"><span class="gensmall">&nbsp;
		<!-- BEGIN unique_ELSE --><b>{pagination.L_GOTO}:&nbsp;</b><!-- END unique_ELSE -->
		<!-- BEGIN previous --><b><a href="{pagination.U_PREVIOUS}" class="gensmall">{pagination.L_PREVIOUS}</a>&nbsp;</b><!-- END previous -->
		<!-- BEGIN page_number --><b><!-- BEGIN number --><!-- BEGIN current_ELSE --><a href="{pagination.page_number.U_PAGE}" class="gensmall"><!-- END current_ELSE -->{pagination.page_number.PAGE}<!-- BEGIN current_ELSE --></a><!-- END current_ELSE --><!-- BEGIN sep -->, <!-- END sep --><!-- BEGINELSE number -->..., <!-- END number --></b><!-- END page_number -->
		<!-- BEGIN next --><b>&nbsp;<a href="{pagination.U_NEXT}" class="gensmall">{pagination.L_NEXT}</a></b><!-- END next -->
	</span></td>
</tr>
</table>
<!-- END pagination -->
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/privmsgs_body.tpl
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
<img src="templates/subSilver/images/spacer.gif"
#
#----------[ IN-LINE FIND ]-----------------------------------
#
templates/subSilver/images/spacer.gif
#
#----------[ IN-LINE REPLACE WITH ]---------------------------
#
{I_SPACER}
#
#-----[ FIND ]------------------------------------------------
#
<form method="post" name="privmsg_list" action="{S_PRIVMSGS_ACTION}">
#
#-----[ AFTER, ADD ]------------------------------------------
#
{NAVIGATION_BOX}
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
	  <td align="left" valign="middle">{POST_PM_IMG}</td>
{U_INDEX}
#
#-----[ REPLACE WITH ]----------------------------------------
#
	  <td align="left" valign="middle">{POST_PM_IMG}</td>
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/privmsgs_read_body.tpl
#
#-----[ FIND ]------------------------------------------------
#
<form method="post" action="{S_PRIVMSGS_ACTION}">
#
#-----[ AFTER, ADD ]------------------------------------------
#
{NAVIGATION_BOX}
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
	  <td valign="middle">{REPLY_PM_IMG}</td>
{U_INDEX}
#
#-----[ REPLACE WITH ]----------------------------------------
#
	  <td valign="middle">{REPLY_PM_IMG}</td>
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/profile_avatar_gallery.tpl
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
<table
<tr>
{U_INDEX}
</tr>
</table>
#
#-----[ REPLACE WITH ]----------------------------------------
#
{NAVIGATION_BOX}
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/profile_send_email.tpl
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
<table
<tr>
{U_INDEX}
</tr>
</table>
#
#-----[ REPLACE WITH ]----------------------------------------
#
{NAVIGATION_BOX}
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/profile_send_pass.tpl
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
<table
<tr>
{U_INDEX}
</tr>
</table>
#
#-----[ REPLACE WITH ]----------------------------------------
#
{NAVIGATION_BOX}
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/profile_view_body.tpl
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
<table
<tr>
{U_INDEX}
</tr>
</table>
#
#-----[ REPLACE WITH ]----------------------------------------
#
{NAVIGATION_BOX}
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/search_body.tpl
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
<form action="{S_SEARCH_ACTION}" method="POST"><table
<tr>
{U_INDEX}
</tr>
</table>
#
#-----[ REPLACE WITH ]----------------------------------------
#
<form action="{S_SEARCH_ACTION}" method="POST">

{NAVIGATION_BOX}
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
{L_SEARCH_AUTHOR}
name="search_author"
</tr>
#
#-----[ AFTER, ADD ]------------------------------------------
#
	<tr>
		<td class="row1" colspan="2"><span class="gen">{L_SEARCH_FORUM}:&nbsp;</span></td>
		<td class="row2" colspan="2"><span class="genmed"><select class="post" name="search_forum">{S_FORUM_OPTIONS}</select></span><span class="gensmall"><br /><input name="no_subs" type="checkbox" value="1" {S_NO_SUBS} />{L_NO_SUBS}</span></td>
	</tr>
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
	<tr> 
{L_FORUM}
{S_FORUM_OPTIONS}
#
#-----[ REPLACE WITH ]----------------------------------------
#
	<tr>
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
	</tr>
	<tr>
{L_CATEGORY}
{S_CATEGORY_OPTIONS}
</td>
		<td class="row1" align="right"><span class="gen">{L_SORT_BY}:&nbsp;</span></td>
#
#-----[ REPLACE WITH ]----------------------------------------
#
		<td class="row1" align="right"><span class="gen">{L_SORT_BY}:&nbsp;</span></td>
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/search_results_posts.tpl
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
<table
<tr>
{U_INDEX}
</tr>
</table>
#
#-----[ REPLACE WITH ]----------------------------------------
#
{NAVIGATION_BOX}

<!-- BEGIN pagination -->
<table border="0" cellpadding="2" cellspacing="0" width="100%">
<tr>
	<td width="100%" valign="bottom"><span class="gensmall">
		<b>{pagination.L_PAGE_OF}</b>&nbsp;{pagination.L_COUNT}
	</span></td>
	<td align="right" valign="bottom" nowrap="nowrap"><span class="gensmall">&nbsp;
		<!-- BEGIN unique_ELSE --><b>{pagination.L_GOTO}:&nbsp;</b><!-- END unique_ELSE -->
		<!-- BEGIN previous --><b><a href="{pagination.U_PREVIOUS}" class="gensmall">{pagination.L_PREVIOUS}</a>&nbsp;</b><!-- END previous -->
		<!-- BEGIN page_number --><b><!-- BEGIN number --><!-- BEGIN current_ELSE --><a href="{pagination.page_number.U_PAGE}" class="gensmall"><!-- END current_ELSE -->{pagination.page_number.PAGE}<!-- BEGIN current_ELSE --></a><!-- END current_ELSE --><!-- BEGIN sep -->, <!-- END sep --><!-- BEGINELSE number -->..., <!-- END number --></b><!-- END page_number -->
		<!-- BEGIN next --><b>&nbsp;<a href="{pagination.U_NEXT}" class="gensmall">{pagination.L_NEXT}</a></b><!-- END next -->
	</span></td>
</tr>
</table>
<!-- END pagination -->
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
<img src="templates/subSilver/images/folder.gif" align="absmiddle" />
#
#----------[ IN-LINE FIND ]-----------------------------------
#
<img src="templates/subSilver/images/folder.gif" align="absmiddle" />
#
#----------[ IN-LINE REPLACE WITH ]---------------------------
#
<img src="{I_TOPIC}" alt="" align="middle">
#
#-----[ FIND ]------------------------------------------------
#
	<td width="100%" valign="top" class="row1"><img src="{searchresults.MINI_POST_IMG}" width="12" height="9" alt="{searchresults.L_MINI_POST_ALT}" title="{searchresults.L_MINI_POST_ALT}" border="0" /><span class="postdetails">{L_FORUM}:&nbsp;<b><a href="{searchresults.U_FORUM}" class="postdetails">{searchresults.FORUM_NAME}</a></b>&nbsp; &nbsp;{L_POSTED}: {searchresults.POST_DATE}&nbsp; &nbsp;{L_SUBJECT}: <b><a href="{searchresults.U_POST}">{searchresults.POST_SUBJECT}</a></b></span></td>
#
#-----[ REPLACE WITH ]----------------------------------------
#
	<td width="100%" valign="top" class="row1"><span class="postdetails">
		<img src="{searchresults.MINI_POST_IMG}" width="12" height="9" alt="{searchresults.L_MINI_POST_ALT}" title="{searchresults.L_MINI_POST_ALT}" border="0" />
		{L_POSTED}: {searchresults.POST_DATE}<span class="gen">&nbsp;</span>&nbsp; &nbsp;{L_SUBJECT}:
		<!-- BEGIN msg_icon --><img src="{searchresults.msg_icon.I_ICON}" border="0" title="{searchresults.msg_icon.L_ICON}" class="absbottom" />&nbsp;<!-- END msg_icon -->
		<!-- BEGIN sub_type --><!-- BEGIN img --><img src="{searchresults.sub_type.I_SUB_TYPE}" border="0" alt="{searchresults.sub_type.L_SUB_TYPE}" title="{searchresults.sub_type.L_SUB_TYPE}" class="absbottom" />&nbsp;<!-- END img --><!-- BEGIN txt --><b>[{searchresults.sub_type.L_SUB_TYPE}]</b>&nbsp;<!-- END txt --><!-- END sub_type -->
		<b><a href="{searchresults.U_POST}">{searchresults.POST_SUBJECT}</a></b>
		<!-- BEGIN sub_title --><br />{L_SUB_TITLE}: {searchresults.sub_title.SUB_TITLE}<!-- END sub_title -->
		<!-- BEGIN announce --><br />{searchresults.announce.S_ANNOUNCE}<!-- END announce -->
		<!-- BEGIN calendar_event --><br />{searchresults.calendar_event.S_CALENDAR_EVENT}<!-- END calendar_event -->
		<br />{L_FORUM}:&nbsp;
		<!-- BEGIN nav --><a href="{searchresults.nav.U_NAV}" title="{searchresults.nav.L_NAV_DESC}" class="postdetails">{searchresults.nav.L_NAV}</a><!-- BEGIN sep --> &raquo;&nbsp;<!-- END sep --><!-- END nav -->
	</span></td>
#
#-----[ FIND ]------------------------------------------------
#

<table width="100%" cellspacing="2" border="0" align="center" cellpadding="2">
  <tr> 
	<td align="left" valign="top"><span class="nav">{PAGE_NUMBER}</span></td>
	<td align="right" valign="top" nowrap="nowrap"><span class="nav">{PAGINATION}</span><br /><span class="gensmall">{S_TIMEZONE}</span></td>
  </tr>
</table>
#
#-----[ REPLACE WITH ]----------------------------------------
#
<!-- BEGIN pagination -->
<table border="0" cellpadding="2" cellspacing="0" width="100%">
<tr>
	<td width="100%" valign="top"><span class="gensmall">
		<b>{pagination.L_PAGE_OF}</b>&nbsp;{pagination.L_COUNT}
	</span></td>
	<td align="right" valign="top" nowrap="nowrap"><span class="gensmall">&nbsp;
		<!-- BEGIN unique_ELSE --><b>{pagination.L_GOTO}:&nbsp;</b><!-- END unique_ELSE -->
		<!-- BEGIN previous --><b><a href="{pagination.U_PREVIOUS}" class="gensmall">{pagination.L_PREVIOUS}</a>&nbsp;</b><!-- END previous -->
		<!-- BEGIN page_number --><b><!-- BEGIN number --><!-- BEGIN current_ELSE --><a href="{pagination.page_number.U_PAGE}" class="gensmall"><!-- END current_ELSE -->{pagination.page_number.PAGE}<!-- BEGIN current_ELSE --></a><!-- END current_ELSE --><!-- BEGIN sep -->, <!-- END sep --><!-- BEGINELSE number -->..., <!-- END number --></b><!-- END page_number -->
		<!-- BEGIN next --><b>&nbsp;<a href="{pagination.U_NEXT}" class="gensmall">{pagination.L_NEXT}</a></b><!-- END next -->
	</span></td>
</tr>
</table>
<!-- END pagination -->

{NAVIGATION_BOX}
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/simple_footer.tpl
#
#-----[ FIND ]------------------------------------------------
#
		</td>
	</tr>
</table>

</body>
#
#-----[ REPLACE WITH ]----------------------------------------
#

</body>
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/simple_header.tpl
#
#-----[ FIND ]------------------------------------------------
#
<style type="text/css">
<!--
#
#-----[ AFTER, ADD ]------------------------------------------
#

.absbottom {
	vertical-align: text-bottom;
}
.dom_overview_abshidden { position: absolute; visibility: hidden; width: 300px; }
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/subSilver.cfg
#
#-----[ FIND ]------------------------------------------------
#
<?php
#
#-----[ AFTER, ADD ]------------------------------------------
#
//-- mod : categories hierarchy ------------------------------------------------
#
#-----[ FIND ]------------------------------------------------
#

?>
#
#-----[ BEFORE, ADD ]-----------------------------------------
#

//-- mod : categories hierarchy ------------------------------------------------
//-- add
// vote bars sides
$images['voting_left'][0] = "$current_template_images/vote_lcap.gif";
$images['voting_left'][1] = "$current_template_images/vote_lcap.gif";
$images['voting_left'][2] = "$current_template_images/vote_lcap.gif";
$images['voting_left'][3] = "$current_template_images/vote_lcap.gif";
$images['voting_left'][4] = "$current_template_images/vote_lcap.gif";
$images['voting_right'][0] = "$current_template_images/vote_rcap.gif";
$images['voting_right'][1] = "$current_template_images/vote_rcap.gif";
$images['voting_right'][2] = "$current_template_images/vote_rcap.gif";
$images['voting_right'][3] = "$current_template_images/vote_rcap.gif";
$images['voting_right'][4] = "$current_template_images/vote_rcap.gif";

// page header
$images['logo'] = "$current_template_images/logo_phpBB.gif";
$images['logo_small'] = "$current_template_images/logo_phpBB_med.gif";
$images['earth'] = $current_template_images . '/earth.gif';

// menu
$images['menu_admin'] = "";
$images['menu_faq'] = "";
$images['menu_search'] = "";
$images['menu_memberlist'] = "";
$images['menu_usergroup'] = "";
$images['menu_register'] = "";
$images['menu_profile'] = "";
$images['menu_preferences'] = "";
$images['pm_new_msg'] =  "";
$images['pm_no_new_msg'] =  "";
$images['menu_login'] =  "";
$images['menu_logout'] =  "";

// various pics
$images['forum_mark_read'] = "";
$images['topic_mark_read'] = "";
$images['topic_unmark_read'] = "";
$images['topic_previous'] = "";
$images['topic_next'] = "";
$images['icon_go_top'] = "";

// index page
$images['whosonline'] = "$current_template_images/whosonline.gif";
$images['icon_unmark_read'] = "$current_template_images/icon_unmark_read.gif";

$images['category'] = "$current_template_images/cat_folder_big.gif";
$images['category_new'] = "$current_template_images/cat_folder_new_big.gif";
$images['category_locked'] = "$current_template_images/cat_folder_locked_big.gif";

$images['link'] = "$current_template_images/link_folder.gif";
$images['icon_minilink'] = "$current_template_images/icon_minilink.gif";

$images['forum_tiny'] = "$current_template_images/icon_minipost.gif";
$images['forum_new_tiny'] = "$current_template_images/icon_minipost_new.gif";
$images['forum_locked_tiny'] = "$current_template_images/icon_minipost_lock.gif";

$images['icon_minicat'] = "$current_template_images/icon_minicat.gif";
$images['icon_minicat_new'] = "$current_template_images/icon_minicat_new.gif";
$images['icon_minicat_locked'] = "$current_template_images/icon_minicat_lock.gif";

$images['topic_locked_tiny'] = "$current_template_images/icon_minipost_lock.gif";
$images['topic_poll_tiny'] = "$current_template_images/topic_poll_tiny.gif";
$images['topic_calendar_tiny'] = "$current_template_images/topic_calendar_tiny.gif";

// topics
$images['folder_locked_own'] = "$current_template_images/folder_lock_own.gif";
$images['folder_locked_new_own'] = "$current_template_images/folder_lock_new_own.gif";

$images['folder_global'] = "$current_template_images/folder_announce.gif";
$images['folder_global_new'] = "$current_template_images/folder_announce_new.gif";
$images['folder_global_own'] = "$current_template_images/folder_announce_own.gif";
$images['folder_global_new_own'] = "$current_template_images/folder_announce_new_own.gif";

$images['folder_announce_own'] = "$current_template_images/folder_announce_own.gif";
$images['folder_announce_new_own'] = "$current_template_images/folder_announce_new_own.gif";

$images['folder_sticky_own'] = "$current_template_images/folder_sticky_own.gif";
$images['folder_sticky_new_own'] = "$current_template_images/folder_sticky_new_own.gif";

$images['folder_moved'] = "$current_template_images/folder_moved.gif";

$images['folder_own'] = "$current_template_images/folder_own.gif";
$images['folder_new_own'] = "$current_template_images/folder_new_own.gif";
$images['folder_hot_own'] = "$current_template_images/folder_hot_own.gif";
$images['folder_hot_new_own'] = "$current_template_images/folder_new_hot_own.gif";

$images['folder_calendar'] = "$current_template_images/folder_calendar.gif";
$images['folder_calendar_new'] = "$current_template_images/folder_calendar_new.gif";
$images['folder_calendar_new_own'] = "$current_template_images/folder_calendar_new_own.gif";
$images['folder_calendar_own'] = "$current_template_images/folder_calendar_own.gif";

$images['tree_pic_' . TREE_HSPACE] = "$current_template_images/tree_hspace.gif";
$images['tree_pic_' . TREE_VSPACE] = "$current_template_images/tree_vspace.gif";
$images['tree_pic_' . TREE_CROSS] = "$current_template_images/tree_fcross.gif";
$images['tree_pic_' . TREE_CLOSE] = "$current_template_images/tree_hcross.gif";

$images['cmd_up_arrow'] = "$current_template_images/bs_arrow_up.gif";
$images['cmd_down_arrow'] = "$current_template_images/bs_arrow_down.gif";
$images['cmd_details'] = "$current_template_images/bs_command_details.gif";
$images['cmd_cancel'] = "$current_template_images/{LANG}/bs_command_cancel.gif";
$images['cmd_create'] = "$current_template_images/{LANG}/bs_command_create.gif";
$images['cmd_delete'] = "$current_template_images/{LANG}/bs_command_delete.gif";
$images['cmd_edit'] = "$current_template_images/{LANG}/bs_command_edit.gif";
$images['cmd_submit'] = "$current_template_images/{LANG}/bs_command_submit.gif";
$images['cmd_select'] = "$current_template_images/{LANG}/bs_command_select.gif";
$images['cmd_search'] = "$current_template_images/{LANG}/bs_command_search.gif";
$images['cmd_synchro'] = "$current_template_images/{LANG}/bs_command_synchro.gif";
$images['cmd_export'] = "$current_template_images/{LANG}/bs_command_export.gif";
$images['cmd_check'] = "$current_template_images/{LANG}/bs_command_check.gif";
$images['cmd_regen'] = "$current_template_images/{LANG}/bs_command_regen.gif";
$images['cmd_add'] = "$current_template_images/{LANG}/bs_command_add.gif";

$images['cmd_mini_copy'] = "$current_template_images/bs_command_mini_copy.gif";
$images['cmd_mini_cancel'] = "$current_template_images/bs_command_mini_cancel.gif";
$images['cmd_mini_create'] = "$current_template_images/bs_command_mini_create.gif";
$images['cmd_mini_delete'] = "$current_template_images/bs_command_mini_delete.gif";
$images['cmd_mini_edit'] = "$current_template_images/bs_command_mini_edit.gif";
$images['cmd_mini_submit'] = "$current_template_images/bs_command_mini_submit.gif";
$images['cmd_mini_synchro'] = "$current_template_images/bs_command_mini_synchro.gif";

$images['sts_group'] = "$current_template_images/bs_status_group.gif";
$images['sts_user'] = "$current_template_images/bs_status_user.gif";

$images['spacer'] = "$current_template_images/spacer.gif";

// calendar
$images['folder_birthday'] = "$current_template_images/folder_calendar.gif";

$images['icon_calendar'] = "$current_template_images/icon_calendar.gif";
$images['menu_calendar'] = "$current_template_images/icon_mini_calendar.gif";
$images['icon_tiny_topic'] = "$current_template_images/icon_tiny_topic.gif";
$images['icon_tiny_profile'] = "$current_template_images/icon_tiny_profile.gif";
$images['up_arrow'] = "$current_template_images/icon_up_arrow.gif";
$images['down_arrow'] = "$current_template_images/icon_down_arrow.gif";
//-- fin mod : categories hierarchy --------------------------------------------
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/subSilver.css
#
#-----[ FIND ]------------------------------------------------
#
# at top of the file
#
/*
  The original subSilver Theme for phpBB version 2+
#
#-----[ BEFORE, ADD ]-----------------------------------------
#

.absbottom {
	vertical-align: text-bottom;
}
.dom_overview_abshidden { position: absolute; visibility: hidden; width: 300px; }
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/viewonline_body.tpl
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
<table
<tr>
{U_INDEX}
</tr>
</table>
#
#-----[ REPLACE WITH ]----------------------------------------
#
{NAVIGATION_BOX}
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full line is longer
#
<img src="templates/subSilver/images/spacer.gif"
#
#----------[ IN-LINE FIND ]-----------------------------------
#
templates/subSilver/images/spacer.gif
#
#----------[ IN-LINE REPLACE WITH ]---------------------------
#
{I_SPACER}
#
#-----[ OPEN ]------------------------------------------------
#
templates/subSilver/viewtopic_poll_result.tpl
#
#-----[ FIND ]------------------------------------------------
#
# this is a partial search : the full lines are longer
#
<img src="templates/subSilver/images/vote_lcap.gif"
{poll_option.POLL_OPTION_IMG}
<img src="templates/subSilver/images/vote_rcap.gif"
#
#----------[ IN-LINE FIND ]-----------------------------------
#
templates/subSilver/images/vote_lcap.gif
#
#----------[ IN-LINE REPLACE WITH ]---------------------------
#
{poll_option.POLL_OPTION_IMG_LEFT}
#
#----------[ IN-LINE FIND ]-----------------------------------
#
templates/subSilver/images/vote_rcap.gif
#
#----------[ IN-LINE REPLACE WITH ]---------------------------
#
{poll_option.POLL_OPTION_IMG_RIGHT}
#
#-----[ SAVE/CLOSE ALL FILES ]--------------------------------
#
# EoM