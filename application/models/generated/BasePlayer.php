<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class BasePlayer extends Doctrine_Record
{
  public function setTableDefinition()
  {
    $this->setTableName('player');
    $this->hasColumn('id', 'integer', 3, array('type' => 'integer', 'unsigned' => '1', 'primary' => true, 'autoincrement' => true, 'length' => '3'));
    $this->hasColumn('name', 'string', 64, array('type' => 'string', 'default' => '', 'notnull' => true, 'length' => '64'));
    $this->hasColumn('simplified', 'string', 64, array('type' => 'string', 'default' => '', 'notnull' => true, 'length' => '64'));
    $this->hasColumn('points', 'integer', 4, array('type' => 'integer', 'default' => '0', 'notnull' => true, 'length' => '4'));
    $this->hasColumn('races', 'integer', 3, array('type' => 'integer', 'unsigned' => '1', 'default' => '', 'notnull' => true, 'length' => '3'));
    $this->hasColumn('maps', 'integer', 3, array('type' => 'integer', 'unsigned' => '1', 'default' => '0', 'notnull' => true, 'length' => '3'));
    $this->hasColumn('diff_points', 'integer', 3, array('type' => 'integer', 'default' => '', 'notnull' => true, 'length' => '3'));
    $this->hasColumn('awardval', 'integer', 3, array('type' => 'integer', 'unsigned' => '1', 'default' => '', 'notnull' => true, 'length' => '3'));
    $this->hasColumn('playtime', 'integer', 8, array('type' => 'integer', 'default' => '', 'notnull' => true, 'length' => '8'));
  }

  public function setUp()
  {
    $this->hasOne('PlayerPhpbbuser as IngameLinkage', array('local' => 'id',
                                                            'foreign' => 'player_id'));

    $this->hasMany('PhpbbUsers as User', array('refClass' => 'PlayerPhpbbuser',
                                               'local' => 'player_id',
                                               'foreign' => 'user_id'));

    $this->hasMany('Award as Awards', array('local' => 'id',
                                            'foreign' => 'player_id'));

    $this->hasMany('Race', array('local' => 'id',
                                 'foreign' => 'player_id'));

    $this->hasMany('ClanInvitation', array('local' => 'id',
                                           'foreign' => 'player_id'));

    $this->hasMany('PlayerMap', array('local' => 'id',
                                      'foreign' => 'player_id'));

    $this->hasMany('ClanMember', array('local' => 'id',
                                       'foreign' => 'player_id'));

    $this->hasMany('NickmergeRequest', array('local' => 'id',
                                             'foreign' => 'from_player_id'));
  }
}