<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class BasePhpbbUsers extends Doctrine_Record
{
  public function setTableDefinition()
  {
    $this->setTableName('phpbb_users');
    $this->hasColumn('user_id', 'integer', 3, array('type' => 'integer', 'primary' => true, 'length' => '3'));
    $this->hasColumn('user_active', 'integer', 1, array('type' => 'integer', 'default' => '1', 'length' => '1'));
    $this->hasColumn('username', 'string', 25, array('type' => 'string', 'default' => '', 'notnull' => true, 'length' => '25'));
    $this->hasColumn('user_password', 'string', 33, array('type' => 'string', 'default' => '', 'notnull' => true, 'length' => '33'));
    $this->hasColumn('user_firstname', 'string', 255, array('type' => 'string', 'default' => '', 'notnull' => true, 'length' => '255'));
    $this->hasColumn('user_lastname', 'string', 255, array('type' => 'string', 'default' => '', 'notnull' => true, 'length' => '255'));
    $this->hasColumn('ingame_flags', 'integer', 3, array('type' => 'integer', 'unsigned' => '1', 'default' => '1', 'notnull' => true, 'length' => '3'));
    $this->hasColumn('racenet_flags', 'integer', 8, array('type' => 'integer', 'unsigned' => '1', 'default' => '65536', 'notnull' => true, 'length' => '8'));
    $this->hasColumn('warsow_id', 'varchar', 64, array('type' => 'varchar', 'length' => '64'));
    $this->hasColumn('facebook_id', 'integer', 8, array('type' => 'integer', 'length' => '8'));
    $this->hasColumn('user_session_time', 'integer', 4, array('type' => 'integer', 'default' => '0', 'notnull' => true, 'length' => '4'));
    $this->hasColumn('user_session_page', 'integer', 2, array('type' => 'integer', 'default' => '0', 'notnull' => true, 'length' => '2'));
    $this->hasColumn('user_lastvisit', 'integer', 4, array('type' => 'integer', 'default' => '0', 'notnull' => true, 'length' => '4'));
    $this->hasColumn('user_regdate', 'integer', 4, array('type' => 'integer', 'default' => '0', 'notnull' => true, 'length' => '4'));
    $this->hasColumn('user_level', 'integer', 1, array('type' => 'integer', 'default' => '0', 'length' => '1'));
    $this->hasColumn('user_posts', 'integer', 3, array('type' => 'integer', 'unsigned' => '1', 'default' => '0', 'notnull' => true, 'length' => '3'));
    $this->hasColumn('user_timezone', 'decimal', 5, array('type' => 'decimal', 'default' => '0.00', 'notnull' => true, 'scale' => false, 'length' => '5'));
    $this->hasColumn('user_dateformat', 'string', 14, array('type' => 'string', 'default' => 'd M Y H:i', 'notnull' => true, 'length' => '14'));
    $this->hasColumn('user_new_privmsg', 'integer', 2, array('type' => 'integer', 'unsigned' => '1', 'default' => '0', 'notnull' => true, 'length' => '2'));
    $this->hasColumn('user_unread_privmsg', 'integer', 2, array('type' => 'integer', 'unsigned' => '1', 'default' => '0', 'notnull' => true, 'length' => '2'));
    $this->hasColumn('user_last_privmsg', 'integer', 4, array('type' => 'integer', 'default' => '0', 'notnull' => true, 'length' => '4'));
    $this->hasColumn('user_login_tries', 'integer', 2, array('type' => 'integer', 'unsigned' => '1', 'default' => '0', 'notnull' => true, 'length' => '2'));
    $this->hasColumn('user_last_login_try', 'integer', 4, array('type' => 'integer', 'default' => '0', 'notnull' => true, 'length' => '4'));
    $this->hasColumn('user_allowhtml', 'integer', 1, array('type' => 'integer', 'default' => '1', 'length' => '1'));
    $this->hasColumn('user_allowbbcode', 'integer', 1, array('type' => 'integer', 'default' => '1', 'length' => '1'));
    $this->hasColumn('user_allowsmile', 'integer', 1, array('type' => 'integer', 'default' => '1', 'length' => '1'));
    $this->hasColumn('user_allowavatar', 'integer', 1, array('type' => 'integer', 'default' => '1', 'notnull' => true, 'length' => '1'));
    $this->hasColumn('user_allow_pm', 'integer', 1, array('type' => 'integer', 'default' => '1', 'notnull' => true, 'length' => '1'));
    $this->hasColumn('user_allow_viewonline', 'integer', 1, array('type' => 'integer', 'default' => '1', 'notnull' => true, 'length' => '1'));
    $this->hasColumn('user_notify', 'integer', 1, array('type' => 'integer', 'default' => '1', 'notnull' => true, 'length' => '1'));
    $this->hasColumn('user_notify_pm', 'integer', 1, array('type' => 'integer', 'default' => '0', 'notnull' => true, 'length' => '1'));
    $this->hasColumn('user_popup_pm', 'integer', 1, array('type' => 'integer', 'default' => '0', 'notnull' => true, 'length' => '1'));
    $this->hasColumn('user_rank', 'integer', 4, array('type' => 'integer', 'default' => '0', 'length' => '4'));
    $this->hasColumn('user_avatar_type', 'integer', 1, array('type' => 'integer', 'default' => '0', 'notnull' => true, 'length' => '1'));
    $this->hasColumn('user_style', 'integer', 1, array('type' => 'integer', 'length' => '1'));
    $this->hasColumn('user_lang', 'string', 255, array('type' => 'string', 'length' => '255'));
    $this->hasColumn('user_emailtime', 'integer', 4, array('type' => 'integer', 'length' => '4'));
    $this->hasColumn('user_viewemail', 'integer', 1, array('type' => 'integer', 'length' => '1'));
    $this->hasColumn('user_attachsig', 'integer', 1, array('type' => 'integer', 'length' => '1'));
    $this->hasColumn('user_avatar', 'string', 100, array('type' => 'string', 'length' => '100'));
    $this->hasColumn('user_email', 'string', 255, array('type' => 'string', 'length' => '255'));
    $this->hasColumn('user_icq', 'string', 15, array('type' => 'string', 'length' => '15'));
    $this->hasColumn('user_website', 'string', 100, array('type' => 'string', 'length' => '100'));
    $this->hasColumn('user_from', 'string', 100, array('type' => 'string', 'length' => '100'));
    $this->hasColumn('user_sig', 'string', 2147483647, array('type' => 'string', 'length' => '2147483647'));
    $this->hasColumn('user_sig_bbcode_uid', 'string', 10, array('type' => 'string', 'length' => '10'));
    $this->hasColumn('user_aim', 'string', 255, array('type' => 'string', 'length' => '255'));
    $this->hasColumn('user_yim', 'string', 255, array('type' => 'string', 'length' => '255'));
    $this->hasColumn('user_msnm', 'string', 255, array('type' => 'string', 'length' => '255'));
    $this->hasColumn('user_occ', 'string', 100, array('type' => 'string', 'length' => '100'));
    $this->hasColumn('user_interests', 'string', 255, array('type' => 'string', 'length' => '255'));
    $this->hasColumn('user_actkey', 'string', 32, array('type' => 'string', 'length' => '32'));
    $this->hasColumn('user_newpasswd', 'string', 32, array('type' => 'string', 'length' => '32'));
  }

  public function setUp()
  {
    $this->hasOne('PlayerPhpbbuser as IngameLinkage', array('local' => 'user_id',
                                                            'foreign' => 'user_id'));

    $this->hasMany('Player as Players', array('refClass' => 'PlayerPhpbbuser',
                                              'local' => 'user_id',
                                              'foreign' => 'player_id'));

    $this->hasMany('PhpbbSessions', array('local' => 'user_id',
                                          'foreign' => 'session_user_id'));

    $this->hasMany('PhpbbPosts', array('local' => 'user_id',
                                       'foreign' => 'poster_id'));

    $this->hasMany('PhpbbSessionsKeys', array('local' => 'user_id',
                                              'foreign' => 'user_id'));

    $this->hasMany('NickmergeRequest', array('local' => 'user_id',
                                             'foreign' => 'user_id'));
  }
}